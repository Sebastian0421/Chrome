{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"网页限制解除(改)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["*www.bilibili.com/video*","*www.bilibili.com/v*","*www.bilibili.com/bangumi*","*www.youtube.com/watch*","*www.panda.tv*"],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1652610702145,"data":{"rwl_userData":"o{\"status\": 1,\"version\": 0.1,\"message\": \"啦啦啦,啦啦啦,我是卖报的小行家\",\"positionTop\": 105,\"positionLeft\": 0,\"positionRight\": \"auto\",\"addBtn\": true,\"connectToTheServer\": false,\"waitUpload\": [\"dt1.8tupian.com\",\"www.google.com\",\"jingyan.baidu.com\",\"www.hi-linux.com\",\"www.downma.com\",\"proactivationkey.com\",\"ks.wjx.top\",\"www.mafengwo.cn\",\"www.doc88.com\",\"wenku.baidu.com\",\"www.xiegw.cn\",\"doc.comsol.com\",\"kns.cnki.net\",\"www.boqii.com\",\"kns-cnki-net-443.e1.buaa.edu.cn\",\"www.macno1.com\",\"www.zotero.org\",\"www.youtube.com\",\"wulixb.iphy.ac.cn\",\"blog.51cto.com\"],\"currentURL\": \"https://blog.51cto.com/u_15279775/2998807\",\"rules\": {\"rule_def\": {\"name\": \"default\",\"hook_eventNames\": \"contextmenu|select|selectstart|copy|cut|dragstart|mousemove|beforeunload\",\"unhook_eventNames\": \"mousedown|mouseup|keydown|keyup\",\"dom0\": true,\"hook_addEventListener\": true,\"hook_preventDefault\": true,\"hook_set_returnValue\": true,\"add_css\": true},\"rule_plus\": {\"name\": \"default\",\"hook_eventNames\": \"contextmenu|select|selectstart|copy|cut|dragstart|mousedown|mouseup|mousemove|beforeunload\",\"unhook_eventNames\": \"keydown|keyup\",\"dom0\": true,\"hook_addEventListener\": true,\"hook_preventDefault\": true,\"hook_set_returnValue\": true,\"add_css\": true},\"rule_zhihu\": {\"name\": \"default\",\"hook_eventNames\": \"contextmenu|select|selectstart|copy|cut|dragstart|mousemove\",\"unhook_eventNames\": \"keydown|keyup\",\"dom0\": true,\"hook_addEventListener\": true,\"hook_preventDefault\": true,\"hook_set_returnValue\": true,\"add_css\": true}},\"data\": [\"b.faloo.com\",\"bbs.coocaa.com\",\"blog.51cto.com\",\"book.hjsm.tom.com\",\"book.zhulang.com\",\"book.zongheng.com\",\"chokstick.com\",\"chuangshi.qq.com\",\"city.udn.com\",\"cutelisa55.pixnet.net\",\"doc.comsol.com\",\"dt1.8tupian.com\",\"huayu.baidu.com\",\"imac.hk\",\"jingyan.baidu.com\",\"kns-cnki-net-443.e1.buaa.edu.cn\",\"kns.cnki.net\",\"ks.wjx.top\",\"life.tw\",\"luxmuscles.com\",\"movie.douban.com\",\"news.missevan.com\",\"proactivationkey.com\",\"read.qidian.com\",\"vipreader.qidian.com\",\"wenku.baidu.com\",\"wulixb.iphy.ac.cn\",\"www.15yan.com\",\"www.17k.com\",\"www.18183.com\",\"www.360doc.com\",\"www.boqii.com\",\"www.coco01.net\",\"www.doc88.com\",\"www.downma.com\",\"www.eyu.com\",\"www.hi-linux.com\",\"www.hongshu.com\",\"www.hongxiu.com\",\"www.imooc.com\",\"www.jjwxc.net\",\"www.macno1.com\",\"www.mafengwo.cn\",\"www.myhtlmebook.com\",\"www.pigai.org\",\"www.ppkao.com\",\"www.readnovel.com\",\"www.ruiwen.com\",\"www.sdifen.com\",\"www.shangc.net\",\"www.tadu.com\",\"www.xiegw.cn\",\"www.xxsy.net\",\"www.youtube.com\",\"www.z3z4.com\",\"www.zhihu.com\",\"www.zotero.org\",\"yuedu.163.com\"],\"shortcut\": 3}"}},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/28497-remove-web-limits-modified/code/Remove%20web%20limits(modified).user.js","uuid":"59cc6a9c-6cd1-4c25-820d-7683d2bfa452","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSAgICAgICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vdXNlcnMvMTA2MjIyLXF4aW4taQogCi8vIEBuYW1lICAgICAgICAgICAgICDnvZHpobXpmZDliLbop6PpmaQo5pS5KQovLyBAbmFtZTplbiAgICAgICAgICAgUmVtb3ZlIHdlYiBsaW1pdHMobW9kaWZpZWQpCi8vIEBuYW1lOnpoICAgICAgICAgICDnvZHpobXpmZDliLbop6PpmaQo5pS5KQovLyBAbmFtZTpqYSAgICAgICAgICAg44Km44Kn44OW44Gu6KaP5Yi257ep5ZKMKOWkieabtCkKIAovLyBAYXV0aG9yICAgICAgICAgICAgQ2F0NzMgJiBpcXhpbijkv67mlLkpIAovLyBAY29udHJpYnV0b3IgICAgICAgaXF4aW4KIAovLyBAZGVzY3JpcHRpb24gICAgICAg6YCa5p2A5aSn6YOo5YiG572R56uZLOWPr+S7peino+mZpOemgeatouWkjeWItuOAgeWJquWIh+OAgemAieaLqeaWh+acrOOAgeWPs+mUruiPnOWNleeahOmZkOWItuOAguWOn+S9nOiAhWNhdDczLOWboOS4uuWSjOaQnOe0oui3s+i9rOiEmuacrOWGsueqgSzpgYLov5vooYzkuobmlLnliqjjgIIKLy8gQGRlc2NyaXB0aW9uOmVuICAgIFBhc3MgdG8ga2lsbCBtb3N0IG9mIHRoZSBzaXRlLCB5b3UgY2FuIGxpZnQgdGhlIHJlc3RyaWN0aW9ucyBwcm9oaWJpdGVkIHRvIGNvcHksIGN1dCwgc2VsZWN0IHRoZSB0ZXh0LCByaWdodC1jbGljayBtZW51LnJldmlzZWQgdmVyc2lvbgovLyBAZGVzY3JpcHRpb246emggICAg6YCa5p2A5aSn6YOo5YiG572R56uZLOWPr+S7peino+mZpOemgeatouWkjeWItuOAgeWJquWIh+OAgemAieaLqeaWh+acrOOAgeWPs+mUruiPnOWNleeahOmZkOWItuOAguWOn+S9nOiAhWNhdDczLOWboOS4uuWSjOaQnOe0oui3s+i9rOiEmuacrOWGsueqgSzpgYLov5vooYzkuobmlLnliqgKLy8gQGRlc2NyaXB0aW9uOnpoLVRXIOmAmuauuuWkp+mDqOWIhue2suermSzlj6/ku6Xop6PpmaTnpoHmraLlvqnliLbjgIHliarliIfjgIHpgbjmk4fmlofmnKzjgIHlj7PpjbXoj5zllq7nmoTpmZDliLbjgIIKLy8gQGRlc2NyaXB0aW9uOmphICAgIOOCteOCpOODiOOBruOBu+OBqOOCk+OBqeOCkuauuuOBmeOBn+OCgeOBq+a4oeOBl+OAgeOBguOBquOBn+OBr+OAgeOCs+ODlOODvOWIh+OCiuWPluOCiuOAgeODhuOCreOCueODiOOAgeWPs+OCr+ODquODg+OCr+ODoeODi+ODpeODvOOCkumBuOaKnuOBmeOCi+OBk+OBqOOBr+emgeatouOBruWItumZkOOCkuino+mZpOOBmeOCi+OBk+OBqOOBjOOBp+OBjeOBvuOBmeOAggogCi8vIEBkZXNjcmlwdGlvbiAgICAgICDljp/kvZzogIVodHRwczovL3d3dy5naXRodWIuY29tL0NhdDczNzMvLOWboOS4uuWSjOaQnOe0oui3s+i9rOiEmuacrOWGsueqgSzpgYLov5vooYzkuobmlLnliqgKLy8gQGhvbWVwYWdlVVJMICAgICAgIGh0dHBzOi8vY2F0NzM3My5naXRodWIuaW8vcmVtb3ZlLXdlYi1saW1pdHMvCi8vIEBzdXBwb3J0VVJMICAgICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvMjg0OTcKIAovLyBAaWNvbiAgICAgICAgICAgICAgIGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBUUFBQURaYzdKL0FBQUJwRWxFUVZSNG5PM1Z2MnVVUVJERzhjL2ViU01XcWF5MHRyQVRBeHJVU2kxUzJBaVdGb0pZcE5DZ29CalVSc0hXSktlTlJmQXZzRGdGaXhRcUtkUFoyVmlFaUNKWUJPUXU4ZjFoRVhPNTk3MTNqN01VZkxaNmQyYS9POHZNTzBPekRuaW45S3UyTWp2dWF3MDd4Z1NBWUVWWGUyaW5kTWhqOTJ6cEtKTG5CaEY4TURleWU5aG42emJONzBlUmlxQ3cwMkJyYTN1cDhCQkx1MUZFQnhzQnVjWHFXNGNzejBVTGU0am9yU0NNdVBVODlib1JFTERNSGlJNlk4VjY1YmJDVVRjY2M3MFJrYU93S0xPZzBJa3lYYTlxVGpPdTJMQXM2Tlp1RDg2aHJkVHl4Uk5Ua1VxcWRoWGxIcm5nR1JWRVpzTXBKd2V4OUR4SVpTSFljbGVzSWI2NUxDb0hnSXM2NlVKcTZidERCWkhaclBoOFY2WUJPWDY2TGJPa1RHY2tCWWltQlcyRlZUTmV1T1pOeXJGSjIzNllsNE5TeTVTYlZtMVBEdmhvZHFneU1sZWRUZFJsQXREenFmTDl0Zmt3VXR5YVJrdjlMd0ZqOUIvdzd3UHljWE9ocWxKMHlaSEtQQ2hNaTVNQ2lNNDdYaHNvcGJWSkFVSGZyWWJtTi9FVG9OKzAyZUxQZno5T1l5WmhGSnpXMUpuM2xUc3hhS1FqQ2twNTJqeTQ1cjFadlNiVGI5TTBkNFBCb3pHWkFBQUFBRWxGVGtTdVFtQ0MKIAovLyBAdmVyc2lvbiAgICAgICAgICAgNC40LjYKLy8gQGxpY2Vuc2UgICAgICAgICAgIExHUEx2MwogCi8vIEBtYXRjaCAgICAgICAgICAgICAqOi8vKi8qCi8vIEBleGNsdWRlICAgICAgICAqd3d3LmJpbGliaWxpLmNvbS92aWRlbyoKLy8gQGV4Y2x1ZGUgICAgICAgICp3d3cuYmlsaWJpbGkuY29tL3YqCi8vIEBleGNsdWRlICAgICAgICAqd3d3LmJpbGliaWxpLmNvbS9iYW5ndW1pKgovLyBAZXhjbHVkZSAgICAgICAgKnd3dy55b3V0dWJlLmNvbS93YXRjaCoKLy8gQGV4Y2x1ZGUgICAgICAgICp3d3cucGFuZGEudHYqCiAKLy8gQGNvbm5lY3QgICAgIGVlbW0ubWUKLy8gQGdyYW50ICAgICAgIEdNX2dldFZhbHVlCi8vIEBncmFudCAgICAgICBHTV9zZXRWYWx1ZQovLyBAZ3JhbnQgICAgICAgR01fYWRkU3R5bGUKLy8gQGdyYW50ICAgICAgIEdNX2RlbGV0ZVZhbHVlCi8vIEBncmFudCAgICAgICBHTV94bWxodHRwUmVxdWVzdAovLyBAZ3JhbnQgICAgICAgR01fc2V0Q2xpcGJvYXJkCi8vIEBncmFudCAgICAgICBHTV9yZWdpc3Rlck1lbnVDb21tYW5kCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1zdGFydAovLyA9PS9Vc2VyU2NyaXB0PT0KKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwogCiAgICB2YXIgc2V0dGluZ0RhdGEgPSB7CiAgICAgICAgInN0YXR1cyI6MSwKICAgICAgICAidmVyc2lvbiIgOiAwLjEsCiAgICAgICAgIm1lc3NhZ2UiIDogIuWVpuWVpuWVpizllabllabllaYs5oiR5piv5Y2W5oql55qE5bCP6KGM5a62IiwKICAgICAgICAicG9zaXRpb25Ub3AiOiIwIiwKICAgICAgICAicG9zaXRpb25MZWZ0IjoiMCIsCiAgICAgICAgInBvc2l0aW9uUmlnaHQiOiJhdXRvIiwKICAgICAgICAiYWRkQnRuIiA6IHRydWUsCiAgICAgICAgImNvbm5lY3RUb1RoZVNlcnZlciIgOiBmYWxzZSwKICAgICAgICAid2FpdFVwbG9hZCI6W10sCiAgICAgICAgImN1cnJlbnRVUkwiOiJudWxsIiwKICAgICAgICAic2hvcnRjdXQiOjMsCiAgICAgICAgLy8g5Z+f5ZCN6KeE5YiZ5YiX6KGoCiAgICAgICAgInJ1bGVzIiA6IHsKICAgICAgICAgICAgInJ1bGVfZGVmIjogewogICAgICAgICAgICAgICAgIm5hbWUiOiAiZGVmYXVsdCIsCiAgICAgICAgICAgICAgICAiaG9va19ldmVudE5hbWVzIjogImNvbnRleHRtZW51fHNlbGVjdHxzZWxlY3RzdGFydHxjb3B5fGN1dHxkcmFnc3RhcnR8bW91c2Vtb3ZlfGJlZm9yZXVubG9hZCIsCiAgICAgICAgICAgICAgICAidW5ob29rX2V2ZW50TmFtZXMiOiAibW91c2Vkb3dufG1vdXNldXB8a2V5ZG93bnxrZXl1cCIsCiAgICAgICAgICAgICAgICAiZG9tMCI6IHRydWUsCiAgICAgICAgICAgICAgICAiaG9va19hZGRFdmVudExpc3RlbmVyIjogdHJ1ZSwKICAgICAgICAgICAgICAgICJob29rX3ByZXZlbnREZWZhdWx0IjogdHJ1ZSwKICAgICAgICAgICAgICAgICJob29rX3NldF9yZXR1cm5WYWx1ZSI6IHRydWUsCiAgICAgICAgICAgICAgICAiYWRkX2NzcyI6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInJ1bGVfcGx1cyI6IHsKICAgICAgICAgICAgICAgICJuYW1lIjogImRlZmF1bHQiLAogICAgICAgICAgICAgICAgImhvb2tfZXZlbnROYW1lcyI6ICJjb250ZXh0bWVudXxzZWxlY3R8c2VsZWN0c3RhcnR8Y29weXxjdXR8ZHJhZ3N0YXJ0fG1vdXNlZG93bnxtb3VzZXVwfG1vdXNlbW92ZXxiZWZvcmV1bmxvYWQiLAogICAgICAgICAgICAgICAgInVuaG9va19ldmVudE5hbWVzIjogImtleWRvd258a2V5dXAiLAogICAgICAgICAgICAgICAgImRvbTAiOiB0cnVlLAogICAgICAgICAgICAgICAgImhvb2tfYWRkRXZlbnRMaXN0ZW5lciI6IHRydWUsCiAgICAgICAgICAgICAgICAiaG9va19wcmV2ZW50RGVmYXVsdCI6IHRydWUsCiAgICAgICAgICAgICAgICAiaG9va19zZXRfcmV0dXJuVmFsdWUiOiB0cnVlLAogICAgICAgICAgICAgICAgImFkZF9jc3MiOiB0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJydWxlX3poaWh1IjogewogICAgICAgICAgICAgICAgIm5hbWUiOiAiZGVmYXVsdCIsCiAgICAgICAgICAgICAgICAiaG9va19ldmVudE5hbWVzIjogImNvbnRleHRtZW51fHNlbGVjdHxzZWxlY3RzdGFydHxjb3B5fGN1dHxkcmFnc3RhcnR8bW91c2Vtb3ZlIiwKICAgICAgICAgICAgICAgICJ1bmhvb2tfZXZlbnROYW1lcyI6ICJrZXlkb3dufGtleXVwIiwKICAgICAgICAgICAgICAgICJkb20wIjogdHJ1ZSwKICAgICAgICAgICAgICAgICJob29rX2FkZEV2ZW50TGlzdGVuZXIiOiB0cnVlLAogICAgICAgICAgICAgICAgImhvb2tfcHJldmVudERlZmF1bHQiOiB0cnVlLAogICAgICAgICAgICAgICAgImhvb2tfc2V0X3JldHVyblZhbHVlIjogdHJ1ZSwKICAgICAgICAgICAgICAgICJhZGRfY3NzIjogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAiZGF0YSI6IFsKICAgICAgICAgICAgImIuZmFsb28uY29tIiwKICAgICAgICAgICAgImJicy5jb29jYWEuY29tIiwKICAgICAgICAgICAgImJvb2suaGpzbS50b20uY29tIiwKICAgICAgICAgICAgImJvb2suemh1bGFuZy5jb20iLAogICAgICAgICAgICAiYm9vay56b25naGVuZy5jb20iLAogICAgICAgICAgICAiY2hva3N0aWNrLmNvbSIsCiAgICAgICAgICAgICJjaHVhbmdzaGkucXEuY29tIiwKICAgICAgICAgICAgImNpdHkudWRuLmNvbSIsCiAgICAgICAgICAgICJjdXRlbGlzYTU1LnBpeG5ldC5uZXQiLAogICAgICAgICAgICAiaHVheXUuYmFpZHUuY29tIiwKICAgICAgICAgICAgImltYWMuaGsiLAogICAgICAgICAgICAibGlmZS50dyIsCiAgICAgICAgICAgICJsdXhtdXNjbGVzLmNvbSIsCiAgICAgICAgICAgICJuZXdzLm1pc3NldmFuLmNvbSIsCiAgICAgICAgICAgICJyZWFkLnFpZGlhbi5jb20iLAogICAgICAgICAgICAid3d3LjE1eWFuLmNvbSIsCiAgICAgICAgICAgICJ3d3cuMTdrLmNvbSIsCiAgICAgICAgICAgICJ3d3cuMTgxODMuY29tIiwKICAgICAgICAgICAgInd3dy4zNjBkb2MuY29tIiwKICAgICAgICAgICAgInd3dy5jb2NvMDEubmV0IiwKICAgICAgICAgICAgInd3dy5leXUuY29tIiwKICAgICAgICAgICAgInd3dy5ob25nc2h1LmNvbSIsCiAgICAgICAgICAgICJ3d3cuaG9uZ3hpdS5jb20iLAogICAgICAgICAgICAid3d3Lmltb29jLmNvbSIsCiAgICAgICAgICAgICJ3d3cuamp3eGMubmV0IiwKICAgICAgICAgICAgInd3dy5yZWFkbm92ZWwuY29tIiwKICAgICAgICAgICAgInd3dy50YWR1LmNvbSIsCiAgICAgICAgICAgICJ3d3cueHhzeS5uZXQiLAogICAgICAgICAgICAid3d3LnozejQuY29tIiwKICAgICAgICAgICAgInd3dy56aGlodS5jb20iLAogICAgICAgICAgICAieXVlZHUuMTYzLmNvbSIsCiAgICAgICAgICAgICJ3d3cucHBrYW8uY29tIiwKICAgICAgICAgICAgIm1vdmllLmRvdWJhbi5jb20iLAogICAgICAgICAgICAid3d3LnJ1aXdlbi5jb20iLAogICAgICAgICAgICAidmlwcmVhZGVyLnFpZGlhbi5jb20iLAogICAgICAgICAgICAid3d3LnBpZ2FpLm9yZyIsCiAgICAgICAgICAgICJ3d3cuc2hhbmdjLm5ldCIsCiAgICAgICAgICAgICJ3d3cubXlodGxtZWJvb2suY29tIiwKICAgICAgICAgICAgInd3dy55dXF1ZS5jb20iLAogICAgICAgICAgICAid3d3LmxvbmdtYWJvb2tjbi5jb20iLAogICAgICAgICAgICAid3d3LmFscGhhcG9saXMuY28uanAiLAogICAgICAgICAgICAid3d3LnNkaWZlbi5jb20iLAogICAgICAgICAgICAidm90ZXR3LmNvbSIsCiAgICAgICAgICAgICJib2tlMTEyLmNvbSIsCiAgICAgICAgICAgICJ3d3cubXlodGVib29rcy5jb20iLAogICAgICAgICAgICAid3d3LnhpZWd3LmNuIiwKICAgICAgICAgICAgImNodWFuZ3NoaS5xcS5jb20iLAogICAgICAgICAgICAid3d3LnV0YS1uZXQuY29tIiwKICAgICAgICAgICAgInd3dy5iaW1pYWNnLm5ldCIKICAgICAgICBdCiAgICB9CiAKICAgIHZhciByd2xfdXNlckRhdGEgPSBudWxsOwogICAgdmFyIGhvc3RuYW1lID0gd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lOwogICAgdmFyIGJ0bl9ub2RlID0gbnVsbDsgICAKICAgIHZhciBydWxlID0gbnVsbDsKICAgIHZhciBsaXN0ID0gbnVsbDsKICAgIHZhciBoYXNGcmFtZSA9IGZhbHNlOwogCiAgICAvLyDlgqjlrZjlkI3np7AKICAgIHZhciBzdG9yYWdlTmFtZSA9ICJpcXhpblN0b3JhZ2VOYW1lIjsKICAgIC8vIOimgeWkhOeQhueahCBldmVudCDliJfooagKICAgIHZhciBob29rX2V2ZW50TmFtZXMsIHVuaG9va19ldmVudE5hbWVzLCBldmVudE5hbWVzOwogICAgLy8g5YKo5a2Y6KKrIEhvb2sg55qE5Ye95pWwCiAgICB2YXIgRXZlbnRUYXJnZXRfYWRkRXZlbnRMaXN0ZW5lciA9IEV2ZW50VGFyZ2V0LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyOwogICAgdmFyIGRvY3VtZW50X2FkZEV2ZW50TGlzdGVuZXIgPSBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyOwogICAgdmFyIEV2ZW50X3ByZXZlbnREZWZhdWx0ID0gRXZlbnQucHJvdG90eXBlLnByZXZlbnREZWZhdWx0OwogCiAgICAvLyDmn6XnnIvmnKzlnLDmmK/lkKblrZjlnKjml6fmlbDmja4KICAgIHJ3bF91c2VyRGF0YSA9IEdNX2dldFZhbHVlKCJyd2xfdXNlckRhdGEiKTsKICAgIGlmKCFyd2xfdXNlckRhdGEpewogICAgICAgIHJ3bF91c2VyRGF0YSA9IHNldHRpbmdEYXRhCiAgICAgICAgLy8gR01fc2V0VmFsdWUoInJ3bF91c2VyRGF0YSIscndsX3VzZXJEYXRhKTsKICAgIH0KICAgIC8vIOiHquWKqOabtOaWsOaVsOaNrgogICAgZm9yKGxldCB2YWx1ZSBpbiBzZXR0aW5nRGF0YSl7CiAgICAgICAgaWYoIXJ3bF91c2VyRGF0YS5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpewogICAgICAgICAgICByd2xfdXNlckRhdGFbdmFsdWVdID0gc2V0dGluZ0RhdGFbdmFsdWVdOwogICAgICAgICAgICBHTV9zZXRWYWx1ZSgicndsX3VzZXJEYXRhIixyd2xfdXNlckRhdGEpOwogICAgICAgIH0KICAgIH0KIAogICAgdmVyc2lvbl91cF8zX3RvXzQoKTsKIAogICAgLy8g6I635Y+W6buR5ZCN5Y2V572R56uZCiAgICBsaXN0ID0gZ2V0X2JsYWNrX2xpc3QoKTsKIAogICAgLy8g5re75Yqg5oyJ6ZKuCiAgICAvLyBpZihyd2xfdXNlckRhdGEuYWRkQnRuKXsKICAgICAgICBhZGRCdG4oKTsgIC8vIOa3u+WKoAogICAgICAgIGJ0bl9ub2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImJsYWNrX25vZGUiKTsKIAogICAgICAgIHZhciB0aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIGlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJibGFja19ub2RlIikpewogICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7CiAgICAgICAgICAgICAgICBxeGluU3RhcnQoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGFkZEJ0bigpOwogICAgICAgICAgICB9CiAgICAgICAgfSw1MDApCiAKICAgIC8vIH0KIAogICAgR01fcmVnaXN0ZXJNZW51Q29tbWFuZCgi5aSN5Yi26ZmQ5Yi26Kej6ZmkIOiuvue9riIsIHNldE1lbnUpCiAgICB2YXIgdXNlclNldHRpbmcgPSBHTV9nZXRWYWx1ZSgicndsX3VzZXJEYXRhIik7CiAKICAgIC8vIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLeWHveaVsCBmdW5jCiAKICAgIGZ1bmN0aW9uIHF4aW5TdGFydCgpewogICAgICAgIGNvbnNvbGUubG9nKCLohJrmnKw6IOWkjeWItumZkOWItuino+mZpCjmlLkpIC0tLSDlvIDlp4vmiafooYwgLS0tIOWPkeW4g+iAhTogcXhpbiAtLS0gR2l0SHViOiBodHRwczovL2dpdGh1Yi5jb20vcXhpbkdpdEh1Yi9SZW1vdmUtd2ViLWxpbWl0cy0iKTsKICAgICAgICBhZGREcmFnRXZlbigpOwogICAgICAgIHNldEJ0bkNsaWNrKCk7CiAKICAgICAgICAvLyDmo4Dmn6XmmK/lkKblnKjpu5HlkI3ljZXkuK0KICAgICAgICBpZihjaGVja19ibGFja19saXN0KGxpc3QsaG9zdG5hbWUpKXsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGlmKHJ3bF91c2VyRGF0YS5hZGRCdG4pewogICAgICAgICAgICAgICAgICAgIGJ0bl9ub2RlLmNoZWNrZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCLohJrmnKxyd2wt6ZSZ6K+v77yaXG4gYnRuX25vZGUgOiAlc1xuJXNcbuiEmuacrHJ3bC3plJnor6/kvY3nva7vvJogYnRuX25vZGUuY2hlY2tlZCA9IHRydWU7IixidG5fbm9kZSxlKTsKICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgIGluaXQoKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KIAogICAgLy/mt7vliqDmjInpkq4gZnVuYwogICAgZnVuY3Rpb24gYWRkQnRuKCl7CiAgICAgICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJyZW1vdmUtd2ViLWxpbWl0cy1pcXhpbiIpOwogICAgICAgIG5vZGUuaWQgPSAicndsLWlxeGluIjsKICAgICAgICBub2RlLmNsYXNzTmFtZSA9ICJyd2wtZXhlbXB0IjsKIAogICAgICAgIC8vIOWGjeasoeaJk+W8gOeql+WPo+Wwj+S6juS5i+WJjeeql+WPo+eahOaDheWGtSzlr7zoh7TmjInpkq7lh7rnjrDlnKjlj6/op4bnqpflj6PkuYvlpJYKICAgICAgICB2YXIgc2NyZWVuQ2xpZW50SGVpZ2h0ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDsKICAgICAgICB2YXIgdGVtcEhlaWdodDsKICAgICAgICBpZiAocndsX3VzZXJEYXRhLnBvc2l0aW9uVG9wPnNjcmVlbkNsaWVudEhlaWdodCl7CiAgICAgICAgICAgIHRlbXBIZWlnaHQgID0gc2NyZWVuQ2xpZW50SGVpZ2h0IC00MDsKICAgICAgICB9IGVsc2V7CiAgICAgICAgICAgIHRlbXBIZWlnaHQgPSByd2xfdXNlckRhdGEucG9zaXRpb25Ub3A7CiAgICAgICAgfQogICAgICAgIC8vIOaUueWPmOeql+WPo+Wkp+Wwj+eahOaDheWGtQogICAgICAgIHdpbmRvdy5vbnJlc2l6ZT1mdW5jdGlvbigpeyAgCiAgICAgICAgICAgIHZhciBzY3JlZW5DbGllbnRIZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0OwogICAgICAgICAgICB2YXIgdGVtcEhlaWdodDsKIAogICAgICAgICAgICBpZiAocndsX3VzZXJEYXRhLnBvc2l0aW9uVG9wPnNjcmVlbkNsaWVudEhlaWdodCl7CiAgICAgICAgICAgICAgICAgICAgdGVtcEhlaWdodCAgPSBzY3JlZW5DbGllbnRIZWlnaHQgLTQwOwogICAgICAgICAgICB9IGVsc2V7CiAgICAgICAgICAgICAgICB0ZW1wSGVpZ2h0ID0gcndsX3VzZXJEYXRhLnBvc2l0aW9uVG9wOwogICAgICAgICAgICB9CiAKICAgICAgICAgICAgbm9kZS5zdHlsZS50b3AgPSAgdGVtcEhlaWdodCArICJweCI7CiAgICAgICAgfQogCiAgICAgICAgdGVtcEhlaWdodCA9IHRlbXBIZWlnaHQ8MD8wOnRlbXBIZWlnaHQKICAgICAgICBub2RlLnN0eWxlLmNzc1RleHQgPSAicG9zaXRpb246Zml4ZWQ7dG9wOiIrdGVtcEhlaWdodCsicHg7bGVmdDoiK3J3bF91c2VyRGF0YS5wb3NpdGlvbkxlZnQrInB4O3JpZ2h0OiIrcndsX3VzZXJEYXRhLnBvc2l0aW9uUmlnaHQrInB4OyI7CiAgICAgICAgLy8gbm9kZS5pbm5lckhUTUwgPSAnPGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iIiBpZD0iYmxhY2tfbm9kZSI+6buR5ZCN5Y2VPC9sYWJlbD48cXhpbmJ1dHRvbiBpZD0iZGVsZXRlIj5kZWxldGU8L2J0dG9uPic7CiAgICAgICAgLy8gbm9kZS5pbm5lckhUTUwgPSAnPGxhYmVsPumZkOWItuino+mZpCA8aW5wdXQgdHlwZT0iY2hlY2tib3giICBuYW1lPSIiIGlkPSJibGFja19ub2RlIj48L2xhYmVsPic7CiAgICAgICAgbm9kZS5pbm5lckhUTUwgPSAnPHF4aW5idXR0b24gdHlwZT0icXhpbmJ1dHRvbiIgaWQ9InJ3bC1zZXRidG4iPiBzZXQgPC9xeGluYnV0dG9uPiA8bGFsYWxhIHN0eWxlPSJjdXJzb3I6bW92ZTsgZm9udC1zaXplOjEycHg7Ij7pmZDliLbop6PpmaQ8L2xhbGFsYT4gPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSIiIGlkPSJibGFja19ub2RlIiA+JzsKICAgICAgICBpZih3aW5kb3cuc2VsZiA9PT0gd2luZG93LnRvcCl7CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJib2R5IikpewogICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChub2RlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZChub2RlKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsZnVuY3Rpb24oKXsKICAgICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKCJyd2wtYWN0aXZlLWlxeGluIik7CiAgICAgICAgfSk7CiAgICAgICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWxlYXZlIixmdW5jdGlvbigpewogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICAgICAgICAgICAgICBub2RlLmNsYXNzTGlzdC5yZW1vdmUoInJ3bC1hY3RpdmUtaXF4aW4iKTsKICAgICAgICAgICAgICAgIGJsYWNrX2NoZWNrKGJsYWNrX25vZGUuY2hlY2tlZCk7CiAgICAgICAgICAgIH0sMTAwKQogICAgICAgIH0pOwogCiAgICAgICAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTsKICAgICAgICBzdHlsZS50eXBlPSJ0ZXh0L2NzcyI7CiAKICAgICAgICB2YXIgc3R5bGVJbm5lciA9ICIjcndsLWlxeGlueyIgKwogICAgICAgICAgICAgICAgInBvc2l0aW9uOmZpeGVkOyIgKwogICAgICAgICAgICAgICAgInRyYW5zZm9ybTp0cmFuc2xhdGUoLTk1cHgsMCk7IiArCiAgICAgICAgICAgICAgICAid2lkdGg6ODVweDsiICsKICAgICAgICAgICAgICAgICJoZWlnaHQ6MjVweDsiICsKICAgICAgICAgICAgICAgICJmb250LXNpemU6MTJweDsiICsKICAgICAgICAgICAgICAgICJmb250LXdlaWdodDogNTAwOyIgKwogICAgICAgICAgICAgICAgImZvbnQtZmFtaWx5OlZlcmRhbmEsIEFyaWFsLCAn5a6L5L2TJzsiICsKICAgICAgICAgICAgICAgICJjb2xvcjojZmZmOyIgKwogICAgICAgICAgICAgICAgImJhY2tncm91bmQ6IzMzMzsiICsKICAgICAgICAgICAgICAgICJ6LWluZGV4OjIxNDc0ODM2NDc7IiArCiAgICAgICAgICAgICAgICAibWFyZ2luOiAwOyIgKwogICAgICAgICAgICAgICAgIm9wYWNpdHk6MC4wNTsiICsKICAgICAgICAgICAgICAgICJ0cmFuc2l0aW9uOjAuM3M7IiArCiAgICAgICAgICAgICAgICAib3ZlcmZsb3c6aGlkZGVuOyIgKwogICAgICAgICAgICAgICAgInVzZXItc2VsZWN0Om5vbmU7IiArCiAgICAgICAgICAgICAgICAidGV4dC1hbGlnbjpjZW50ZXI7IiArCiAgICAgICAgICAgICAgICAid2hpdGUtc3BhY2U6bm93cmFwOyIgKwogICAgICAgICAgICAgICAgImxpbmUtaGVpZ2h0OjI1cHg7IiArCiAgICAgICAgICAgICAgICAicGFkZGluZzowIDE2cHg7IiArCiAgICAgICAgICAgICAgICAiYm9yZGVyOjFweCBzb2xpZCAjY2NjOyIgKwogICAgICAgICAgICAgICAgImJvcmRlci13aWR0aDoxcHggMXB4IDFweCAwOyIgKwogICAgICAgICAgICAgICAgImJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjVweDsiICsKICAgICAgICAgICAgICAgICJib3gtc2l6aW5nOiBjb250ZW50LWJveDsiICsKICAgICAgICAgICAgIn0iICsKICAgICAgICAgICAgIiNyd2wtaXF4aW4gaW5wdXR7IiArCiAgICAgICAgICAgICAgICAibWFyZ2luOiAwOyIgKwogICAgICAgICAgICAgICAgInBhZGRpbmc6IDA7IiArCiAgICAgICAgICAgICAgICAidmVydGljYWwtYWxpZ246bWlkZGxlOyIgKwogICAgICAgICAgICAgICAgIi13ZWJraXQtYXBwZWFyYW5jZTpjaGVja2JveDsiICsKICAgICAgICAgICAgICAgICItbW96LWFwcGVhcmFuY2U6Y2hlY2tib3g7IiArCiAgICAgICAgICAgICAgICAicG9zaXRpb246IHN0YXRpYzsiICsKICAgICAgICAgICAgICAgICJjbGlwOiBhdXRvOyIgKwogICAgICAgICAgICAgICAgIm9wYWNpdHk6IDE7IiArCiAgICAgICAgICAgICAgICAiY3Vyc29yOiBwb2ludGVyOyIgKwogICAgICAgICAgICAifSIgKwogICAgICAgICAgICAiI3J3bC1pcXhpbi5yd2wtYWN0aXZlLWlxeGlueyIgKwogICAgICAgICAgICAgICAgImxlZnQ6IDBweDsiICsKICAgICAgICAgICAgICAgICJ0cmFuc2Zvcm06dHJhbnNsYXRlKDAsMCk7IiArCiAgICAgICAgICAgICAgICAib3BhY2l0eTogMC45OyIgKwogICAgICAgICAgICAgICAgImhlaWdodDogMzJweDsiICsKICAgICAgICAgICAgICAgICJsaW5lLWhlaWdodDogMzJweCIgKwogICAgICAgICAgICAifSIgKwogICAgICAgICAgICAiI3J3bC1pcXhpbiBsYWJlbHsiICsKICAgICAgICAgICAgICAgICJtYXJnaW46MDsiICsKICAgICAgICAgICAgICAgICJwYWRkaW5nOjA7IiArCiAgICAgICAgICAgICAgICAiZm9udC13ZWlnaHQ6NTAwOyIgKwogICAgICAgICAgICAifSIgKwogICAgICAgICAgICAiI3J3bC1pcXhpbiAjcndsLXNldGJ0bnsiICsKICAgICAgICAgICAgICAgICJtYXJnaW46IDAgNHB4IDAgMDsiICsKICAgICAgICAgICAgICAgICJwYWRkaW5nOiAwIDAgMCA0cHg7IiArCiAgICAgICAgICAgICAgICAiYm9yZGVyOiBub25lOyIgKwogICAgICAgICAgICAgICAgImJvcmRlci1yYWRpdXM6IDJweDsiICsKICAgICAgICAgICAgICAgICJjdXJzb3I6IHBvaW50ZXI7IiArCiAgICAgICAgICAgICAgICAiYmFja2dyb3VuZDogI2ZmZjsiICsKICAgICAgICAgICAgICAgICJjb2xvcjogIzAwMDsiICsKICAgICAgICAgICAgIn0iICsKICAgICAgICAgICAgIiAiCiAgICAgICAgICAgIAogICAgICAgIGlmKCFyd2xfdXNlckRhdGEuYWRkQnRuKXsKICAgICAgICAgICAgdmFyIHN0eWxlVGVtcCA9ICIjcndsLWlxeGlue2Rpc3BsYXk6bm9uZX0iOwogICAgICAgICAgICBzdHlsZS5pbm5lckhUTUwgPSBzdHlsZUlubmVyICsgc3R5bGVUZW1wOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHN0eWxlLmlubmVySFRNTCA9IHN0eWxlSW5uZXI7CiAgICAgICAgfQogICAgICAgIGlmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNyd2wtaXF4aW4iKSl7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCLpgJrov4dzdHlsZeaPkuWFpSIpOwogICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjcndsLWlxeGluIikuYXBwZW5kQ2hpbGQoc3R5bGUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCLpgJrov4dHTeaPkuWFpSIpOwogICAgICAgICAgICBHTV9hZGRTdHlsZShzdHlsZUlubmVyKTsKICAgICAgICB9CiAgICB9OwogCiAgICAvLyDnu5nmjInpkq7nu5Hlrprngrnlh7vkuovku7YKICAgIGZ1bmN0aW9uIHNldEJ0bkNsaWNrKCl7ICAKICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjcndsLXNldGJ0biIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIixzZXRNZW51KTsKICAgIH0KIAogICAgLy8g6I+c5Y2VCiAgICAgZnVuY3Rpb24gc2V0TWVudSgpewogICAgICAgICAgICB2YXIgb2xkRWRpdEJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNyd2wtc2V0TWVudSIpOwogICAgICAgICAgICBpZihvbGRFZGl0Qm94KXsKICAgICAgICAgICAgICAgIG9sZEVkaXRCb3gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvbGRFZGl0Qm94KTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgdXNlclNldHRpbmcgPSBHTV9nZXRWYWx1ZSgicndsX3VzZXJEYXRhIik7CiAgICAgICAgICAgIHZhciB1cGxvYWRfY2hlY2tlZCA9IHVzZXJTZXR0aW5nLmNvbm5lY3RUb1RoZVNlcnZlcj8iY2hlY2tlZCI6IiI7CiAgICAgICAgICAgIHZhciBidG5jaGVja2VkID0gIHVzZXJTZXR0aW5nLmFkZEJ0bj8nY2hlY2tlZCc6JycKIAogICAgICAgICAgICB2YXIgb2RvbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgICAgICBvZG9tLmlkID0gInJ3bC1zZXRNZW51IjsKICAgICAgICAgICAgb2RvbS5zdHlsZS5jc3NUZXh0ID0icG9zaXRpb246IGZpeGVkOyIgKwogICAgICAgICAgICAgICAgInRvcDogMTAwcHg7IiArCiAgICAgICAgICAgICAgICAibGVmdDogNTBweDsiICsKICAgICAgICAgICAgICAgICJwYWRkaW5nOiAxMHB4OyIgKwogICAgICAgICAgICAgICAgImJhY2tncm91bmQ6ICNmZmY7IiArCiAgICAgICAgICAgICAgICAiYm9yZGVyLXJhZGl1czogNHB4OyI7CiAgICAgICAgICAgIEdNX2FkZFN0eWxlKCIjcndsLXNldE1lbnVTYXZlLCIgKwogICAgICAgICAgICAgICAgIiNyd2wtcmVzZXQsIiArCiAgICAgICAgICAgICAgICAiI3J3bC1zZXRNZW51Q2xvc2V7IiArCiAgICAgICAgICAgICAgICAgICAgIm1hcmdpbjogMDsiICsKICAgICAgICAgICAgICAgICAgICAicGFkZGluZzogMCAycHg7IiArCiAgICAgICAgICAgICAgICAgICAgImJvcmRlcjogbm9uZTsiICsKICAgICAgICAgICAgICAgICAgICAiYm9yZGVyLXJhZGl1czogMnB4OyIgKwogICAgICAgICAgICAgICAgICAgICJjdXJzb3I6IHBvaW50ZXI7IiArCiAgICAgICAgICAgICAgICAgICAgImJhY2tncm91bmQ6ICNmZmY7IiArCiAgICAgICAgICAgICAgICAgICAgImNvbG9yOiAjMDAwOyIgKwogICAgICAgICAgICAgICAgIn0iICsKICAgICAgICAgICAgICAgICIjcndsLXJlc2V0eyIgKwogICAgICAgICAgICAgICAgICAgICJib3JkZXI6IDFweCBzb2xpZCAjNjY2OyIgKwogICAgICAgICAgICAgICAgIn0iICsKICAgICAgICAgICAgICAgICIjcndsLXNldE1lbnVTYXZleyIgKwogICAgICAgICAgICAgICAgICAgICJib3JkZXI6IDFweCBzb2xpZCBncmVlbjsiICsKICAgICAgICAgICAgICAgICJ9IiArCiAgICAgICAgICAgICAgICAiI3J3bC1zZXRNZW51Q2xvc2V7IiArCiAgICAgICAgICAgICAgICAgICAgImJvcmRlcjogMXB4IHNvbGlkIHJlZDsiICsKICAgICAgICAgICAgICAgICJ9IiArCiAgICAgICAgICAgICAgICAiI3J3bC1zZXRNZW51eyIgKwogICAgICAgICAgICAgICAgICAgICJ0ZXh0LWFsaWduOmxlZnQ7IiArCiAgICAgICAgICAgICAgICAgICAgImZvbnQtc2l6ZToxNHB4OyIgKwogICAgICAgICAgICAgICAgICAgICJ6LWluZGV4Ojk5OTk5OTsiICsKICAgICAgICAgICAgICAgICAgICAiYm9yZGVyOiAxcHggc29saWQgY29ybmZsb3dlcmJsdWU7IiArCiAgICAgICAgICAgICAgICAifSIgKwogICAgICAgICAgICAgICAgIiNyd2wtc2V0TWVudSBweyIgKwogICAgICAgICAgICAgICAgICAgICJtYXJnaW46NXB4IGF1dG87IiArCiAgICAgICAgICAgICAgICAifSIgKwogICAgICAgICAgICAgICAgIiAiKQogICAgICAgICAgICB2YXIgaW5uZXJIID0gIiIgKwogICAgICAgICAgICAgICAgIjxwPui3neemu+mhtumDqOi3neemu++8iOWNleS9jSDlg4/ntKDvvIkgPGlucHV0IGlkPSdwb3NpdGlvbnRvcCcgdHlwZT0ndGV4dCcgdmFsdWU9IiArIHVzZXJTZXR0aW5nLnBvc2l0aW9uVG9wICsgIj48L3A+IiArICIiICsKICAgICAgICAgICAgICAgIC8vICI8bGFiZXJsPiA8cD7lhYHorrjkuIrkvKDpu5HlkI3ljZU8aW5wdXQgaWQ9J3VwbG9hZGNoZWNrZWQnICB0eXBlPSdjaGVja2JveCcgIiArIHVwbG9hZF9jaGVja2VkICsgIj48L3A+IiArICI8L2xhYmVybD4iICsKICAgICAgICAgICAgICAgICI8cCBpZD0ncndsLXNob3J0Y3V0cycgdGl0bGU9J+W/q+aNt+mUric+5b+r5o236ZSu77yaIiArCiAgICAgICAgICAgICAgICAgICAgIjxzZWxlY3QgaWQ9J3J3bC1zaG9ydGN1dCc+IiArCiAgICAgICAgICAgICAgICAgICAgICAgICI8b3B0aW9uIHZhbHVlPSdvZmYnIiArICh1c2VyU2V0dGluZy5zaG9ydGN1dCA9PSAwPyJzZWxlY3RlZCI6IiIpICArICI+5YWz6ZetPC9vcHRpb24+IiArCiAgICAgICAgICAgICAgICAgICAgICAgICI8b3B0aW9uIHZhbHVlPSdmMSciICsgKHVzZXJTZXR0aW5nLnNob3J0Y3V0ID09IDE/InNlbGVjdGVkIjoiIikgICsgIj4gRjEgPC9vcHRpb24+IiArCiAgICAgICAgICAgICAgICAgICAgICAgICI8b3B0aW9uIHZhbHVlPSdjdHJsZjEnIiArICh1c2VyU2V0dGluZy5zaG9ydGN1dCA9PSAyPyJzZWxlY3RlZCI6IiIpICArICI+Y3RybCArIEYxPC9vcHRpb24+IiArCiAgICAgICAgICAgICAgICAgICAgICAgICI8b3B0aW9uIHZhbHVlPSdjdHJsYyciICsgKHVzZXJTZXR0aW5nLnNob3J0Y3V0ID09IDM/InNlbGVjdGVkIjoiIikgICsgIj5jdHJsICsgQzwvb3B0aW9uPiIgKwogICAgICAgICAgICAgICAgICAgICI8L3NlbGVjdD4iICsKICAgICAgICAgICAgICAgICI8L3A+ICIgKwogICAgICAgICAgICAgICAgIjxsYWJlcmw+IDxwPuaYvuekuuaMiemSrjxpbnB1dCBpZD0nYnRuY2hlY2tlZCcgIHR5cGU9J2NoZWNrYm94JyAiICsgYnRuY2hlY2tlZCArICI+IOeCueWHu+iEmuacrOeuoeeQhuaJqeWxleWPr+S7peWGjeasoeaJk+W8gOiuvue9rjwvcD4iICsgIjwvbGFiZXJsPiIgKwogICAgICAgICAgICAgICAgIjxwPumXrumimOWPjemmiOWcsOWdgDogPGEgdGFyZ2V0PSdfYmxhbmsnIGhyZWY9J2h0dHBzOi8vZ2l0aHViLmNvbS9xeGluR2l0SHViL1JlbW92ZS13ZWItbGltaXRzLSc+R2l0SHViKHF4aW4pPC9hPiwgPGEgdGFyZ2V0PSdfYmxhbmsnIGhyZWY9J2h0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vc2NyaXB0cy8yODQ5Ny1yZW1vdmUtd2ViLWxpbWl0cy1tb2RpZmllZCc+R3JlYXN5Rm9yayhxeGluKTwvYT4gIDwvUD4iICsKICAgICAgICAgICAgICAgICI8cD7pobnnm67ljp/kvZzogIXkuLogPGEgdGFyZ2V0PSdfYmxhbmsnIGhyZWY9J2h0dHBzOi8vY2F0NzM3My5naXRodWIuaW8vcmVtb3ZlLXdlYi1saW1pdHMvJz5jYXQ3MzczPC9hPiwgPGEgdGFyZ2V0PSdfYmxhbmsnIGhyZWY9J2h0dHBzOi8vZ2l0aHViLmNvbS9DYXQ3MzczL3JlbW92ZS13ZWItbGltaXRzJz7pobnnm67kuLvpobU8L2E+IDwvUD4iICsKICAgICAgICAgICAgICAgICI8cD7og73lipvmnInpmZAs5LiN6IO95q+P5Liq572R56uZ6YO96IO95a6M576OPC9QPiIgKwogICAgICAgICAgICAgICAgIjxwPuWmguiLpeWPjemmiCzliqHlv4XluKbkuIror6bnu4bnvZHlnYA8L1A+IiArCiAgICAgICAgICAgICAgICAiPHA+ICA8L1A+IiArCiAgICAgICAgICAgICAgICAvLyAiPHA+PHM+5pi+56S65oyJ6ZKu77yI5b6F5re75Yqg77yJPC9zPjwvcD4iICsKICAgICAgICAgICAgICAgIC8vICI8cD48cz7mjInpkq7pgI/mmI7luqbvvIjlvoXmt7vliqDvvIk8L3M+PC9wPiIgKwogICAgICAgICAgICAgICAgLy8gIjxwPjxzPuW/q+mAn+WkjeWItu+8iOW+hea3u+WKoO+8iTwvcz48L3A+IiArCiAgICAgICAgICAgICAgICAvLyAiPHA+PHM+5YW25LuWICjlvoXmt7vliqDvvIk8L3M+PC9wPiIgKwogICAgICAgICAgICAgICAgIjxwPuaVsOaNruWtmOWCqOaWueW8j+S4ukpTT04s5aaC6Iul5Zyo5q2k5L+u5pS5LOazqOaEj+W8leWPt+mAl+WPtzwvUD4iICsKICAgICAgICAgICAgICAgICI8dGV4dGFyZWEgd3JhcD0nb2ZmJyBjb2xzPSc0NScgcm93cz0nMjAnIHN0eWxlPSdvdmVyZmxvdzphdXRvO2JvcmRlci1yYWRpdXM6NHB4Oyc+IiArIEpTT04uc3RyaW5naWZ5KHVzZXJTZXR0aW5nLmRhdGEsZmFsc2UsNCkgKyAiPC90ZXh0YXJlYT4iICsgCiAgICAgICAgICAgICAgICAiPGJyPiIgKwogICAgICAgICAgICAgICAgIjxxeGluYnV0dG9uIGlkPSdyd2wtcmVzZXQnPua4heepuuiuvue9rjwvcXhpbmJ1dHRvbj4gJm5ic3A7Jm5ic3A7Jm5ic3A7IiArCiAgICAgICAgICAgICAgICAiPHF4aW5idXR0b24gaWQ9J3J3bC1zZXRNZW51U2F2ZSc+5L+d5a2YPC9xeGluYnV0dG9uPiAmbmJzcDsmbmJzcDsmbmJzcDsiICsKICAgICAgICAgICAgICAgICI8cXhpbmJ1dHRvbiBpZD0ncndsLXNldE1lbnVDbG9zZScgb25jbGljaz0ndGhpcy5wYXJlbnROb2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5wYXJlbnROb2RlKTsnIHRpdGxlPSflpoLmnpzml6Dms5XlhbPpl60g6K+35Yi35paw55WM6Z2iJyA+5YWz6ZetPC9xeGluYnV0dG9uPiAmbmJzcDsmbmJzcDsmbmJzcDsiICsKICAgICAgICAgICAgICAgICI8c3BhbiBzdHlsZT0nZm9udC1zaXplOjAuN2VtOyc+LS18IHF4aW4gdjQuNC42IDIwMjEtMDYtMDkgfC0tPC9zcGFuPiIgKwogICAgICAgICAgICAgICAgIiIKICAgICAgICAgICAgIiI7CiAgICAgICAgICAgIG9kb20uaW5uZXJIVE1MID0gaW5uZXJIOwogICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG9kb20pOwogCiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNyd2wtc2V0TWVudVNhdmUiKS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsc2F2ZVNldHRpbmcpOwogICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjcndsLXNldE1lbnVDbG9zZSIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIixjbG9zZU1lbnUpOwogICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjcndsLXJlc2V0IikuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLHJ3bFJlc2V0KTsKIAogICAgICAgIH0KIAogICAgLy8g5L+d5a2Y6YCJ6aG5CiAgICBmdW5jdGlvbiBzYXZlU2V0dGluZygpewogICAgICAgIHZhciBwb3NpdGlvblRvcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNyd2wtc2V0TWVudSAjcG9zaXRpb250b3AiKS52YWx1ZTsKICAgICAgICAvLyB2YXIgdXBsb2FkQ2hlY2tlZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNyd2wtc2V0TWVudSAjdXBsb2FkY2hlY2tlZCIpLmNoZWNrZWQ7CiAgICAgICAgdmFyIHNob3J0Y3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3J3bC1zZXRNZW51ICNyd2wtc2hvcnRjdXQiKS5zZWxlY3RlZEluZGV4OwogICAgICAgIHZhciBhZGRCdG5DaGVja2VkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3J3bC1zZXRNZW51ICNidG5jaGVja2VkIikuY2hlY2tlZDsKICAgICAgICB2YXIgY29kZXZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3J3bC1zZXRNZW51IHRleHRhcmVhIikudmFsdWU7CiAgICAgICAgaWYoY29kZXZhbHVlKXsKICAgICAgICAgICAgdmFyIHVzZXJTZXR0aW5nID0gR01fZ2V0VmFsdWUoInJ3bF91c2VyRGF0YSIpOwogCiAgICAgICAgICAgIHVzZXJTZXR0aW5nLmFkZEJ0biA9IGFkZEJ0bkNoZWNrZWQ7CiAgICAgICAgICAgIHVzZXJTZXR0aW5nLmRhdGEgPSBKU09OLnBhcnNlKGNvZGV2YWx1ZSk7CiAgICAgICAgICAgIHVzZXJTZXR0aW5nLnBvc2l0aW9uVG9wID0gcGFyc2VJbnQocG9zaXRpb25Ub3ApOwogICAgICAgICAgICB1c2VyU2V0dGluZy5zaG9ydGN1dCA9IHBhcnNlSW50KHNob3J0Y3V0KTsKICAgICAgICAgICAgLy8gdXNlclNldHRpbmcuY29ubmVjdFRvVGhlU2VydmVyID0gdXBsb2FkQ2hlY2tlZDsKIAogICAgICAgICAgICBHTV9zZXRWYWx1ZSgicndsX3VzZXJEYXRhIix1c2VyU2V0dGluZyk7CiAgICAgICAgICAgIC8vIOWIt+aWsOmhtemdogogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICAgICAgICAgIH0sMzAwKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBhbGVydCgi6L6T5YWl5Li656m6Iik7CiAgICAgICAgICAgIC8vIHRoaXMucmVzZXQoKTsKICAgICAgICB9CiAgICAgICAgY2xvc2VNZW51KCk7CiAgICB9CiAgICAvLyDlpI3ljp/oj5zljZUKICAgIGZ1bmN0aW9uIHJ3bFJlc2V0KCl7CiAgICAgICAgR01fZGVsZXRlVmFsdWUoInJ3bF91c2VyRGF0YSIpOwogICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgIH0KIAogICAgLy/lhbPpl63oj5zljZUKICAgIGZ1bmN0aW9uIGNsb3NlTWVudSgpewogICAgICAgIHZhciBvbGRFZGl0Qm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3J3bC1zZXRNZW51Iik7CiAgICAgICAgaWYob2xkRWRpdEJveCl7CiAgICAgICAgICAgIG9sZEVkaXRCb3gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvbGRFZGl0Qm94KTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgIH0KIAogICAgLy8g5aKe5Yqg5ouW5ou95LqL5Lu2IOi/m+ihjOe7keWumgogICAgZnVuY3Rpb24gYWRkRHJhZ0V2ZW4oKXsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBkcmFnQnRuKCkKICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiZHJhZ0J0buWHveaVsCDmiqXplJkiKTsKICAgICAgICAgICAgfQogICAgICAgIH0sMTAwMCkKICAgICAgICAvLyBkcmFnQnRuKCk7ICAvLyDlop7liqDmi5bliqjkuovku7YKICAgIH0KIAogICAgLy8g5aKe5Yqg5ouW5Yqo5LqL5Lu2IGZ1bmMKICAgIGZ1bmN0aW9uIGRyYWdCdG4oKXsKICAgICAgICB2YXIgcndsX25vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjcndsLWlxeGluIik7CiAgICAgICAgcndsX25vZGUuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIixmdW5jdGlvbihldmVudCl7CiAgICAgICAgICAgIHJ3bF9ub2RlLnN0eWxlLnRyYW5zaXRpb24gPSAibnVsbCI7CiAgICAgICAgICAgIHZhciBkaXNYID0gZXZlbnQuY2xpZW50WCAtIHJ3bF9ub2RlLm9mZnNldExlZnQ7CiAgICAgICAgICAgIHZhciBkaXNZID0gZXZlbnQuY2xpZW50WSAtIHJ3bF9ub2RlLm9mZnNldFRvcDsKIAogICAgICAgICAgICB2YXIgbW92ZSA9IGZ1bmN0aW9uKGV2ZW50KXsKICAgICAgICAgICAgICAgIHJ3bF9ub2RlLnN0eWxlLmxlZnQgPSBldmVudC5jbGllbnRYIC0gZGlzWCArICJweCIgOwogICAgICAgICAgICAgICAgcndsX25vZGUuc3R5bGUudG9wICA9IGV2ZW50LmNsaWVudFkgLSBkaXNZICsgInB4IiA7CiAgICAgICAgICAgIH0KIAogICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW1vdmUiLG1vdmUpOwogICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZXVwIixmdW5jdGlvbigpewogICAgICAgICAgICAgICAgcndsX25vZGUuc3R5bGUudHJhbnNpdGlvbiA9ICIwLjNzIjsKICAgICAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNlbW92ZSIsbW92ZSk7CiAgICAgICAgICAgICAgICAvLyDmraTlh73mlbDlhoXmiYDmnInnmoTms6jph4ror63lj6Xpg73mmK/mnInnlKjnmoQKICAgICAgICAgICAgICAgICAgICAvLyDlvIDlkK/lkI4s5Y+v5ouW5Yqo5Yiw5bGP5bmV5Y+z5L6nLOS9huWwmuacqua3u+WKoGNzcwogICAgICAgICAgICAgICAgICAgIC8vIOWcqOS4iumdoua3u+WKoCByd2wtYWN0aXZlLWlxeGluIOeahOWcsOaWueWKoOS4iuWIpOaWreW3puWPsyzlnKjliqDkuIrnm7jlupTnmoRjc3PljbPlj68KICAgICAgICAgICAgICAgICAgICAvLyDmh5IgMjAxOC0wNC0xOCAyMTo1MTozMgogICAgICAgICAgICAgICAgLy8gdmFyIGJvZHlXaWR0aCA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGg7CiAgICAgICAgICAgICAgICB2YXIgcndsX25vZGVXaWR0aCA9IHJ3bF9ub2RlLm9mZnNldExlZnQgKyByd2xfbm9kZS5vZmZzZXRXaWR0aC8yOwogICAgICAgICAgICAgICAgLy8gaWYocndsX25vZGVXaWR0aCA+IGJvZHlXaWR0aC8yKXsKICAgICAgICAgICAgICAgIC8vICAgICByd2xfbm9kZS5zdHlsZS5sZWZ0ID0gImF1dG8iOwogICAgICAgICAgICAgICAgLy8gICAgIHJ3bF9ub2RlLnN0eWxlLnJpZ2h0ID0gMDsKICAgICAgICAgICAgICAgIC8vICAgICByd2xfdXNlckRhdGEucG9zaXRpb25MZWZ0ID0gImF1dG8iOwogICAgICAgICAgICAgICAgLy8gICAgIHJ3bF91c2VyRGF0YS5wb3NpdGlvblJpZ2h0ID0gIjAiOwogICAgICAgICAgICAgICAgLy8gfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICByd2xfbm9kZS5zdHlsZS5yaWdodCA9IHJ3bF91c2VyRGF0YS5wb3NpdGlvblJpZ2h0ID0gImF1dG8iOwogICAgICAgICAgICAgICAgICAgIHJ3bF9ub2RlLnN0eWxlLmxlZnQgPSByd2xfdXNlckRhdGEucG9zaXRpb25MZWZ0ID0gIDA7CiAgICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgICAgICByd2xfdXNlckRhdGEucG9zaXRpb25Ub3AgPSByd2xfbm9kZS5vZmZzZXRUb3A7CiAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgicndsX3VzZXJEYXRhIixyd2xfdXNlckRhdGEpOwogCiAgICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgIH0KIAogICAgLy8g5Yid5aeL5YyWIGluaXQgZnVuYyAg6L+Z6YeM5omN5piv5qC45b+DCiAgICBmdW5jdGlvbiBpbml0KCkgewogICAgICAgIC8vIOmSiOWvueS4quWIq+e9keermemHh+WPluS4jeWQjOeahOetlueVpQogICAgICAgIHJ1bGUgPSBjbGVhcigpOwogICAgICAgIC8vIOiuvue9riBldmVudCDliJfooagKICAgICAgICBob29rX2V2ZW50TmFtZXMgPSBydWxlLmhvb2tfZXZlbnROYW1lcy5zcGxpdCgifCIpOwogICAgICAgIC8vIFRPRE8gQWxsb3dlZCB0byByZXR1cm4gdmFsdWUKICAgICAgICB1bmhvb2tfZXZlbnROYW1lcyA9IHJ1bGUudW5ob29rX2V2ZW50TmFtZXMuc3BsaXQoInwiKTsKICAgICAgICBldmVudE5hbWVzID0gaG9va19ldmVudE5hbWVzLmNvbmNhdCh1bmhvb2tfZXZlbnROYW1lcyk7CiAKICAgICAgICAvLyDosIPnlKjmuIXnkIYgRE9NMCBldmVudCDmlrnms5XnmoTlvqrnjq8KICAgICAgICBpZihydWxlLmRvbTApIHsKICAgICAgICAgICAgc2V0SW50ZXJ2YWwoY2xlYXJMb29wLCAxMCAqIDEwMDApOwogICAgICAgICAgICBzZXRUaW1lb3V0KGNsZWFyTG9vcCwgMTUwMCk7CiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgY2xlYXJMb29wLCB0cnVlKTsKICAgICAgICAgICAgY2xlYXJMb29wKCk7CiAgICAgICAgfQogCiAgICAgICAgLy8gaG9vayBhZGRFdmVudExpc3RlbmVyIC8v5a+86Ie05pCc57Si6Lez6L2s5aSx5pWI55qE5Y6f5ZugCiAgICAgICAgaWYocnVsZS5ob29rX2FkZEV2ZW50TGlzdGVuZXIpIHsKICAgICAgICAgICAgRXZlbnRUYXJnZXQucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyOwogICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcjsKIAogICAgICAgICAgICBpZihoYXNGcmFtZSl7CiAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSAwO2k8aGFzRnJhbWUubGVuZ3RoO2krKyl7CiAgICAgICAgICAgICAgICAgICAgaGFzRnJhbWVbaV0uY29udGVudFdpbmRvdy5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogCiAgICAgICAgfQogCiAgICAgICAgLy8gaG9vayBwcmV2ZW50RGVmYXVsdAogICAgICAgIGlmKHJ1bGUuaG9va19wcmV2ZW50RGVmYXVsdCkgewogICAgICAgICAgICBFdmVudC5wcm90b3R5cGUucHJldmVudERlZmF1bHQgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGlmKGhvb2tfZXZlbnROYW1lcy5pbmRleE9mKHRoaXMudHlwZSkgPCAwKSB7CiAgICAgICAgICAgICAgICAgICAgRXZlbnRfcHJldmVudERlZmF1bHQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKIAogICAgICAgICAgICBpZihoYXNGcmFtZSl7CiAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSAwO2k8aGFzRnJhbWUubGVuZ3RoO2krKyl7CiAgICAgICAgICAgICAgICAgICAgaGFzRnJhbWVbaV0uY29udGVudFdpbmRvdy5FdmVudC5wcm90b3R5cGUucHJldmVudERlZmF1bHQgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYoaG9va19ldmVudE5hbWVzLmluZGV4T2YodGhpcy50eXBlKSA8IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50X3ByZXZlbnREZWZhdWx0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogCiAgICAgICAgLy8gSG9vayBzZXQgcmV0dXJuVmFsdWUKICAgICAgICBpZihydWxlLmhvb2tfc2V0X3JldHVyblZhbHVlKSB7CiAgICAgICAgICAgIEV2ZW50LnByb3RvdHlwZS5fX2RlZmluZVNldHRlcl9fKCdyZXR1cm5WYWx1ZScsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgaWYodGhpcy5yZXR1cm5WYWx1ZSAhPT0gdHJ1ZSAmJiBob29rX2V2ZW50TmFtZXMuaW5kZXhPZih0aGlzLnR5cGUpID49IDApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnJldHVyblZhbHVlID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfQogCiAgICAgICAgLy8g5re75YqgQ1NTICAgICAvLyBjb25zb2xlLmRlYnVnKCd1cmw6ICcgKyB1cmwsICdzdG9yYWdlTmFtZe+8micgKyBzdG9yYWdlTmFtZSwgJ3J1bGU6ICcgKyBydWxlLm5hbWUpOwogICAgICAgIGlmKHJ1bGUuYWRkX2NzcykgewogICAgICAgICAgICBHTV9hZGRTdHlsZSgnaHRtbCwgOm5vdChbY2xhc3MqPSJyd2wtZXhlbXB0Il0pIHstd2Via2l0LXVzZXItc2VsZWN0OnRleHQhaW1wb3J0YW50OyAtbW96LXVzZXItc2VsZWN0OnRleHQhaW1wb3J0YW50O30gOm5vdChbY2xhc3MqPSJyd2wtZXhlbXB0Il0pIDo6c2VsZWN0aW9uIHtjb2xvcjojZmZmOyBiYWNrZ3JvdW5kOiMzMzkwRkYhaW1wb3J0YW50O30nKTsKICAgICAgICB9IC8vZWxzZSB7CiAgICAgICAgICAgIC8vR01fYWRkU3R5bGUoJ2h0bWwsIDpub3QoW2NsYXNzKj0icndsLWV4ZW1wdCJdKSB7LXdlYmtpdC11c2VyLXNlbGVjdDp0ZXh0IWltcG9ydGFudDsgLW1vei11c2VyLXNlbGVjdDp0ZXh0IWltcG9ydGFudDt9Jyk7CiAgICAgICAgLy99CiAgICB9CiAKICAgIC8vIEhvb2sgYWRkRXZlbnRMaXN0ZW5lciBwcm9jCiAgICBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKHR5cGUsIGZ1bmMsIHVzZUNhcHR1cmUpIHsKICAgICAgICB2YXIgX2FkZEV2ZW50TGlzdGVuZXIgPSB0aGlzID09PSBkb2N1bWVudCA/IGRvY3VtZW50X2FkZEV2ZW50TGlzdGVuZXIgOiBFdmVudFRhcmdldF9hZGRFdmVudExpc3RlbmVyOwogICAgICAgIGlmKGhvb2tfZXZlbnROYW1lcy5pbmRleE9mKHR5cGUpID49IDApIHsKICAgICAgICAgICAgX2FkZEV2ZW50TGlzdGVuZXIuYXBwbHkodGhpcywgW3R5cGUsIHJldHVyblRydWUsIHVzZUNhcHR1cmVdKTsKICAgICAgICB9IGVsc2UgaWYodW5ob29rX2V2ZW50TmFtZXMuaW5kZXhPZih0eXBlKSA+PSAwKSB7CiAgICAgICAgICAgIHZhciBmdW5jc05hbWUgPSBzdG9yYWdlTmFtZSArIHR5cGUgKyAodXNlQ2FwdHVyZSA/ICd0JyA6ICdmJyk7CiAKICAgICAgICAgICAgaWYodGhpc1tmdW5jc05hbWVdID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIHRoaXNbZnVuY3NOYW1lXSA9IFtdOwogICAgICAgICAgICAgICAgX2FkZEV2ZW50TGlzdGVuZXIuYXBwbHkodGhpcywgW3R5cGUsIHVzZUNhcHR1cmUgPyB1bmhvb2tfdCA6IHVuaG9va19mLCB1c2VDYXB0dXJlXSk7CiAgICAgICAgICAgIH0KIAogICAgICAgICAgICB0aGlzW2Z1bmNzTmFtZV0ucHVzaChmdW5jKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBfYWRkRXZlbnRMaXN0ZW5lci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH0KICAgIH0KIAogICAgLy8g5riF55CG5b6q546vCiAgICBmdW5jdGlvbiBjbGVhckxvb3AoKSB7CiAgICAgICAgcnVsZSA9IGNsZWFyKCkgLy8g5a+55LqO5Yqo5oCB55Sf5oiQ55qE6IqC54K5LOmaj+aXtuajgOa1iwogICAgICAgIHZhciBlbGVtZW50cyA9IGdldEVsZW1lbnRzKCk7CiAKICAgICAgICBmb3IodmFyIGkgaW4gZWxlbWVudHMpIHsKICAgICAgICAgIGZvcih2YXIgaiBpbiBldmVudE5hbWVzKSB7CiAgICAgICAgICAgIHZhciBuYW1lID0gJ29uJyArIGV2ZW50TmFtZXNbal07CiAKICAgICAgICAgICAgLy8gOz/mnKrop6PlhrMKICAgICAgICAgICAgICAgIC8vIDIwMTgtMDQtMDIgZWxlbWVudHPkuK3kvJrmnInlrZfnrKbkuLLlh7rnjrAs5Y6f54mI5LiN5LyaLOmXrumimOS4jeaYjizmoLnmnKzljp/lm6DlsJrmnKrop6PlhrMKICAgICAgICAgICAgICAgIC8vIOebuOWFs+WPjemmiCAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9mb3J1bS9kaXNjdXNzaW9uLzM2MDE0CiAgICAgICAgICAgICAgICAvLyDpl67popjniYjmnKzlj7cgIHYzLjAuNwogICAgICAgICAgICAgICAgLy8g6Zeu6aKY6KGl5YWFICAg5LmL5YmN5Y+v5Lul5L2/55SoLOWFt+S9k+eJiOacrOacqua1i++8iDIwMTgtMDQtMDIgMjE6Mjc6NTPvvIks5Y6f54mI5Y+v5Lul5L2/55SoCiAgICAgICAgICAgIGlmKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlbGVtZW50c1tpXSk9PSJbb2JqZWN0IFN0cmluZ10iKXsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CiAKICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZWxlbWVudHNbaV0pCiAgICAgICAgICAgIC8vIGlmKHR5cGVvZiBlbGVtZW50c1tpXVtuYW1lXSA9PT0gIm9iamVjdCIpewogICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2codHlwZW9mIGVsZW1lbnRzW2ldW25hbWVdKQogICAgICAgICAgICAvLyB9CiAgICAgICAgICAgIGlmKGVsZW1lbnRzW2ldW25hbWVdICE9PSBudWxsICYmIGVsZW1lbnRzW2ldW25hbWVdICE9PSBvbnh4eCkgewogICAgICAgICAgICAgICAgaWYodW5ob29rX2V2ZW50TmFtZXMuaW5kZXhPZihldmVudE5hbWVzW2pdKSA+PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgZWxlbWVudHNbaV1bc3RvcmFnZU5hbWUgKyBuYW1lXSA9IGVsZW1lbnRzW2ldW25hbWVdOwogICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzW2ldW25hbWVdID0gb254eHg7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBlbGVtZW50c1tpXVtuYW1lXSA9IG51bGw7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIAogICAgICAgIGRvY3VtZW50Lm9ubW91c2Vkb3duID0gZnVuY3Rpb24oKXtyZXR1cm4gdHJ1ZTt9OwogICAgfQogCiAgICAvLyDov5Tlm550cnVl55qE5Ye95pWwCiAgICBmdW5jdGlvbiByZXR1cm5UcnVlKGUpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIHVuaG9va190KGUpIHsKICAgICAgICByZXR1cm4gdW5ob29rKGUsIHRoaXMsIHN0b3JhZ2VOYW1lICsgZS50eXBlICsgJ3QnKTsKICAgIH0KICAgIGZ1bmN0aW9uIHVuaG9va19mKGUpIHsKICAgICAgICByZXR1cm4gdW5ob29rKGUsIHRoaXMsIHN0b3JhZ2VOYW1lICsgZS50eXBlICsgJ2YnKTsKICAgIH0KICAgIGZ1bmN0aW9uIHVuaG9vayhlLCBzZWxmLCBmdW5jc05hbWUpIHsKICAgICAgICB2YXIgbGlzdCA9IHNlbGZbZnVuY3NOYW1lXTsKICAgICAgICBmb3IodmFyIGkgaW4gbGlzdCkgewogICAgICAgICAgICBsaXN0W2ldKGUpOwogICAgICAgIH0KIAogICAgICAgIGUucmV0dXJuVmFsdWUgPSB0cnVlOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgZnVuY3Rpb24gb254eHgoZSkgewogICAgICAgIHZhciBuYW1lID0gc3RvcmFnZU5hbWUgKyAnb24nICsgZS50eXBlOwogICAgICAgIHRoaXNbbmFtZV0oZSk7CiAKICAgICAgICBlLnJldHVyblZhbHVlID0gdHJ1ZTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KIAogICAgLy8g6I635Y+W5omA5pyJ5YWD57SgIOWMheaLrGRvY3VtZW50CiAgICBmdW5jdGlvbiBnZXRFbGVtZW50cygpIHsKICAgICAgICB2YXIgZWxlbWVudHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnKicpKTsKICAgICAgICBlbGVtZW50cy5wdXNoKGRvY3VtZW50KTsKIAogICAgICAgIC8vIOW+queOr+aJgOaciSBmcmFtZSDnqpflj6MKICAgICAgICB2YXIgZnJhbWVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiZnJhbWUiKQogICAgICAgIGlmKGZyYW1lcyl7CiAgICAgICAgICAgIGhhc0ZyYW1lID0gZnJhbWVzOwogICAgICAgICAgICB2YXIgZnJhbWVzX2VsZW1lbnQ7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwO2k8ZnJhbWVzLmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgZnJhbWVzX2VsZW1lbnQgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcmFtZXNbaV0uY29udGVudFdpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIqIikpCiAgICAgICAgICAgICAgICBlbGVtZW50cy5wdXNoKGZyYW1lc1tpXS5jb250ZW50V2luZG93LmRvY3VtZW50KQogICAgICAgICAgICAgICAgZWxlbWVudHMgPSBlbGVtZW50cy5jb25jYXQoZnJhbWVzX2VsZW1lbnQpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBlbGVtZW50czsKICAgIH07CiAKICAgIC8vIOiOt+WPlum7keWQjeWNlee9keermSBGdW5jCiAgICBmdW5jdGlvbiBnZXRfYmxhY2tfbGlzdCgpewogICAgICAgIC8vIOS5i+WJjeeJiOacrOWPr+iDveWvvOiHtOWtmOWCqOepuueahOWtl+espuS4sgogICAgICAgICAgICAvLyAyMDE4LTA2LTExIDE1OjExOjQ0IOS/neeVmSzlvZPlrrnplJnlpITnkIYKICAgICAgICB2YXIgZGF0YV90ZW1wID0gcndsX3VzZXJEYXRhLmRhdGE7CiAgICAgICAgZGF0YV90ZW1wID0gZGF0YV90ZW1wLmZpbHRlcihmdW5jdGlvbihpdGVtKXsKICAgICAgICAgICAgICAgIHJldHVybiBpdGVtLmxlbmd0aD4xOwogICAgICAgICAgICB9KQogICAgICAgIHJldHVybiBkYXRhX3RlbXA7CiAgICB9CiAgICAKICAgIC8vIOajgOafpeaYr+WQpuWtmOWcqOS6jum7keWQjeWNleS4rSDov5Tlm57kvY3nva4gZnVuYwogICAgZnVuY3Rpb24gY2hlY2tfYmxhY2tfbGlzdChsaXN0LGhvc3QpewogICAgICAgIGZvcihsZXQgaT0wO2k8bGlzdC5sZW5ndGg7aSsrKXsKICAgICAgICAgICAgaWYofmhvc3RuYW1lLmluZGV4T2YobGlzdFtpXSkpewogICAgICAgICAgICAgICAgcmV0dXJuIGkrMTsgIC8v5LiH5LiA5Yy56YWN5Yiw56ys5LiA5LiqLOi/lOWbnjAKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAKICAgIC8vIOm8oOagh+eCueWHu+WQjuaMiemSruWQjiDmo4Dmn6XmmK/lkKblnKjpu5HlkI3ljZUKICAgIGZ1bmN0aW9uIGJsYWNrX2NoZWNrKGJvb2wpewogICAgICAgIHZhciBsaXN0ID0gR01fZ2V0VmFsdWUoInJ3bF91c2VyRGF0YSIpLmRhdGEKICAgICAgICB2YXIgY2hlY2sgPSBjaGVja19ibGFja19saXN0KGxpc3QsaG9zdG5hbWUpOwogCiAgICAgICAgaWYgKGJvb2wgJiYgIWNoZWNrKSB7CiAgICAgICAgICAgIGxpc3QgPSBsaXN0LmNvbmNhdChob3N0bmFtZSk7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCLpgInkuK0g5LiN5Zyo6buR5ZCN5Y2VLCDlop7liqAiLGhvc3RuYW1lLGxpc3QpOwogICAgICAgICAgICByd2xfdXNlckRhdGEud2FpdFVwbG9hZC5wdXNoKGhvc3RuYW1lKTsgLy/lh4blpIfkuIrkvKAKICAgICAgICAgICAgcndsX3VzZXJEYXRhLmN1cnJlbnRVUkwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKICAgICAgICAgICAgLy8gY29uc29sZS5sb2coImFmdGVyOiAiLHJ3bF91c2VyRGF0YS53YWl0VXBsb2FkKQogCiAgICAgICAgICAgIHNhdmVEYXRhKGxpc3QpOwogICAgICAgICAgICBpbml0KCk7CiAKICAgICAgICB9ZWxzZSBpZighYm9vbCAmJiBjaGVjayl7CiAgICAgICAgICAgIGxpc3Quc3BsaWNlKGNoZWNrLTEsMSk7CiAgICAgICAgICAgIHNhdmVEYXRhKGxpc3QpOwogICAgICAgICAgICAvLyDliLfmlrDpobXpnaIKICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpewogICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCh0cnVlKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCLliLfmlrDpobXpnaJsb2FkaW5nIik7CiAgICAgICAgICAgIH0sMzUwKTsKICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KIAogICAgLy8g5L+d5a2Y5pys5Zyw5pWw5o2uLOW5tuWwhuaVsOaNruS4iuS8oOiHs+acjeWKoeWZqAogICAgZnVuY3Rpb24gc2F2ZURhdGEobGlzdHMpewogICAgICAgIGxpc3RzID0gbGlzdHMuZmlsdGVyKGZ1bmN0aW9uKGl0ZW0pewogICAgICAgICAgICByZXR1cm4gaXRlbS5sZW5ndGg+MTsKICAgICAgICB9KQogCiAgICAgICAgLy8g5pu05paw5pWw5o2uCiAgICAgICAgcndsX3VzZXJEYXRhLmRhdGEgPSBsaXN0cy5zb3J0KCk7CiAKICAgICAgICAvLyDlsIbmnKzlnLDpu5HlkI3ljZXkuIrkvKAKICAgICAgICAvLyBpZiAocndsX3VzZXJEYXRhLndhaXRVcGxvYWQubGVuZ3RoID4gMCAmJiByd2xfdXNlckRhdGEuY29ubmVjdFRvVGhlU2VydmVyKXsKICAgICAgICAvLyAgICAgLy8gY29uc29sZS5sb2coInJ3bCA6IOS4iuS8oC4uLiIscndsX3VzZXJEYXRhLndhaXRVcGxvYWQpOwogICAgICAgIC8vICAgICAvLyBjb25zb2xlLmxvZygicndsIDog5byA5aeL5LiK5LygLS0tLS0iKTsKICAgICAgICAvLyAgICAgR01feG1saHR0cFJlcXVlc3QoewogICAgICAgIC8vICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgIC8vICAgICAgIC8vIHVybDogImh0dHA6Ly8xMjcuMC4wLjE6ODAwMC90b29sL3Rlc3RhamF4LyIsCiAgICAgICAgLy8gICAgICAgdXJsOiAiaHR0cDovL2VlbW0ubWUvdG9vbC9yd2xfdXBsb2FkLyIsCiAgICAgICAgLy8gICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkocndsX3VzZXJEYXRhKSwKICAgICAgICAvLyAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgLy8gICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIKICAgICAgICAvLyAgICAgICB9LAogICAgICAgIC8vICAgICAgIG9ubG9hZDogZnVuY3Rpb24ocmVzcG9uc2UpIHsKICAgICAgICAvLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJyd2wgOiDkuIrkvKDmiJDlip8tLS0tIik7CiAgICAgICAgLy8gICAgICAgfQogICAgICAgIC8vICAgICB9KTsKICAgICAgICAvLyAgICAgcndsX3VzZXJEYXRhLndhaXRVcGxvYWQgPSBbXTsKICAgICAgICAvLyB9CiAKICAgICAgICBHTV9zZXRWYWx1ZSgicndsX3VzZXJEYXRhIixyd2xfdXNlckRhdGEpOwogICAgICAgIHJldHVybiByd2xfdXNlckRhdGE7CiAgICB9CiAKICAgIC8vIOaVsOe7hOWOu+mHjQogICAgZnVuY3Rpb24gdW5pcXVlKGFycikgewogICAgICB2YXIgcmV0ID0gW10KICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgaXRlbSA9IGFycltpXQogICAgICAgIGlmIChyZXQuaW5kZXhPZihpdGVtKSA9PT0gLTEpIHsKICAgICAgICAgIHJldC5wdXNoKGl0ZW0pCiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiByZXQ7CiAgICB9CiAKICAgIC8vIOWkjeWItuWIsOWJqui0tOadvwogICAgZnVuY3Rpb24gc2V0Q2xpcGJvYXJkKCl7CiAgICAgICAgdmFyIHRleHRfb2JqID0gd2luZG93LmdldFNlbGVjdGlvbigpOwogICAgICAgIHZhciB0ZXh0ID0gdGV4dF9vYmoudG9TdHJpbmcoKTsKICAgICAgICBHTV9zZXRDbGlwYm9hcmQodGV4dCk7CiAKICAgIH0KIAogICAgLy8g5b+r5o236ZSuIEYx77yIY3RybCtmMe+8iSDlpI3liLYgCiAgICBmdW5jdGlvbiBob3RrZXkoKSB7CiAgICAgICAgdmFyIGEgPSB3aW5kb3cuZXZlbnQua2V5Q29kZTsKICAgICAgICAvLyBpZiAoKGEgPT0gMTEyKSAmJiAoZXZlbnQuY3RybEtleSkpIHsKICAgICAgICBpZiAoYSA9PSAxMTIgJiYgdXNlclNldHRpbmcuc2hvcnRjdXQgPT0gMSkgewogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICBzZXRDbGlwYm9hcmQoKTsKICAgICAgICAgICAgZXZlbnQua2V5Q29kZT0wOwogICAgICAgICAgICBldmVudC5yZXR1cm5WYWx1ZT1mYWxzZTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAKICAgICAgICB9IGVsc2UgaWYgKGEgPT0gMTEyICYmIChldmVudC5jdHJsS2V5KSAmJiB1c2VyU2V0dGluZy5zaG9ydGN1dCA9PSAyKXsKICAgICAgICAgICAgc2V0Q2xpcGJvYXJkKCk7CiAgICAgICAgfSBlbHNlIGlmKChhID09IDY3KSAmJiAoZXZlbnQuY3RybEtleSkgJiYgdXNlclNldHRpbmcuc2hvcnRjdXQgPT0gMyl7CiAgICAgICAgICAgIHNldENsaXBib2FyZCgpOwogICAgICAgIH1lbHNlIHsKICAgICAgICAgICAgY29uc29sZS5sb2coIuWFs+mXreS6huW/q+aNt+mUriIpOwogICAgICAgIH0KICAgIH0gCiAgICBkb2N1bWVudC5vbmtleWRvd24gPSBob3RrZXk7IC8v5b2Tb25rZXlkb3duIOS6i+S7tuWPkeeUn+aXtuiwg+eUqGhvdGtleeWHveaVsCAgCiAKICAgIC8vIOmDqOWIhue9keermemHh+eUqOS6huWFtuS7lueahOmYsuWkjeWItuaJi+autQogICAgZnVuY3Rpb24gY2xlYXIoKXsKICAgICAgICAvLyBjb25zb2xlLmxvZygi6L+b5YWlY2xlYXIiLGhvc3RuYW1lLHJ3bF91c2VyRGF0YS5ydWxlcyk7CiAgICAgICAgc3dpdGNoIChob3N0bmFtZSl7CiAgICAgICAgICAgIGNhc2UgImNodWFuZ3NoaS5xcS5jb20iOiBjbGVhcl9jaHVhbmdzaGkoKTticmVhazsKICAgICAgICAgICAgY2FzZSAidm90ZXR3LmNvbSI6IGNsZWFyX3ZvdGV0dygpO2JyZWFrOwogICAgICAgICAgICBjYXNlICJ3d3cubXlodGVib29rcy5jb20iOiBjbGVhcl9jb3ZlcnMoIi5mdWxsaW1nIik7YnJlYWs7CiAgICAgICAgICAgIGNhc2UgInd3dy56M3o0LmNvbSI6IGNsZWFyX2NvdmVycygiLm1vdmllZG93bmFkZGl2Iik7IGJyZWFrOwogICAgICAgICAgICBjYXNlICJodWF5dS5iYWlkdS5jb20iOiBjbGVhcl9jb3ZlcnMoIiNqcUNvbnRleHRNZW51Iik7IGJyZWFrOwogICAgICAgICAgICBjYXNlICJ3d3cubXlodGxtZWJvb2suY29tIjogY2xlYXJfY292ZXJzKCJpbWcuZnVsbGltZyIpOyBicmVhazsKICAgICAgICAgICAgY2FzZSAiemhpaHUuY29tIjoKICAgICAgICAgICAgY2FzZSAid3d3LnpoaWh1LmNvbSI6IHJldHVybiByd2xfdXNlckRhdGEucnVsZXMucnVsZV96aGlodTsgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgInQuYmlsaWJpbGkuY29tIjogY2xlYXJfbGlua19iaWxpYmlsaSgpOyBicmVhazsKICAgICAgICAgICAgY2FzZSAid3d3LnVzbHNvZnR3YXJlLmNvbSI6IGNsZWFyX2NvdmVycygiLnByb3RlY3RfY29udGVudHMtb3ZlcmxheSIpO2NsZWFyX2NvdmVycygiLnByb3RlY3RfYWxlcnQiKTsgcmV0dXJuIHJ3bF91c2VyRGF0YS5ydWxlcy5ydWxlX3BsdXM7IGJyZWFrOwogICAgICAgICAgICBjYXNlICJ3d3cubG9uZ21hYm9va2NuLmNvbSI6IGNsZWFyX2NvdmVycygiLmZ1bGxpbWciKTsgcmV0dXJuIHJ3bF91c2VyRGF0YS5ydWxlcy5ydWxlX3BsdXM7IGJyZWFrOwogICAgICAgICAgICBjYXNlICJib2tlMTEyLmNvbSI6IHJldHVybiByd2xfdXNlckRhdGEucnVsZXMucnVsZV9wbHVzOyBicmVhazsKICAgICAgICAgICAgY2FzZSAid3d3LnNoYW5nYy5uZXQiOiByZXR1cm4gcndsX3VzZXJEYXRhLnJ1bGVzLnJ1bGVfcGx1czsgYnJlYWs7CiAgICAgICAgfQogICAgICAgIHJldHVybiByd2xfdXNlckRhdGEucnVsZXMucnVsZV9kZWY7CiAgICB9CiAgICAvLyDljrvpmaTopobnm5blsYIKICAgIGZ1bmN0aW9uIGNsZWFyX2NvdmVycyhlbGUpewogICAgICAgIHZhciBvZGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbGUpOwogICAgICAgIGlmKG9kaXYpewogICAgICAgICAgICBvZGl2LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQob2Rpdik7CiAgICAgICAgfQogICAgfQogICAgLy8gYuermeWwhuaWh+Wtl+W1jOWll+WcqOmTvuaOpeS4rQogICAgZnVuY3Rpb24gY2xlYXJfbGlua19iaWxpYmlsaSgpewogICAgICAgIHZhciBvZGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmRlc2NyaXB0aW9uIik7CiAgICAgICAgaWYob2Rpdil7CiAgICAgICAgICAgIHZhciB0RGl2ID0gb2Rpdi5xdWVyeVNlbGVjdG9yKCIuY29udGVudC1lbGxpcHNpcyIpOwogICAgICAgICAgICB2YXIgYURpdiA9IG9kaXYucXVlcnlTZWxlY3RvcigiYSIpOwogICAgICAgICAgICAgb2Rpdi5hcHBlbmRDaGlsZCh0RGl2KTsKICAgICAgICB9CiAgICB9CiAgICAvLyBodHRwczovL3ZvdGV0dy5jb20vd2lraS8lRTYlOUUlOTclRTYlOTklQkElRTUlQTAlODUKICAgIC8vIOS8muWIm+W7uuWkmuS4quaXoGlkLOaXoGNsYXNz55qEZGl2LOimhuebluWcqOaWh+Wtl+S4iuWxggogICAgZnVuY3Rpb24gY2xlYXJfdm90ZXR3KCl7CiAgICAgICAgdmFyIG9kaXZzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLm13LXBhcnNlci1vdXRwdXQ+ZGl2IikKICAgICAgICBvZGl2cy5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKXsKICAgICAgICAgICAgdmFsdWUuc2V0QXR0cmlidXRlKCJzdHlsZSIsIiIpOwogICAgICAgIH0pCiAgICB9CiAKICAgIC8vIOWIm+S4luS4reaWh+e9kQogICAgZnVuY3Rpb24gY2xlYXJfY2h1YW5nc2hpKCl7CiAgICAgICAgY29uc29sZS5sb2coIuWIm+S4luS4reaWh+e9kSDlvIDlp4vmiafooYwiKTsKCiAgICAgICAgLy8gSlMg5rGJ5a2X5LiOVW5pY29kZeeggeeahOebuOS6kui9rOWMlgogICAgICAgICAgICAvLyBodHRwczovL3d3dy5jbmJsb2dzLmNvbS93d2xob21lL3AvNTY1MDc0NC5odG1sCiAgICAgICAgZnVuY3Rpb24gdG91bmljb2RlKGRhdGEpCiAgICAgICAgewogICAgICAgICAgICBpZihkYXRhID09ICcnKSByZXR1cm4gJ+ivt+i+k+WFpeaxieWtlyc7CiAgICAgICAgICAgIHZhciBzdHIgPScnOyAKICAgICAgICAgICAgZm9yKHZhciBpPTA7aTxkYXRhLmxlbmd0aDtpKyspCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0cis9IlxcdSIrcGFyc2VJbnQoZGF0YVtpXS5jaGFyQ29kZUF0KDApLDEwKS50b1N0cmluZygxNik7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHN0cjsKICAgICAgICB9CiAgICAgICAgZnVuY3Rpb24gdG9oYW56aShkYXRhKQogICAgICAgIHsKICAgICAgICAgICAgaWYoZGF0YSA9PSAnJykgcmV0dXJuICfor7fovpPlhaXljYHlha3ov5vliLZ1bmljb2RlJzsKICAgICAgICAgICAgZGF0YSA9IGRhdGEuc3BsaXQoIlxcdSIpOwogICAgICAgICAgICB2YXIgc3RyID0nJzsKICAgICAgICAgICAgZm9yKHZhciBpPTA7aTxkYXRhLmxlbmd0aDtpKyspCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0cis9U3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChkYXRhW2ldLDE2KS50b1N0cmluZygxMCkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBzdHI7CiAgICAgICAgfQogICAgICAgIC8vIGphdmFzY3JpcHTkuK3nmoRyZXBsYWNl5Ye95pWw5ZCM5pe25pu/5o2i5aSa5Liq5a2X56ym5LiyCiAgICAgICAgICAgIC8vIGh0dHBzOi8vYmJzLmNzZG4ubmV0L3RvcGljcy8zMjAwOTcyNDYKICAgICAgICBBcnJheS5wcm90b3R5cGUuZWFjaMKgPcKgZnVuY3Rpb24odHJhbnMpwqB7CiAgICAgICAgICAgIMKgwqDCoMKgZm9ywqAodmFywqBpPTA7wqBpPHRoaXMubGVuZ3RoO8KgaSsrKQogICAgICAgICAgICDCoMKgwqDCoMKgwqDCoMKgdGhpc1tpXcKgPcKgdHJhbnModGhpc1tpXSzCoGkswqB0aGlzKTsKICAgICAgICAgICAgwqDCoMKgwqByZXR1cm7CoHRoaXM7CiAgICAgICAgICAgIH07CiAgICAgICAgQXJyYXkucHJvdG90eXBlLm1hcMKgPcKgZnVuY3Rpb24odHJhbnMpwqB7CiAgICAgICAgwqDCoMKgwqByZXR1cm7CoFtdLmNvbmNhdCh0aGlzKS5lYWNoKHRyYW5zKTsKICAgICAgICB9OwogICAgICAgIFJlZ0V4cC5lc2NhcGXCoD3CoGZ1bmN0aW9uKHN0cinCoHsKICAgICAgICDCoMKgwqDCoHJldHVybsKgbmV3wqBTdHJpbmcoc3RyKS5yZXBsYWNlKC8oWy4qKz9ePSE6JHt9KCl8W1xdXC9cXF0pL2cswqAnXFwkMScpOwogICAgICAgIH07CiAgICAgICAgZnVuY3Rpb27CoHByb3BlcnRpZXMob2JqKcKgewogICAgICAgIMKgwqDCoMKgdmFywqBwcm9wc8KgPcKgW107CiAgICAgICAgwqDCoMKgwqBmb3LCoCh2YXLCoHDCoGluwqBvYmopwqBwcm9wcy5wdXNoKHApOwogICAgICAgIMKgwqDCoMKgcmV0dXJuwqBwcm9wczsKICAgICAgICB9CiAgICAgICAgLy/CoC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAgIHZhciBib29rcmVhZGVyY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5ib29rcmVhZGVyY29udGVudCIpOwogICAgICAgIGlmKGJvb2tyZWFkZXJjb250ZW50KXsKICAgICAgICAgICAgdmFyIHN0ciA9IGJvb2tyZWFkZXJjb250ZW50LmlubmVyVGV4dDsKICAgICAgICAgICAgdmFyIHN0clVuaWNvZGUgPSB0b3VuaWNvZGUoc3RyKTsKICAgICAgICAgICAgdmFywqByZXBsYWNlbWVudHPCoD3CoHsiZTJhZiI6IjRlMDkiLCJlMmFmIjoiNGUwYiIsImUyYzkiOiI0ZTNiIiwiZTJkNiI6IjRlNDgiLCJlMmIyIjoiNGU0YiIsImUyYTYiOiI0ZTVmIiwiZTI5NCI6IjRlOGIiLCJlMmU5IjoiNGU4YyIsImUzMGEiOiI0ZThlIiwiZTI5MiI6IjRlOTQiLCJlMjk4IjoiNGU5YiIsImUyYTIiOiI0ZWUzIiwiZTJmMCI6IjRmNDYiLCJlMzBlIjoiNGY0ZCIsImUzMDUiOiI0ZjUzIiwiZTI5NiI6IjRmNWMiLCJlMmQzIjoiNGY2MCIsImUyZGIiOiI0ZjdmIiwiZTI5YiI6IjUxNmMiLCJlMmIwIjoiNTE3NiIsImUyZWQiOiI1MWZhIiwiZTJlYiI6IjUyMDYiLCJlMmYxIjoiNTIyOSIsImUzMDciOiI1MjMwIiwiZTJjZSI6IjUyMzYiLCJlMmU2IjoiNTI0ZCIsImUyZWEiOiI1MjliIiwiZTJhOCI6IjUyYTAiLCJlMmE1IjoiNTMxNiIsImUyYmQiOiI1MzQxIiwiZTMwMiI6IjUzOWYiLCJlMmRmIjoiNTNiYiIsImUyYzciOiI1M2M4IiwiZTMwMyI6IjUzY2QiLCJlMmFjIjoiNTNkMSIsImUyZjgiOiI1M2VhIiwiZTMwYiI6IjU0MDQiLCJlMjljIjoiNTQwOCIsImUyZDciOiI1NDBjIiwiZTJkOCI6IjU0MGUiLCJlMzA2IjoiNTQxMSIsImUyYzUiOiI1NDdkIiwiZTJiNCI6IjU2ZGIiLCJlMmY5IjoiNTZlMCIsImUyY2EiOiI1NzMwIiwiZTJlZiI6IjU5MTYiLCJlMmJjIjoiNTkxYSIsImUzMDEiOiI1OTI5IiwiZTI5YSI6IjU5N2QiLCJlMmI3IjoiNWI1MCIsImUyY2MiOiI1YjgzIiwiZTJlZSI6IjViOWEiLCJlMmZmIjoiNWJiNiIsImUyZTgiOiI1YzBmIiwiZTJkNCI6IjVjMzEiLCJlMmQ1IjoiNWM1NSIsImUyYTEiOiI1ZGU1IiwiZTJhMCI6IjVlNzMiLCJlMmZlIjoiNWU3NCIsImUyYzQiOiI1ZTc2IiwiZTJjOCI6IjVlYTYiLCJlMmFlIjoiNWVmYSIsImUzMDQiOiI1ZjYyIiwiZTI5MSI6IjVmODgiLCJlMmUyIjoiNWY5NyIsImUyZjIiOiI1ZmMzIiwiZTI5NSI6IjYwMjciLCJlMmQ5IjoiNjBjNSIsImUyYmUiOiI2MGYzIiwiZTJjMyI6IjYxMGYiLCJlMzBkIjoiNjIxMCIsImUyYmEiOiI2MjE2IiwiZTJmYSI6IjYyNDAiLCJlMjllIjoiNjI4YSIsImUyYTciOiI2M2QwIiwiZTJkMiI6IjY1M2YiLCJlMmFkIjoiNjU5OSIsImUyY2QiOiI2NWIwIiwiZTJmMyI6IjY1YjkifTsKICAgICAgICAgICAgdmFywqByZWdleMKgPcKgbmV3wqBSZWdFeHAocHJvcGVydGllcyhyZXBsYWNlbWVudHMpLm1hcChSZWdFeHAuZXNjYXBlKS5qb2luKCJ8IikswqAiZyIpOwogICAgICAgICAgICBzdHJVbmljb2RlID0gc3RyVW5pY29kZS5yZXBsYWNlKHJlZ2V4LMKgZnVuY3Rpb24oJDApwqB7wqByZXR1cm7CoHJlcGxhY2VtZW50c1skMF07wqB9KTsKICAgICAgICAgICAgCiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHN0clVuaWNvZGUpCiAgICAgICAgICAgIHN0clVuaWNvZGUgPSBzdHJVbmljb2RlLnJlcGxhY2UoInUwIiwiIik7CiAgICAgICAgICAgIHN0ciA9IHRvaGFuemkoc3RyVW5pY29kZSk7CiAgICAKICAgICAgICAgICAgYm9va3JlYWRlcmNvbnRlbnQuaW5uZXJUZXh0ID0gc3RyOwogICAgICAgIH0KCgogICAgfQogCiAgICAvLyAzLngueCDov4fmuKEgNC54Lngg54mI5pysCiAgICBmdW5jdGlvbiB2ZXJzaW9uX3VwXzNfdG9fNCgpewogICAgICAgIHZhciBvbGRfdmVyc2lvbiA9IEdNX2dldFZhbHVlKCJibGFja19saXN0Iik7CiAgICAgICAgaWYoIW9sZF92ZXJzaW9uKXtyZXR1cm59OwogICAgICAgIHJ3bF91c2VyRGF0YS5kYXRhID0gdW5pcXVlKHJ3bF91c2VyRGF0YS5kYXRhLmNvbmNhdChvbGRfdmVyc2lvbi5kYXRhKSk7CiAgICAgICAgR01fc2V0VmFsdWUoInJ3bF91c2VyRGF0YSIscndsX3VzZXJEYXRhKTsKIAogICAgICAgIEdNX2RlbGV0ZVZhbHVlKCJibGFja19saXN0Iik7CiAgICAgICAgR01fZGVsZXRlVmFsdWUoInJ3bF91c2VyZGF0YSIpOwogICAgfQp9KSgpOyA="},{"name":"知乎网页助手","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["https://*.zhihu.com/*","https://v.vzuu.com/video/*","https://video.zhihu.com/video/*","*://item.taobao.com/*","*://*detail.tmall.com/*","*://*detail.tmall.hk/*","*://*product.suning.com/*","*://*item.jd.com/*","*://*detail.vip.com/*","*://*mobile.yangkeduo.com/goods*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1625035392133,"data":{}},"enabled":false,"position":2,"file_url":"https://greasyfork.org/scripts/384172-%E7%9F%A5%E4%B9%8E%E7%BD%91%E9%A1%B5%E5%8A%A9%E6%89%8B/code/%E7%9F%A5%E4%B9%8E%E7%BD%91%E9%A1%B5%E5%8A%A9%E6%89%8B.user.js","uuid":"d69791fd-cf27-4129-8706-c421f2c46c1c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnn6XkuY7nvZHpobXliqnmiYsKLy8gQG5hbWVzcGFjZSAgICB6aGlodV9oZWxwZXJfdG9vbAovLyBAdmVyc2lvbiAgICAgIDEuMC44Ci8vIEBkZXNjcmlwdGlvbiAg5Yqf6IO95LuL57uN77yaMeOAgeefpeS5juermeWklumTvuaOpeebtOaOpei3s+i9rOiHs+ebruagh+e9keWdgO+8mzLjgIHoh6rliqjlsZXlvIDpl67popjlhajpg6jkv6Hmga/vvIzlkIzml7blsZXnpLrmiYDmnInlm57nrZTvvJsz44CB5Y676Zmk55+l5LmO572R6aG15Lit55qE5bm/5ZGK77ybNOOAgeefpeS5jue9kemhteS4reefreinhumikeS4i+i9ve+8mzXjgIHop6PpmaTnn6XkuY7lpI3liLbpmZDliLYt5YiS6K+N5aSN5Yi277yI6byg5qCH5bem6ZSu5YiS6K+N6Ieq5Yqo5re75Yqg5Yiw5Ymq5YiH5p2/77yJ77ybNuOAgeWOu+mZpOeDpuS6uueahOeZu+W9leaPkOekuu+8mzfjgIHoh6rliqjpq5jmuIXlm77niYfmmL7npLrjgJDms6jvvJrmlK/mjIFUYW1wZXJtb25rZTQuMOS7peS4iueJiOacrOOAkeOAkOi/meWPr+iDveaYr+WKn+iDveacgOWFqOmdoueahOefpeS5juWKqeaJi+S6huOAkTs477ya5aKe5Yqg5LyY5oOg5Yi45p+l6K+i5Yqf6IO9Ci8vIEBhdXRob3IgICAgICAgYnJvb23vvIznjovotoUKLy8gQGljb24JCSBkYXRhOmltYWdlL2ljbztiYXNlNjQsQUFBQkFBSUFFQkFBQUFFQUlBQW9CUUFBSmdBQUFDQWdBQUFCQUNBQUtCUUFBRTRGQUFBb0FBQUFFQUFBQUNBQUFBQUJBQ0FBQUFBQUFBQUZBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE2SVlMeE91SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzZJWUx4T3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vL2pXdVAveHEyYi82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0a1EvK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3Ly8vLy8vL2JKbi8vcmlBNy82NGdPLy9Hclp2L3JpQTcvNjRrUS8vLy8vLy9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8vQ29YLy8rL2Z6LzY0Z08vKytnVVAvLy8vLy82NG9YLy8vLy8vL3JpQTcvLy8vLy8vLy8vLy8vLy8vLzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvLy8vLy8vYlFyZi8vLy8vLzhyRngvK3VLRi8vLy8vLy82NGtULyt1SUR2L3JpQTcvLy8vLy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLy9LM2Z2Ly8vLy8vOHJWNy8rdUlEdi9yaWhmLy8vLy8vK3VKRS8vcmlBNy82NGdPLy8vLy8vL3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy8vLy8vLyt1SUR2L3JpQTcvNjRvWC8vLy8vLy9yaVJELzY0Z08vK3VKRVAvLy8vLy82NGdPLyt1SUR2L3JpQTcvNjRnTy8vdm8yUC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyt1S0YvLy8vLy8vNjRrUS8rdUlEdi9yaVJELy8vLy8vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi8vLy8vLzY0Z08vK3VJRHYvcmloZi8vLy8vLyt1SUR2L3JpQTcvNjRrVC8vLy8vLy9yaUE3LzY0Z08vK3VJRHYvcmlBNy83WlUxLyt1TUhmL3JpUlAvLy8vLy8rdUpFLy9yaUE3LzY0b1gvLy8vLy8vcmlBNy82NGdPLyt1S0ZmLy8vLy8vNjRnTy8rdUlEdi9yaUE3LzY0Z08vLzN6Ni8veHJXdi82NHNZLy8vLy8vL3JpQTcvNjRnTy8rdUtGLy8vLy8vLzY0b1YvK3VLRmYvcmpCdi8vLy8vLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi8wd1pELy92MzkvLzcrL3YvKy92Ny8vdjcrLy8vLy8vL3JpaGYvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vcmlBNy82NGdPLyt1SUR2L3JpQTcvN1pVMS8vLy8vLy93cDE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3ZvVkgvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzZJWUx4T3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNklZTHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFvQUFBQUlBQUFBRUFBQUFBQkFDQUFBQUFBQUFBVUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQTVvUUdTZW1HQytQcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82WVlMNCthRUJrbnBoZ3ZqNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzZZWUw0K3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvOWNlYy8vNzYrUC83NnR2Lzg3eUgvK3VKRVAvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLysrZFJ2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy85c3VrLy8vLy8vLy8vLy8vOXRDdS8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLysraVUvL3JpQTcvNjRnTy8rdUlEdi9yaUE3Lyt1TE0vL3JpelAvdGxUVC82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3Lzk5VzIvLy8vLy8vLy8vLy84YTFyLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi96dklmLytkN0cvK3VJRHYvcmlBNy82NGdPLyt1TEd2LysrL24vLy8vLy8vMzI4Zi94c0c3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JqQjMvKyt6ZS8vLy8vLy84N3VMLzY0a1EvK3VJRHYvcmlBNy84S2RkLy83OS9QLzY0TW4vNjRnTy8rdU1ILy8vLy8vLy8vLy8vLy8vLy8vNzZkbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvdnBGai8vdjcrLy8vLy8vL3hzRzcvNjRnTy8rNlhPLy85OXZELy8vLy8vL1RDbFAvcmlBNy82NHdmLy8vLy8vLy8vLy8vLy8vLy8rMldPZi93cUYvLy9PL2ovLy8vLy8vLy8vLy8vLy8vLy8vLy8vL3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi80MnNELy8vLy8vL25jd3Yvc2pTSC8rK3JiLy8vLy8vLzY0TXIvNjRrVC8rdUlEdi9yakIvLy8vLy8vLy8vLy8vcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi8vLy8vLy8vLy8vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLysra1ZmLy8vLy8vL3ZyNC8vbmJ3UC8vLy8vLysremYvK3lQSmYvcmlBNy82NGdPLyt1TUgvLy8vLy8vLy8vLy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLy8vLy8vLy8vLy8vNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vL3p1NHYvLy8vLy8rdURKLy8zejYvL3VsenYvNjRnTy8rdUlEdi9yaUE3LzY0d2YvLy8vLy8vLy8vLy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3Ly8vLy8vLy8vLy8vcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvOXMyby8vLy8vLy8yeUo3LzdJMGgvK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JqQi8vLy8vLy8vLy8vLy9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2Ly8vLy8vLy8vLy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYveXNYUC8vLy8vLy9yZ3lmL3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VNSC8vLy8vLy8vLy8vLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vLy8vLy8vLy8vLy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rK2dVUC8vLy8vLy9QRGwvK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjR3Zi8vLy8vLy8vLy8vLzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvLy8vLy8vLy8vLy9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8vSzNmZi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzMyOFAvcmpCLy8vLy8vLy8vLy8vL3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvLy8vLy8vLy8vLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy83STRrLy96eDUvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vK2R6Qi8rdU1ILy8vLy8vLy8vLy8vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8vLy8vLy8vLy8vLzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2LysrdmovLy8vLy8reU5JZi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NHdmLy8vLy8vLy8vLy8vNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy8vLy8vLy8vLy8vL3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vLzMzOHYvLy8vLy83WlF5Lyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yakIvLy8vLy8vLy8vLy8vcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi8vLy8vLy8vLy8vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3Lzc1MUkvKzJUTC8vcmlBNy82NGdPLyt1SUR2L3JpQTcvL2ZYdC8vLy8vLy91bUQ3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1TUgvLy8vLy8vLy8vLy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLy8vLy8vLy8vLy8vNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3hybTMvL3YzOC8vWEVsLy9yaUE3LzY0Z08vK3VJRHYvOTh1bi8vLy8vLysrZFJ2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0d2YvLy8vLy8vLy8vLy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3Ly8vLy8vLy8vLy8vcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VKRVAvODcrUC8vLy8vLy9Hclp2L3JpQTcvNjRnTy8venY1UC8vLy8vLzc1NUwvK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JqQi8vLy8vLy8vLy8vLy9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2Ly8vLy8vLy8vLy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8vVEFqLy8vLy8vLytOZTUvK3VLRmYvcmloWC8vTzdoLy8vLy8vL3ZvbFAvNjRvVi8rdUtGZi9yaWhYLzY0Z08vK3VNSC8vLy8vLy8vLy8vLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vLy8vLy8vLy8vLy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy83WlF5Ly83OS9mLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL3l0MzcvNjR3Zi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3Lyt1SEwvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy92MzgvKytmVFAvcmpCLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3p1WVAvLy8vLy8vYk9xdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3lQSi8vOTkvTC8vZlByLyt1SkUvL3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rK2tWZi82NXRiLzhLcGsvK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNllZTDQrdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK21HQytQbWhBWko2WVlMNCt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3JpQTcvNjRnTy8rdUlEdi9yaUE3LzY0Z08vK3VJRHYvcmlBNy82NGdPLyt1SUR2L3BoZ3ZqovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vKi56aGlodS5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vdi52enV1LmNvbS92aWRlby8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly92aWRlby56aGlodS5jb20vdmlkZW8vKgovLyBAbWF0Y2ggICAgICAgICo6Ly9pdGVtLnRhb2Jhby5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly8qZGV0YWlsLnRtYWxsLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovLypkZXRhaWwudG1hbGwuaGsvKgovLyBAbWF0Y2ggICAgICAgICo6Ly8qcHJvZHVjdC5zdW5pbmcuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vKml0ZW0uamQuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vKmRldGFpbC52aXAuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vKm1vYmlsZS55YW5na2VkdW8uY29tL2dvb2RzKgovLyBAY29ubmVjdCAgICAgIHpoaWh1LmNvbQovLyBAY29ubmVjdCAgICAgIHZ6dXUuY29tCi8vIEBjb25uZWN0ICAgICAgdC5taW1peGlhb2tlLmNvbQovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vanF1ZXJ5QDMuMi4xL2Rpc3QvanF1ZXJ5Lm1pbi5qcwovLyBAcnVuLWF0ICAgICAgIGRvY3VtZW50LWVuZAovLyBAZ3JhbnQgICAgICAgIEdNX29wZW5JblRhYgovLyBAZ3JhbnQgICAgICAgIEdNX3NldENsaXBib2FyZAovLyBAZ3JhbnQgICAgICAgIEdNX2luZm8KLy8gQGdyYW50ICAgICAgICBHTV94bWxodHRwUmVxdWVzdAovLyBAZ3JhbnQgICAgICAgIEdNX2Rvd25sb2FkCi8vIEBjaGFyc2V0CQkgVVRGLTgKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICBpZih3aW5kb3cudG9wICE9IHdpbmRvdy5zZWxmKXsKCQlyZXR1cm47Cgl9Cgl2YXIgd2luZG93X3VybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwogICAgdmFyIHdlYnNpdGVfaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0OwogICAgCiAgIAl2YXIgemhpaHVIZWxwZXI9e307CiAgIAl6aGlodUhlbHBlci5zdGFydCA9IGZ1bmN0aW9uKCl7CiAgIAkgICAgaWYod2Vic2l0ZV9ob3N0ID09ICJsaW5rLnpoaWh1LmNvbSIpeyAgLy/nm7TmjqXot7PovazliLDnm67moIfnvZHpobUKICAgCSAgICAJdmFyIHJlZ1JldCA9IGxvY2F0aW9uLnNlYXJjaC5tYXRjaCgvdGFyZ2V0PSguKz8pKCZ8JCkvKTsKICAgCSAgICAJaWYocmVnUmV0ICYmIHJlZ1JldC5sZW5ndGg9PTMpewogICAJICAgIAkJbG9jYXRpb24uaHJlZiA9IGRlY29kZVVSSUNvbXBvbmVudChyZWdSZXRbMV0pOwogICAJICAgIAl9CiAgIAkJfQogICAJICAgIC8v55+l5LmO5q2j5paHCiAgIAkgICAgZWxzZSBpZih3ZWJzaXRlX2hvc3QuaW5kZXhPZigiemhpaHUuY29tIikhPS0xKXsKICAgCSAgICAJLy/pl67popjlhajpg6jlsZXlvIAKICAgCQkgICAgZnVuY3Rpb24gYXV0b0V4cGFuZFF1ZXN0aW9uSW5mbygpIHsKICAgCQkgICAgICAgIC8v5bGV5byA6Zeu6aKY5o+P6L+wCiAgIAkJICAgICAgICBjb25zdCBzNCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5RdWVzdGlvblJpY2hUZXh0LW1vcmUnKTsKICAgCQkgICAgICAgIGlmIChzNCkgewogICAJCSAgICAgICAgICAgIHM0LmNsaWNrKCk7CiAgIAkJICAgICAgICB9CiAgIAkJICAgICAgICBjb25zdCBzMCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5TaWduQ29udGFpbmVyLWNvbnRlbnQnKTsKICAgCQkJICAgIGlmIChzMCkgewogICAJCQkgICAgICAgIGNvbnN0IHMxID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLk1vZGFsLWJhY2tkcm9wJyk7CiAgIAkJCSAgICAgICAgaWYgKHMxKSB7CiAgIAkJCSAgICAgICAgICAgIHMxLmNsaWNrKCk7CiAgIAkJCSAgICAgICAgfQogICAJCQkgICAgICAgIGNvbnN0IHMyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLk1vZGFsLWNsb3NlQnV0dG9uJyk7CiAgIAkJCSAgICAgICAgaWYgKHMyKSB7CiAgIAkJCSAgICAgICAgICAgIHMyLmNsaWNrKCk7CiAgIAkJCSAgICAgICAgfQogICAJCSAgICAgICAgfQogICAJCSAgICB9CiAgIAkJICAgIAogICAJCSAgICAvL+WOu+mZpOW5v+WRiu+8jOWPr+iDvemAoOaIkOivr+S8pO+8jOeUqOacgOWwj+etlueVpQogICAJCSAgICBmdW5jdGlvbiBjbGVhckFkdmVydCgpIHsKICAgCQkgICAgCWNvbnN0IGFkMSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5BcHBCYW5uZXInKTsKICAgCQkgICAgICAgIGlmIChhZDEpIHsKICAgCQkgICAgICAgICAgICBhZDEuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgCQkgICAgICAgIH0KICAgCQkgICAgICAgIGNvbnN0IGFkMiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5BZGJsb2NrQmFubmVyJyk7CiAgIAkJICAgICAgICBpZiAoYWQyKSB7CiAgIAkJICAgICAgICAgICAgYWQyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgIAkJICAgICAgICB9CiAgIAkJICAgIH0KICAgCSAgICAgICAgCiAgIAkgICAgICAgIC8v5Y676Zmk55m75b2V5o+Q56S6CiAgIAkgICAgICAgIGZ1bmN0aW9uIG5vTG9naW5Cb3goKXsKICAgCQkJCXZhciBJbnRlcnZhbFVuaXQgPSAyMDsKICAgCQkJCXZhciB0b3RhbEludGVydmFsTXMgPSAwOwogICAJCQkJdmFyIGxvZ2luSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpewogICAJCQkJCSQoIi5Nb2RhbC13cmFwcGVyIikuaGlkZSgpOwogICAJCQkJCSQoIi5zaWduRmxvd01vZGFsIikuY2hpbGRyZW4oIi5Nb2RhbC1jbG9zZUJ1dHRvbiIpLmNsaWNrKCk7CiAgIAkJCQkJdG90YWxJbnRlcnZhbE1zICs9IEludGVydmFsVW5pdDsKICAgCQkJCQlpZih0b3RhbEludGVydmFsTXMgPj0gMjAwMCl7ICAvL+W+queOr+Wkmuasoe+8jOaIkeWwseS4jeS/oei/mOaYvuekugogICAJCQkJCQljbGVhckludGVydmFsKGxvZ2luSW50ZXJ2YWwpOwogICAJCQkJCX0KICAgCQkJCX0sIEludGVydmFsVW5pdCk7IAogICAJCQkJJCgiLkFwcEhlYWRlci1sb2dpbiIpLmNsaWNrKGZ1bmN0aW9uKCl7CiAgIAkJCQkJY2xlYXJJbnRlcnZhbChsb2dpbkludGVydmFsKTsKICAgCQkJCQkkKCIuTW9kYWwtd3JhcHBlciIpLnNob3coKTsKICAgCQkJCX0pOwogICAJICAgICAgICB9CiAgIAkJICAgIAogICAJCSAgICAvL+abtOaUueS4uuebtOaOpemrmOa4heaYvuekugogICAJCSAgICBmdW5jdGlvbiBjaGFuZ2VIZWlnaHRRdWFsaXR5UGljKCl7CiAgIAkJICAgIAkkKCJib2R5IikuZmluZCgiaW1nIikuZWFjaChmdW5jdGlvbigpewogICAJCSAgICAJCXZhciBkYXRhb3JpZ2luYWwgPSAkKHRoaXMpLmF0dHIoImRhdGEtb3JpZ2luYWwiKTsKICAgCQkgICAgCQlpZighIWRhdGFvcmlnaW5hbCl7CiAgIAkJICAgIAkJCSQodGhpcykuYXR0cigic3JjIiwgZGF0YW9yaWdpbmFsKTsKICAgCQkgICAgCQl9CiAgIAkJICAgIAl9KTsKICAgCQkgICAgfQogICAJCSAgICAKICAgCQkgICAgLy8gKG5ldyBEYXRlKCkpLkZvcm1hdCgieXl5eS1NTS1kZCBoaDptbTpzcy5TIikgPT0+IDIwMDYtMDctMDIgMDg6MDk6MDQuNDIzIAogICAJCSAgICAvLyAobmV3IERhdGUoKSkuRm9ybWF0KCJ5eXl5LU0tZCBoOm06cy5TIikgICAgICA9PT4gMjAwNi03LTIgODo5OjQuMTggCiAgIAkJICAgIGZ1bmN0aW9uIHRpbWVGb3JtYXQodGltZSwgZm10KSB7IC8vYXV0aG9yOiBtZWl6eiAKICAgCQkgICAgICAgIHZhciBvID0gewogICAJCSAgICAgICAgICAgICJNKyI6IHRpbWUuZ2V0TW9udGgoKSArIDEsIC8v5pyI5Lu9IAogICAJCSAgICAgICAgICAgICJkKyI6IHRpbWUuZ2V0RGF0ZSgpLCAvL+aXpSAKICAgCQkgICAgICAgICAgICAiaCsiOiB0aW1lLmdldEhvdXJzKCksIC8v5bCP5pe2IAogICAJCSAgICAgICAgICAgICJtKyI6IHRpbWUuZ2V0TWludXRlcygpLCAvL+WIhiAKICAgCQkgICAgICAgICAgICAicysiOiB0aW1lLmdldFNlY29uZHMoKSwgLy/np5IgCiAgIAkJICAgICAgICAgICAgInErIjogTWF0aC5mbG9vcigodGltZS5nZXRNb250aCgpICsgMykgLyAzKSwgLy/lraPluqYgCiAgIAkJICAgICAgICAgICAgIlMiOiB0aW1lLmdldE1pbGxpc2Vjb25kcygpIC8v5q+r56eSIAogICAJCSAgICAgICAgfTsKICAgCQkgICAgICAgIGlmICgvKHkrKS8udGVzdChmbXQpKSBmbXQgPSBmbXQucmVwbGFjZShSZWdFeHAuJDEsICh0aW1lLmdldEZ1bGxZZWFyKCkgKyAiIikuc3Vic3RyKDQgLSBSZWdFeHAuJDEubGVuZ3RoKSk7CiAgIAkJICAgICAgICBmb3IgKHZhciBrIGluIG8pCiAgIAkJICAgICAgICAgICAgaWYgKG5ldyBSZWdFeHAoIigiICsgayArICIpIikudGVzdChmbXQpKQogICAJCSAgICAgICAgICAgICAgICBmbXQgPSBmbXQucmVwbGFjZShSZWdFeHAuJDEsIChSZWdFeHAuJDEubGVuZ3RoID09IDEpID8gKG9ba10pIDogKCgiMDAiICsgb1trXSkuc3Vic3RyKCgiIiArIG9ba10pLmxlbmd0aCkpKTsKICAgCQkgICAgICAgIHJldHVybiBmbXQ7CiAgIAkJICAgIH0KICAgCQkgICAgCiAgIAkJICAgIGZ1bmN0aW9uIHF1ZXN0aW9kYXRlKCkgewogICAJCSAgICAgICAgZnVuY3Rpb24gUXVlc3Rpb25QYWdlKCkgewogICAJCSAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLlF1ZXN0aW9uUGFnZSIpOwogICAJCSAgICAgICAgICAgIGlmICh0aXRsZSkgewogICAJCSAgICAgICAgICAgICAgICBjb25zdCBkYXRlQ3JlYXRlZCA9IHRpdGxlLnF1ZXJ5U2VsZWN0b3IoIltpdGVtcHJvcH49ZGF0ZUNyZWF0ZWRdW2NvbnRlbnRdIikuY29udGVudDsKICAgCQkgICAgICAgICAgICAgICAgY29uc3QgZGF0ZU1vZGlmaWVkID0gdGl0bGUucXVlcnlTZWxlY3RvcigiW2l0ZW1wcm9wfj1kYXRlTW9kaWZpZWRdW2NvbnRlbnRdIikuY29udGVudDsKICAgCQkKICAgCQkgICAgICAgICAgICAgICAgY29uc3QgY3RpbWUgPSB0aW1lRm9ybWF0KG5ldyBEYXRlKGRhdGVDcmVhdGVkKSwgInl5eXktTU0tZGQgaGg6bW06c3MiKTsKICAgCQkgICAgICAgICAgICAgICAgY29uc3QgbXRpbWUgPSB0aW1lRm9ybWF0KG5ldyBEYXRlKGRhdGVNb2RpZmllZCksICJ5eXl5LU1NLWRkIGhoOm1tOnNzIik7CiAgIAkJICAgICAgICAgICAgICAgIGNvbnN0IHNpZGUgPSB0aXRsZS5xdWVyeVNlbGVjdG9yKCIuUXVlc3Rpb25IZWFkZXItc2lkZSIpOwogICAJCSAgICAgICAgICAgICAgICB2YXIgdGltZWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAJCSAgICAgICAgICAgICAgICB0aW1lZGl2LmlubmVySFRNTCA9IGA8cD7liJvlu7rkuo46Jm5ic3A7JHtjdGltZX08L3A+PHA+57yW6L6R5LqOOiZuYnNwOyR7bXRpbWV9PC9wPmA7CiAgIAkJICAgICAgICAgICAgICAgIHRpbWVkaXYuc3R5bGUuY3NzVGV4dCA9ICdjb2xvcjojOTk5O2ZvbnQtc2l6ZToxMjsnOwogICAJCSAgICAgICAgICAgICAgICBzaWRlLmFwcGVuZENoaWxkKHRpbWVkaXYpOwogICAJCSAgICAgICAgICAgIH0KICAgCQkgICAgICAgIH0KICAgCQkKICAgCQkgICAgICAgIGxldCBsaXN0bnVtID0gMDsKICAgCQkgICAgICAgIGZ1bmN0aW9uIENvbnRlbnRJdGVtKCkgewogICAJCSAgICAgICAgICAgIGNvbnN0IGxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuQ29udGVudEl0ZW0iKTsKICAgCQkgICAgICAgICAgICBpZiAobGlzdG51bSAhPSBsaXN0Lmxlbmd0aCkgewogICAJCSAgICAgICAgICAgICAgICBsaXN0bnVtID0gbGlzdC5sZW5ndGg7CiAgIAkJICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykgewogICAJCSAgICAgICAgICAgICAgICAgICAgY29uc3QgaXRlbSA9IGxpc3RbaV07CiAgIAkJICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5nZXRBdHRyaWJ1dGUoJ3poX2RhdGVfbWsnKSAhPSAndHJ1ZScpIHsKICAgCQkgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlQ3JlYXRlZCA9IGl0ZW0ucXVlcnlTZWxlY3RvcigiW2l0ZW1wcm9wfj1kYXRlQ3JlYXRlZF1bY29udGVudF0iKS5jb250ZW50OwogICAJCSAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGVNb2RpZmllZCA9IGl0ZW0ucXVlcnlTZWxlY3RvcigiW2l0ZW1wcm9wfj1kYXRlTW9kaWZpZWRdW2NvbnRlbnRdIikuY29udGVudDsKICAgCQkKICAgCQkgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjdGltZSA9IHRpbWVGb3JtYXQobmV3IERhdGUoZGF0ZUNyZWF0ZWQpLCAieXl5eS1NTS1kZCBoaDptbTpzcyIpOwogICAJCSAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG10aW1lID0gdGltZUZvcm1hdChuZXcgRGF0ZShkYXRlTW9kaWZpZWQpLCAieXl5eS1NTS1kZCBoaDptbTpzcyIpOwogICAJCQogICAJCSAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNpZGVpdGVtID0gaXRlbS5xdWVyeVNlbGVjdG9yKCIuY3NzLWg1YWw0aiIpOwogICAJCSAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0aW1lZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogICAJCSAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVkaXYuaW5uZXJIVE1MID0gYDxwPuWIm+W7uuS6jjombmJzcDske2N0aW1lfSZuYnNwOyZuYnNwOyZuYnNwO+e8lui+keS6jjombmJzcDske210aW1lfTwvcD5gOwogICAJCSAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVkaXYuY2xhc3MgPSAiVm90ZXJzIjsKICAgCQkgICAgICAgICAgICAgICAgICAgICAgICB0aW1lZGl2LnN0eWxlLmNzc1RleHQgPSAnY29sb3I6Izk5OTtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6NXB4IDBweDsnOwogICAJCSAgICAgICAgICAgICAgICAgICAgICAgIHNpZGVpdGVtLmFwcGVuZENoaWxkKHRpbWVkaXYpOwogICAJCSAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uc2V0QXR0cmlidXRlKCd6aF9kYXRlX21rJywgJ3RydWUnKTsKICAgCQkgICAgICAgICAgICAgICAgICAgIH0KICAgCQkgICAgICAgICAgICAgICAgfQogICAJCSAgICAgICAgICAgIH0KICAgCQkgICAgICAgIH0KICAgCQkgICAgICAgIFF1ZXN0aW9uUGFnZSgpOwogICAJCSAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLlF1ZXN0aW9uLW1haW4iKS5hZGRFdmVudExpc3RlbmVyKCdET01Ob2RlSW5zZXJ0ZWQnLCBDb250ZW50SXRlbSk7CiAgIAkJICAgIH0KICAgCQkgICAgIAogICAJCSAgICBpZih3aW5kb3dfdXJsLmluZGV4T2YoImh0dHBzOi8vd3d3LnpoaWh1LmNvbS9xdWVzdGlvbi8iKSAhPSAtMSkgewogICAJCSAgICAgICAgYXV0b0V4cGFuZFF1ZXN0aW9uSW5mbygpOyAgICAgLy/pl67popjlhajpg6jlsZXlvIAKICAgCSAgICAJCXF1ZXN0aW9kYXRlKCk7ICAgICAvL+mXrumimOaXpeacnwogICAJCSAgICB9CiAgIAkJICAgCiAgIAkJICAgIG5vTG9naW5Cb3goKTsgICAvL+WOu+mZpOeZu+W9leahhgogICAJCSAgICBzZXRJbnRlcnZhbChjbGVhckFkdmVydCwgMTAwMCk7ICAvL+WOu+mZpOW5v+WRigogICAJCSAgIAlzZXRJbnRlcnZhbChjaGFuZ2VIZWlnaHRRdWFsaXR5UGljLCA1MDApOyAgIC8v5Zu+54mH6Ieq5Yqo6auY5riFCiAgIAkJfQogICAJfTsKICAgCXpoaWh1SGVscGVyLnN0YXJ0KCk7CgkKCXZhciBxdWFuR29vZHNDb3Vwb25IZWxwZXI9e307CglxdWFuR29vZHNDb3Vwb25IZWxwZXIuZ2V0UGxhdGZvcm09ZnVuY3Rpb24oKXsKCQl2YXIgY291cG9uVXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7CgkJdmFyIHBsYXRmb3JtPSIiOwoJCWlmKGNvdXBvblVybC5pbmRleE9mKCJzdW5pbmcuY29tIikhPS0xKXsKCQkJcGxhdGZvcm0gPSAic3VuaW5nIjsKCQl9ZWxzZSBpZihjb3Vwb25VcmwuaW5kZXhPZigiZGV0YWlsLnRtYWxsIikhPS0xKXsKCQkJcGxhdGZvcm0gPSAidG1hbGwiOwoJCX1lbHNlIGlmKGNvdXBvblVybC5pbmRleE9mKCJpdGVtLnRhb2Jhby5jb20iKSE9LTEpewoJCQlwbGF0Zm9ybSA9ICJ0YW9iYW8iOwoJCX1lbHNlIGlmKGNvdXBvblVybC5pbmRleE9mKCJpdGVtLmpkLmNvbSIpIT0tMSl7CgkJCXBsYXRmb3JtID0gImpkIjsKCQl9ZWxzZSBpZihjb3Vwb25VcmwuaW5kZXhPZigiZGV0YWlsLnZpcC5jb20iKSE9LTEpewoJCQlwbGF0Zm9ybSA9ICJ2cGluaHVpIjsKCQl9ZWxzZSBpZihjb3Vwb25VcmwuaW5kZXhPZigibW9iaWxlLnlhbmdrZWR1by5jb20iKSE9LTEpewoJCQlwbGF0Zm9ybSA9ICJwZGQiOwoJCX0KCQlyZXR1cm4gcGxhdGZvcm07Cgl9CglxdWFuR29vZHNDb3Vwb25IZWxwZXIuZmlsdGVyU3RyID0gZnVuY3Rpb24oc3RyKXsKCQlpZighc3RyKSByZXR1cm4gIiI7CgkJc3RyID0gc3RyLnJlcGxhY2UoL1x0L2csIiIpOwoJCXN0ciA9IHN0ci5yZXBsYWNlKC9cci9nLCIiKTsKCQlzdHIgPSBzdHIucmVwbGFjZSgvXG4vZywiIik7CgkJc3RyID0gc3RyLnJlcGxhY2UoL1wrL2csIiUyQiIpOy8vIisiCgkJc3RyID0gc3RyLnJlcGxhY2UoL1wmL2csIiUyNiIpOy8vIiYiCgkJc3RyID0gc3RyLnJlcGxhY2UoL1wjL2csIiUyMyIpOy8vIiMiCgkJcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHIpCgl9OwoJcXVhbkdvb2RzQ291cG9uSGVscGVyLmdldEdvb2RzRGF0YT1mdW5jdGlvbihwbGF0Zm9ybSl7CgkJdmFyIGdvb2RzSWQgPSAiIjsKCQl2YXIgZ29vZHNOYW1lID0gIiI7CgkJdmFyIHdlYnNpdGVVcmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKCQlpZihwbGF0Zm9ybT09InRhb2JhbyIpewoJCQlnb29kc0lkID0gdGhpcy5nZXRRdWVyeVN0cmluZygiaWQiKTsKCQkJZ29vZHNOYW1lPSQoIi50Yi1tYWluLXRpdGxlIikudGV4dCgpOwoJCQkKCQl9ZWxzZSBpZihwbGF0Zm9ybT09InRtYWxsIil7CgkJCWdvb2RzSWQgPSB0aGlzLmdldFF1ZXJ5U3RyaW5nKCJpZCIpOwoJCQlnb29kc05hbWU9JCgiLnRiLWRldGFpbC1oZCIpLnRleHQoKTsKCQkJCgkJfWVsc2UgaWYocGxhdGZvcm09PSJqZCIpewoJCQlnb29kc05hbWU9JCgiZGl2LnNrdS1uYW1lIikudGV4dCgpOwoJCQlnb29kc0lkID0gdGhpcy5nZXRRdWVyeVN0cmluZ0J5VXJsKHdlYnNpdGVVcmwpOwoJCQkKCQl9ZWxzZSBpZihwbGF0Zm9ybT09InN1bmluZyIpewoJCQl2YXIgdGV4dCA9ICQoIiNpdGVtRGlzcGxheU5hbWUiKS50ZXh0KCk7CgkJCWlmKCEhdGV4dCl7CgkJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCLoi4/lroHotoXluIIiLCIiKTsKCQkJCXRleHQgPSB0ZXh0LnJlcGxhY2UoIuiHquiQpSIsIiIpOwoJCQl9CgkJCWdvb2RzTmFtZT10ZXh0OwoJCQlnb29kc0lkID0gdGhpcy5nZXRRdWVyeVN0cmluZ0J5VXJsKHdlYnNpdGVVcmwpOwoJCQkKCQl9ZWxzZSBpZihwbGF0Zm9ybT09InZwaW5odWkiKXsKCQkJZ29vZHNJZCA9IHRoaXMuZ2V0UXVlcnlTdHJpbmdCeVVybCh3ZWJzaXRlVXJsKS5yZXBsYWNlKCJkZXRhaWwtIiwiIik7CgkJCWdvb2RzTmFtZSA9ICQoIi5waWItdGl0bGUtZGV0YWlsIikudGV4dCgpOwoJCQkKCQl9ZWxzZSBpZihwbGF0Zm9ybT09InBkZCIpewoJCQlnb29kc0lkID0gdGhpcy5nZXRRdWVyeVN0cmluZygiZ29vZHNfaWQiKTsKCQkJZ29vZHNOYW1lID0gJCgiLmVuYWJsZS1zZWxlY3QiKS50ZXh0KCk7CgkJfQoJCXZhciBkYXRhPXsiZ29vZHNJZCI6Z29vZHNJZCwgImdvb2RzTmFtZSI6dGhpcy5maWx0ZXJTdHIoZ29vZHNOYW1lKX0KCQlyZXR1cm4gZGF0YTsKCX07CglxdWFuR29vZHNDb3Vwb25IZWxwZXIuY3JlYXRlSHRtbCA9IGZ1bmN0aW9uKHBsYXRmb3JtLCBnb29kc0lkLCBnb29kc05hbWUpewoJCWlmKCFwbGF0Zm9ybSB8fCAhZ29vZHNJZCkgcmV0dXJuOwoJCXZhciBxdWFuR29vZHNDb3Vwb25IZWxwZXJVcmwgPSAiaHR0cHM6Ly90Lm1pbWl4aWFva2UuY29tL2FwaS9wbHVnaW4vaGl0L3YyP3NjcmlwdD00JiI7CgkJaWYocGxhdGZvcm0hPSJ2cGluaHVpIil7CgkJCXF1YW5Hb29kc0NvdXBvbkhlbHBlclVybCA9IHF1YW5Hb29kc0NvdXBvbkhlbHBlclVybCsicGxhdGZvcm09IitwbGF0Zm9ybSsiJmlkPSIrZ29vZHNJZCsiJnE9Iitnb29kc05hbWU7CgkJfWVsc2V7CgkJCXZhciB2aXAgPSBnb29kc0lkLnNwbGl0KCItIik7CgkJCXZhciB2YWRkaXRpb24gPSB2aXBbMF07CgkJCXZhciB2aWQgPSB2aXBbMV07CgkJCXF1YW5Hb29kc0NvdXBvbkhlbHBlclVybCA9IHF1YW5Hb29kc0NvdXBvbkhlbHBlclVybCsicGxhdGZvcm09IitwbGF0Zm9ybSsiJmlkPSIrdmlkKyImcT0iK2dvb2RzTmFtZSsiJmFkZGl0aW9uPSIrdmFkZGl0aW9uOwoJCX0JCQoJCUdNX3htbGh0dHBSZXF1ZXN0KHsKCQkJdXJsOiBxdWFuR29vZHNDb3Vwb25IZWxwZXJVcmwsCgkJICAJbWV0aG9kOiAiR0VUIiwKCQkgIAloZWFkZXJzOiB7IkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQifSwKCQkgIAlvbmxvYWQ6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7CgkJCQl2YXIgc3RhdHVzID0gcmVzcG9uc2Uuc3RhdHVzOwoJCQkJaWYoc3RhdHVzPT0yMDB8fHN0YXR1cz09JzIwMCcpewoJCQkJCXZhciBzZXJ2ZXJSZXNwb25zZUpzb24gPSBKU09OLnBhcnNlKHJlc3BvbnNlLnJlc3BvbnNlVGV4dCk7CgkJCQkJdmFyIGRhdGEgPSBzZXJ2ZXJSZXNwb25zZUpzb24uZGF0YTsKCQkJCQl2YXIgY3NzVGV4dCA9IGRhdGEuY3NzOwoJCQkJCXZhciBodG1sVGV4dCA9IGRhdGEuaHRtbDsKCQkJCQl2YXIgaGFuZGxlciA9IGRhdGEuaGFuZGxlcjsKCQkJCQlpZighY3NzVGV4dCB8fCAhaHRtbFRleHQgfHwgIWhhbmRsZXIpewoJCQkJCQlyZXR1cm47CgkJCQkJfQoJCQkJCSQoImJvZHkiKS5wcmVwZW5kKCI8c3R5bGU+Iitjc3NUZXh0KyI8L3N0eWxlPiIpOwoJCQkJCXZhciBoYW5kbGVycyA9IGhhbmRsZXIuc3BsaXQoIkAiKTsKCQkJCQlmb3IodmFyIGk9MDsgaTxoYW5kbGVycy5sZW5ndGg7IGkrKyl7CgkJCQkJCXZhciAkaGFuZGxlciA9ICQoIiIraGFuZGxlcnNbaV0rIiIpOwoJCQkJCQlpZihwbGF0Zm9ybT09InRhb2JhbyIpewoJCQkJCQkJJGhhbmRsZXIucGFyZW50KCkuYWZ0ZXIoaHRtbFRleHQpOwoJCQkJCQl9ZWxzZSBpZihwbGF0Zm9ybT09InRtYWxsIil7CgkJCQkJCQkkaGFuZGxlci5wYXJlbnQoKS5hZnRlcihodG1sVGV4dCk7CgkJCQkJCX1lbHNlIGlmKHBsYXRmb3JtPT0iamQiKXsKCQkJCQkJCSRoYW5kbGVyLmFmdGVyKGh0bWxUZXh0KTsKCQkJCQkJfWVsc2UgaWYocGxhdGZvcm09PSJzdW5pbmciKXsKCQkJCQkJCSRoYW5kbGVyLnBhcmVudCgpLmFmdGVyKGh0bWxUZXh0KTsKCQkJCQkJfWVsc2UgaWYocGxhdGZvcm09PSJ2cGluaHVpIil7CgkJCQkJCQkkaGFuZGxlci5wYXJlbnQoKS5hZnRlcihodG1sVGV4dCk7CgkJCQkJCX1lbHNlIGlmKHBsYXRmb3JtPT0icGRkIil7CgkJCQkJCQkkaGFuZGxlci5hZnRlcihodG1sVGV4dCk7CgkJCQkJCX0JCQkJCQoJCQkJCX0KCQkJCX0KCQkgIAl9CgkJfSk7Cgl9OwoJcXVhbkdvb2RzQ291cG9uSGVscGVyLmdldFF1ZXJ5U3RyaW5nID0gZnVuY3Rpb24odGFnKSB7CgkJdmFyIHQgPSBuZXcgUmVnRXhwKCIoXnwmKSIgKyB0YWcgKyAiPShbXiZdKikoJnwkKSIpOwoJCXZhciBhID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zdWJzdHIoMSkubWF0Y2godCk7CgkJaWYgKGEgIT0gbnVsbCkgcmV0dXJuIGFbMl07CgkJcmV0dXJuICIiOwoJfTsKCXF1YW5Hb29kc0NvdXBvbkhlbHBlci5nZXRRdWVyeVN0cmluZ0J5VXJsID0gZnVuY3Rpb24odXJsKSB7CgkJaWYodXJsLmluZGV4T2YoIj8iKSE9LTEpewoJCQl1cmwgPSB1cmwuc3BsaXQoIj8iKVswXQoJCX0KCQlpZih1cmwuaW5kZXhPZigiIyIpIT0tMSl7CgkJCXVybCA9IHVybC5zcGxpdCgiIyIpWzBdCgkJfQoJCXZhciBzcGxpdFRleHQgPSB1cmwuc3BsaXQoIi8iKTsKCQl2YXIgaWRUZXh0ID0gc3BsaXRUZXh0W3NwbGl0VGV4dC5sZW5ndGgtMV07CgkJaWRUZXh0ID0gaWRUZXh0LnJlcGxhY2UoIi5odG1sIiwiIik7CgkJcmV0dXJuIGlkVGV4dDsKCX07CglxdWFuR29vZHNDb3Vwb25IZWxwZXIuc3RhcnQgPSBmdW5jdGlvbigpewoJCXZhciBwbGF0Zm9ybSA9IHRoaXMuZ2V0UGxhdGZvcm0oKTsKCQlpZighcGxhdGZvcm0pIHJldHVybjsKCQl2YXIgZGVsYXlNUyA9IDA7CgkJaWYocGxhdGZvcm09PSJ2cGluaHVpIil7IC8v5ZSv5ZOB5Lya6YeH55So5LqG5byC5q2l5Yqg6L29CgkJCXZhciB2aXBJbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCl7CgkJCQlpZigkKCIucGliLXRpdGxlLWRldGFpbCIpLmxlbmd0aCE9MCB8fCBkZWxheU1TPj0xMjAwKXsKCQkJCQl2YXIgZ29vZHNEYXRhID0gcXVhbkdvb2RzQ291cG9uSGVscGVyLmdldEdvb2RzRGF0YShwbGF0Zm9ybSk7CgkJCQkJcXVhbkdvb2RzQ291cG9uSGVscGVyLmNyZWF0ZUh0bWwocGxhdGZvcm0sIGdvb2RzRGF0YS5nb29kc0lkLCBnb29kc0RhdGEuZ29vZHNOYW1lKTsKCQkJCQljbGVhckludGVydmFsKHZpcEludGVydmFsKQoJCQkJfQoJCQkJZGVsYXlNUys9MTAwOwoJCQl9LDEwMCk7CgkJfWVsc2V7CgkJCXZhciBnb29kc0RhdGEgPSBxdWFuR29vZHNDb3Vwb25IZWxwZXIuZ2V0R29vZHNEYXRhKHBsYXRmb3JtKTsKCQkJcXVhbkdvb2RzQ291cG9uSGVscGVyLmNyZWF0ZUh0bWwocGxhdGZvcm0sIGdvb2RzRGF0YS5nb29kc0lkLCBnb29kc0RhdGEuZ29vZHNOYW1lKTsKCQl9Cgl9OwkKCXF1YW5Hb29kc0NvdXBvbkhlbHBlci5zdGFydCgpOwp9KSgpOwovKioKICog6YG/5YWN6YeN5aSN6YCg6L2u5a2QCiAqIOmbhuaIkOaPkuS7tu+8muS4i+i9veefpeS5juinhumikQogKiBncmVhc3lmb3Jr5Zyw5Z2A77yaaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzM5MjA2CiAqIOeJiOacrO+8mlYxLjE4CiAqICovCihhc3luYyAoKSA9PiB7CiAgICBpZiAod2luZG93LmxvY2F0aW9uLmhvc3QgPT0gJ3d3dy56aGlodS5jb20nKSByZXR1cm47CgogICAgY29uc3QgcGxheWxpc3RCYXNlVXJsID0gJ2h0dHBzOi8vbGVucy56aGlodS5jb20vYXBpL3ZpZGVvcy8nOwogICAgLy9jb25zdCB2aWRlb0Jhc2VVcmwgPSAnaHR0cHM6Ly92aWRlby56aGlodS5jb20vdmlkZW8vJzsKICAgIGNvbnN0IHZpZGVvSWQgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoJy8nKS5wb3AoKTsgLy8g6KeG6aKRaWQKICAgIGNvbnN0IG1lbnVTdHlsZSA9ICd0cmFuc2Zvcm06bm9uZSAhaW1wb3J0YW50OyBsZWZ0OmF1dG8gIWltcG9ydGFudDsgcmlnaHQ6LTAuNWVtICFpbXBvcnRhbnQ7JzsKICAgIGNvbnN0IHBsYXllcklkID0gJ3BsYXllcic7CiAgICBjb25zdCBjb3ZlclNlbGVjdG9yID0gJyMnICsgcGxheWVySWQgKyAnID4gZGl2OmZpcnN0LWNoaWxkID4gZGl2OmZpcnN0LWNoaWxkID4gZGl2Om50aC1vZi10eXBlKDIpJzsKICAgIGNvbnN0IGNvbnRyb2xCYXJTZWxlY3RvciA9ICcjJyArIHBsYXllcklkICsgJyA+IGRpdjpmaXJzdC1jaGlsZCA+IGRpdjpmaXJzdC1jaGlsZCA+IGRpdjpsYXN0LWNoaWxkID4gZGl2Omxhc3QtY2hpbGQgPiBkaXY6Zmlyc3QtY2hpbGQnOwogICAgY29uc3Qgc3ZnRG93bmxvYWQgPSAnPHBhdGggZD0iTTkuNSw0IEgxNC41IFYxMCBIMTcuOCBMMTIsMTUuOCBMNi4yLDEwIEg5LjUgWiBNNi4yLDE4IEgxNy44IFYyMCBINi4yIFoiPjwvcGF0aD4nOwogICAgbGV0IHBsYXllciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBsYXllcklkKTsKICAgIGxldCByZXNvbHV0aW9uTWFwID0geyfmoIfmuIUnOiAnc2QnLCAn6auY5riFJzogJ2xkJywgJ+i2hea4hSc6ICdoZCd9OwogICAgbGV0IHZpZGVvcyA9IFtdOyAvLyDlrZjlgqjlkITliIbovqjnjofnmoTop4bpopHkv6Hmga8KICAgIGxldCBkb3dubG9hZGluZyA9IGZhbHNlOwoKICAgIGZ1bmN0aW9uIGdldEJyb3dlckluZm8oKSB7CiAgICAgICAgbGV0IGJyb3dzZXIgPSAoZnVuY3Rpb24gKHdpbmRvdykgewogICAgICAgICAgICBsZXQgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7CiAgICAgICAgICAgIGxldCBuYXZpZ2F0b3IgPSB3aW5kb3cubmF2aWdhdG9yOwogICAgICAgICAgICBsZXQgYWdlbnQgPSBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7CiAgICAgICAgICAgIC8vIElFOCvmlK/mjIEu6L+U5Zue5rWP6KeI5Zmo5riy5p+T5b2T5YmN5paH5qGj5omA55So55qE5qih5byPCiAgICAgICAgICAgIC8vIElFNixJRTc6dW5kZWZpbmVkLklFODo4KOWFvOWuueaooeW8j+i/lOWbnjcpLklFOTo5KOWFvOWuueaooeW8j+i/lOWbnjd8fDgpCiAgICAgICAgICAgIC8vIElFMTA6MTAo5YW85a655qih5byPN3x8OHx8OSkKICAgICAgICAgICAgbGV0IElFTW9kZSA9IGRvY3VtZW50LmRvY3VtZW50TW9kZTsKICAgICAgICAgICAgbGV0IGNocm9tZSA9IHdpbmRvdy5jaHJvbWUgfHwgZmFsc2U7CiAgICAgICAgICAgIGxldCBzeXN0ZW0gPSB7CiAgICAgICAgICAgICAgICAvLyB1c2VyLWFnZW50CiAgICAgICAgICAgICAgICBhZ2VudDogYWdlbnQsCiAgICAgICAgICAgICAgICAvLyDmmK/lkKbkuLpJRQogICAgICAgICAgICAgICAgaXNJRTogL3RyaWRlbnQvLnRlc3QoYWdlbnQpLAogICAgICAgICAgICAgICAgLy8gR2Vja2/lhoXmoLgKICAgICAgICAgICAgICAgIGlzR2Vja286IGFnZW50LmluZGV4T2YoJ2dlY2tvJykgPiAwICYmIGFnZW50LmluZGV4T2YoJ2xpa2UgZ2Vja28nKSA8IDAsCiAgICAgICAgICAgICAgICAvLyB3ZWJraXTlhoXmoLgKICAgICAgICAgICAgICAgIGlzV2Via2l0OiBhZ2VudC5pbmRleE9mKCd3ZWJraXQnKSA+IDAsCiAgICAgICAgICAgICAgICAvLyDmmK/lkKbkuLrmoIflh4bmqKHlvI8KICAgICAgICAgICAgICAgIGlzU3RyaWN0OiBkb2N1bWVudC5jb21wYXRNb2RlID09PSAnQ1NTMUNvbXBhdCcsCiAgICAgICAgICAgICAgICAvLyDmmK/lkKbmlK/mjIFzdWJ0aXRsZQogICAgICAgICAgICAgICAgc3VwcG9ydFN1YlRpdGxlOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICd0cmFjaycgaW4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHJhY2snKTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAvLyDmmK/lkKbmlK/mjIFzY29wZWQKICAgICAgICAgICAgICAgIHN1cHBvcnRTY29wZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAnc2NvcGVkJyBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOwogICAgICAgICAgICAgICAgfSwKCiAgICAgICAgICAgICAgICAvLyDojrflj5ZJReeahOeJiOacrOWPtwogICAgICAgICAgICAgICAgaWVWZXJzaW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHJNc2llID0gLyhtc2llXHN8dHJpZGVudC4qcnY6KShbXHcuXSspLzsKICAgICAgICAgICAgICAgICAgICBsZXQgbWF0Y2ggPSByTXNpZS5leGVjKGFnZW50KTsKICAgICAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2hbMl07CiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gSUVNb2RlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAvLyBPcGVyYeeJiOacrOWPtwogICAgICAgICAgICAgICAgb3BlcmFWZXJzaW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5vcGVyYSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFnZW50Lm1hdGNoKC9vcGVyYS4oW1xkLl0rKS8pWzFdOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGFnZW50LmluZGV4T2YoJ29wcicpID4gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFnZW50Lm1hdGNoKC9vcHJcLyhbXGQuXSspLylbMV07CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAwOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAvLyDmtY/op4jlmajnsbvlnosoSUXjgIFPcGVyYeOAgUNocm9tZeOAgVNhZmFyaeOAgUZpcmVmb3gpCiAgICAgICAgICAgICAgICBzeXN0ZW0udHlwZSA9IHN5c3RlbS5pc0lFID8gJ0lFJyA6CiAgICAgICAgICAgICAgICAgICAgd2luZG93Lm9wZXJhIHx8IChhZ2VudC5pbmRleE9mKCdvcHInKSA+IDApID8gJ09wZXJhJyA6CiAgICAgICAgICAgICAgICAgICAgICAgIChhZ2VudC5pbmRleE9mKCdjaHJvbWUnKSA+IDApID8gJ0Nocm9tZScgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9zYWZhcmnkuZ/mj5DkvpvkuobkuJPpl6jnmoTliKTlrprmlrnlvI8KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuRGF0YWJhc2UgPyAnU2FmYXJpJyA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGFnZW50LmluZGV4T2YoJ2ZpcmVmb3gnKSA+IDApID8gJ0ZpcmVmb3gnIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Vua25vdyc7CgogICAgICAgICAgICAgICAgLy8g54mI5pys5Y+3CiAgICAgICAgICAgICAgICBzeXN0ZW0udmVyc2lvbiA9IChzeXN0ZW0udHlwZSA9PT0gJ0lFJykgPyBzeXN0ZW0uaWVWZXJzaW9uKCkgOgogICAgICAgICAgICAgICAgICAgIChzeXN0ZW0udHlwZSA9PT0gJ0ZpcmVmb3gnKSA/IGFnZW50Lm1hdGNoKC9maXJlZm94XC8oW1xkLl0rKS8pWzFdIDoKICAgICAgICAgICAgICAgICAgICAgICAgKHN5c3RlbS50eXBlID09PSAnQ2hyb21lJykgPyBhZ2VudC5tYXRjaCgvY2hyb21lXC8oW1xkLl0rKS8pWzFdIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIChzeXN0ZW0udHlwZSA9PT0gJ09wZXJhJykgPyBzeXN0ZW0ub3BlcmFWZXJzaW9uKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChzeXN0ZW0udHlwZSA9PT0gJ1NhZmFyaScpID8gYWdlbnQubWF0Y2goL3ZlcnNpb25cLyhbXGQuXSspLylbMV0gOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnMCc7CgogICAgICAgICAgICAgICAgLy8g5rWP6KeI5Zmo5aSW5aOzCiAgICAgICAgICAgICAgICBzeXN0ZW0uc2hlbGwgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGFnZW50LmluZGV4T2YoJ2VkZ2UnKSA+IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3lzdGVtLnZlcnNpb24gPSBhZ2VudC5tYXRjaCgvZWRnZVwvKFtcZC5dKykvKVsxXSB8fCBzeXN0ZW0udmVyc2lvbjsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdFZGdlJzsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgLy8g6YGo5ri45rWP6KeI5ZmoCiAgICAgICAgICAgICAgICAgICAgaWYgKGFnZW50LmluZGV4T2YoJ21heHRob24nKSA+IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3lzdGVtLnZlcnNpb24gPSBhZ2VudC5tYXRjaCgvbWF4dGhvblwvKFtcZC5dKykvKVsxXSB8fCBzeXN0ZW0udmVyc2lvbjsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdNYXh0aG9uJzsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgLy8gUVHmtY/op4jlmagKICAgICAgICAgICAgICAgICAgICBpZiAoYWdlbnQuaW5kZXhPZigncXFicm93c2VyJykgPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN5c3RlbS52ZXJzaW9uID0gYWdlbnQubWF0Y2goL3FxYnJvd3NlclwvKFtcZC5dKykvKVsxXSB8fCBzeXN0ZW0udmVyc2lvbjsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdRUUJyb3dzZXInOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvLyDmkJzni5fmtY/op4jlmagKICAgICAgICAgICAgICAgICAgICBpZiAoYWdlbnQuaW5kZXhPZignc2UgMi54JykgPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAn5pCc54uX5rWP6KeI5ZmoJzsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIC8vIENocm9tZTrkuZ/lj6/ku6Xkvb/nlKh3aW5kb3cuY2hyb21lICYmIHdpbmRvdy5jaHJvbWUud2Vic3RvcmXliKTmlq0KICAgICAgICAgICAgICAgICAgICBpZiAoY2hyb21lICYmIHN5c3RlbS50eXBlICE9PSAnT3BlcmEnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBleHRlcm5hbCA9IHdpbmRvdy5leHRlcm5hbDsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNsaWVudEluZm8gPSB3aW5kb3cuY2xpZW50SW5mb3JtYXRpb247CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWuouaIt+err+ivreiogDp6aC1jbix6aC4zNjDkuIvpnaLkvJrov5Tlm551bmRlZmluZWQKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNsaWVudExhbmd1YWdlID0gY2xpZW50SW5mby5sYW5ndWFnZXM7CgogICAgICAgICAgICAgICAgICAgICAgICAvLyDnjI7osbnmtY/op4jlmag65oiW6ICFYWdlbnQuaW5kZXhPZigibGJicm93c2VyIik+MAogICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXh0ZXJuYWwgJiYgJ0xpZWJhb0dldFZlcnNpb24nIGluIGV4dGVybmFsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ0xCQnJvd3Nlcic7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g55m+5bqm5rWP6KeI5ZmoCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhZ2VudC5pbmRleE9mKCdiaWR1YnJvd3NlcicpID4gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3lzdGVtLnZlcnNpb24gPSBhZ2VudC5tYXRjaCgvYmlkdWJyb3dzZXJcLyhbXGQuXSspLylbMV0gfHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZ2VudC5tYXRjaCgvY2hyb21lXC8oW1xkLl0rKS8pWzFdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdCYWlEdUJyb3dzZXInOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIDM2MOaegemAn+a1j+iniOWZqOWSjDM2MOWuieWFqOa1j+iniOWZqAogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3lzdGVtLnN1cHBvcnRTdWJUaXRsZSgpICYmIHR5cGVvZiBjbGllbnRMYW5ndWFnZSA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBzdG9yZUtleUxlbiA9IE9iamVjdC5rZXlzKGNocm9tZS53ZWJzdG9yZSkubGVuZ3RoOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHY4TG9jYWxlID0gJ3Y4TG9jYWxlJyBpbiB3aW5kb3c7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RvcmVLZXlMZW4gPiAxID8gJzM2MOaegemAn+a1j+iniOWZqCcgOiAnMzYw5a6J5YWo5rWP6KeI5ZmoJzsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ0Nocm9tZSc7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIHJldHVybiBzeXN0ZW0udHlwZTsKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgLy8g5rWP6KeI5Zmo5ZCN56ewKOWmguaenOaYr+Wjs+a1j+iniOWZqCzliJnov5Tlm57lo7PlkI3np7ApCiAgICAgICAgICAgICAgICBzeXN0ZW0ubmFtZSA9IHN5c3RlbS5zaGVsbCgpOwogICAgICAgICAgICAgICAgLy8g5a+554mI5pys5Y+36L+b6KGM6L+H5ruk6L+H5aSE55CGCiAgICAgICAgICAgICAgICAvLyBTeXN0ZW0udmVyc2lvbiA9IFN5c3RlbS52ZXJzaW9uRmlsdGVyKFN5c3RlbS52ZXJzaW9uKTsKCiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGUubWVzc2FnZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBzeXN0ZW07CgogICAgICAgIH0pKHdpbmRvdyk7CgogICAgICAgIGlmIChicm93c2VyLm5hbWUgPT0gdW5kZWZpbmVkIHx8IGJyb3dzZXIubmFtZSA9PSAnJykgewogICAgICAgICAgICBicm93c2VyLm5hbWUgPSAnVW5rbm93bic7CiAgICAgICAgICAgIGJyb3dzZXIudmVyc2lvbiA9ICdVbmtub3duJzsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZiAoYnJvd3Nlci52ZXJzaW9uID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICBicm93c2VyLnZlcnNpb24gPSAnVW5rbm93bic7CiAgICAgICAgfQogICAgICAgIHJldHVybiBicm93c2VyOwogICAgfQoKICAgIGZ1bmN0aW9uIGZldGNoUmV0cnkodXJsLCBvcHRpb25zID0ge30sIHRpbWVzID0gMSwgZGVsYXkgPSAxMDAwLCBjaGVja1N0YXR1cyA9IHRydWUpIHsKICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgICAgICAvLyBmZXRjaCDmiJDlip/lpITnkIblh73mlbAKICAgICAgICAgICAgZnVuY3Rpb24gc3VjY2VzcyhyZXMpIHsKICAgICAgICAgICAgICAgIGlmIChjaGVja1N0YXR1cyAmJiAhcmVzLm9rKSB7CiAgICAgICAgICAgICAgICAgICAgZmFpbHVyZShyZXMpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShyZXMpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyDljZXmrKHlpLHotKXlpITnkIblh73mlbAKICAgICAgICAgICAgZnVuY3Rpb24gZmFpbHVyZShlcnJvcikgewogICAgICAgICAgICAgICAgdGltZXMtLTsKCiAgICAgICAgICAgICAgICBpZiAodGltZXMpIHsKICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZldGNoVXJsLCBkZWxheSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyDmgLvkvZPlpLHotKXlpITnkIblh73mlbAKICAgICAgICAgICAgZnVuY3Rpb24gZmluYWxIYW5kbGVyKGVycm9yKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZnVuY3Rpb24gZmV0Y2hVcmwoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKQogICAgICAgICAgICAgICAgICAgIC50aGVuKHN1Y2Nlc3MpCiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZhaWx1cmUpCiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZpbmFsSGFuZGxlcik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZldGNoVXJsKCk7CiAgICAgICAgfSk7CiAgICB9CgogICAgLy8g5LiL6L295oyH5a6adXJs55qE6LWE5rqQCiAgICBhc3luYyBmdW5jdGlvbiBkb3dubG9hZFVybCh1cmwsIG5hbWUgPSAobmV3IERhdGUoKSkudmFsdWVPZigpICsgJy5tcDQnKSB7CiAgICAgICAgbGV0IGJyb3dzZXIgPSBnZXRCcm93ZXJJbmZvKCk7CgogICAgICAgIC8vIEdyZWFzZW1vbmtleSDpnIDopoHmioogdXJsIOi9rOS4uiBibG9iVXJsCiAgICAgICAgaWYgKEdNX2luZm8uc2NyaXB0SGFuZGxlciA9PSAnR3JlYXNlbW9ua2V5JykgewogICAgICAgICAgICBsZXQgcmVzID0gYXdhaXQgZmV0Y2hSZXRyeSh1cmwpOwogICAgICAgICAgICBsZXQgYmxvYiA9IGF3YWl0IHJlcy5ibG9iKCk7CiAgICAgICAgICAgIHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7CiAgICAgICAgfQoKICAgICAgICAvLyBDaHJvbWUg5Y+v5Lul5L2/55SoIFRhbXBlcm1vbmtleSDnmoQgR01fZG93bmxvYWQg5Ye95pWw57uV6L+HIENTUChDb250ZW50IFNlY3VyaXR5IFBvbGljeSkg55qE6ZmQ5Yi2CiAgICAgICAgaWYgKHdpbmRvdy5HTV9kb3dubG9hZCkgewogICAgICAgICAgICBHTV9kb3dubG9hZCh7dXJsLCBuYW1lfSk7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICAvLyBmaXJlZm94IOmcgOimgeemgeeUqCBDU1AsIGFib3V0OmNvbmZpZyAtPiBzZWN1cml0eS5jc3AuZW5hYmxlID0+IGZhbHNlCiAgICAgICAgICAgIGxldCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOwogICAgICAgICAgICBhLmhyZWYgPSB1cmw7CiAgICAgICAgICAgIGEuZG93bmxvYWQgPSBuYW1lOwogICAgICAgICAgICAvLyBhLnRhcmdldCA9ICdfYmxhbmsnOwogICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOwogICAgICAgICAgICBhLmNsaWNrKCk7CiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoYSk7CgogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTsKICAgICAgICAgICAgfSwgMTAwKTsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gaHVtYW5TaXplKHNpemUpIHsKICAgICAgICBsZXQgbiA9IE1hdGgubG9nKHNpemUpIC8gTWF0aC5sb2coMTAyNCkgfCAwOwogICAgICAgIHJldHVybiAoc2l6ZSAvIE1hdGgucG93KDEwMjQsIG4pKS50b0ZpeGVkKDApICsgJyAnICsgKG4gPyAnS01HVFBFWlknWy0tbl0gKyAnQicgOiAnQnl0ZXMnKTsKICAgIH0KCiAgICBpZiAoIXBsYXllcikgcmV0dXJuOwoKICAgIC8vIOiOt+WPluinhumikeS/oeaBrwogICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2hSZXRyeShwbGF5bGlzdEJhc2VVcmwgKyB2aWRlb0lkLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAncmVmZXJlcic6ICdyZWZlcmVyQmFzZVVybCArIHZpZGVvSWQnLAogICAgICAgICAgICAnYXV0aG9yaXphdGlvbic6ICdvYXV0aCBjM2NlZjdjNjZhMTg0M2Y4YjNhOWU2YTFlMzE2MGUyMCcgLy8gaW4genBsYXllci5taW4uanMgb2YgemhpaHUKICAgICAgICB9CiAgICB9LCAzKTsKICAgIGNvbnN0IHZpZGVvSW5mbyA9IGF3YWl0IHJlcy5qc29uKCk7CgogICAgLy8g6I635Y+W5LiN5ZCM5YiG6L6o546H6KeG6aKR55qE5L+h5oGvCiAgICBmb3IgKGxldCBba2V5LCB2aWRlb10gb2YgT2JqZWN0LmVudHJpZXModmlkZW9JbmZvLnBsYXlsaXN0KSkgewogICAgICAgIHZpZGVvLm5hbWUgPSBrZXk7CgogICAgICAgIGlmICghdmlkZW9zLmZpbmQodiA9PiB2LndpZHRoID09IHZpZGVvLndpZHRoKSkgewogICAgICAgICAgICB2aWRlb3MucHVzaCh2aWRlbyk7CiAgICAgICAgfQogICAgfQoKICAgIC8vIOaMieWIhui+qOeOh+Wkp+Wwj+aOkuW6jwogICAgdmlkZW9zID0gdmlkZW9zLnNvcnQoZnVuY3Rpb24gKHYxLCB2MikgewogICAgICAgIHJldHVybiB2MS53aWR0aCA9PSB2Mi53aWR0aCA/IDAgOiAodjEud2lkdGggPiB2Mi53aWR0aCA/IDEgOiAtMSk7CiAgICB9KS5yZXZlcnNlKCk7CgogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NTm9kZUluc2VydGVkJywgKGV2dCkgPT4gewogICAgICAgIGxldCBkb21Db250cm9sQmFyID0gZXZ0LnJlbGF0ZWROb2RlLnF1ZXJ5U2VsZWN0b3IoJzpzY29wZSA+IGRpdjpsYXN0LWNoaWxkID4gZGl2OmZpcnN0LWNoaWxkJyk7CiAgICAgICAgaWYgKCFkb21Db250cm9sQmFyIHx8IGRvbUNvbnRyb2xCYXIucXVlcnlTZWxlY3RvcignLmRvd25sb2FkJykpIHJldHVybjsKCiAgICAgICAgbGV0IGRvbUZ1bGxTY3JlZW5CdG4gPSBkb21Db250cm9sQmFyLnF1ZXJ5U2VsZWN0b3IoJzpzY29wZSA+IGRpdjpudGgtbGFzdC1vZi10eXBlKDEpJyk7CiAgICAgICAgbGV0IGRvbVJlc29sdXRpb25CdG4gPSBkb21Db250cm9sQmFyLnF1ZXJ5U2VsZWN0b3IoJzpzY29wZSA+IGRpdjpudGgtbGFzdC1vZi10eXBlKDMpJyk7CiAgICAgICAgbGV0IGRvbURvd25sb2FkQnRuLCBkZWZhdWx0UmVzb2x1dGlvbiwgYnV0dG9uczsKICAgICAgICBpZiAoIWRvbUZ1bGxTY3JlZW5CdG4gfHwgIWRvbUZ1bGxTY3JlZW5CdG4ucXVlcnlTZWxlY3RvcignYnV0dG9uJykpIHJldHVybjsKCiAgICAgICAgLy8g5YWL6ZqG5YiG6L6o546H6I+c5Y2V5oiW5YWo5bGP5oyJ6ZKu5Li65LiL6L295oyJ6ZKuCiAgICAgICAgZG9tRG93bmxvYWRCdG4gPSAoZG9tUmVzb2x1dGlvbkJ0biAmJiAoZG9tUmVzb2x1dGlvbkJ0bi5jbGFzc05hbWUgPT0gZG9tRnVsbFNjcmVlbkJ0bi5jbGFzc05hbWUpKQogICAgICAgICAgICA/IGRvbVJlc29sdXRpb25CdG4uY2xvbmVOb2RlKHRydWUpCiAgICAgICAgICAgIDogZG9tRnVsbFNjcmVlbkJ0bi5jbG9uZU5vZGUodHJ1ZSk7CgogICAgICAgIGRlZmF1bHRSZXNvbHV0aW9uID0gZG9tRG93bmxvYWRCdG4ucXVlcnlTZWxlY3RvcignYnV0dG9uJykuaW5uZXJUZXh0OwoKICAgICAgICAvLyDnlJ/miJDkuIvovb3mjInpkq7lm77moIcKICAgICAgICBkb21Eb3dubG9hZEJ0bi5xdWVyeVNlbGVjdG9yKCdidXR0b246Zmlyc3QtY2hpbGQnKS5vdXRlckhUTUwgPSBkb21GdWxsU2NyZWVuQnRuLmNsb25lTm9kZSh0cnVlKS5xdWVyeVNlbGVjdG9yKCdidXR0b24nKS5vdXRlckhUTUw7CiAgICAgICAgZG9tRG93bmxvYWRCdG4ucXVlcnlTZWxlY3Rvcignc3ZnJykuaW5uZXJIVE1MID0gc3ZnRG93bmxvYWQ7CiAgICAgICAgZG9tRG93bmxvYWRCdG4uY2xhc3NOYW1lID0gZG9tRG93bmxvYWRCdG4uY2xhc3NOYW1lICsgJyBkb3dubG9hZCc7CgogICAgICAgIGJ1dHRvbnMgPSBkb21Eb3dubG9hZEJ0bi5xdWVyeVNlbGVjdG9yQWxsKCdidXR0b24nKTsKCiAgICAgICAgLy8gYnV0dG9uIOWFg+e0oOa3u+WKoOWvueW6lOeahOS4i+i9veWcsOWdgAogICAgICAgIGJ1dHRvbnMuZm9yRWFjaChkb20gPT4gewogICAgICAgICAgICBsZXQgdmlkZW8gPSB2aWRlb3MuZmluZCh2ID0+IHYubmFtZSA9PSByZXNvbHV0aW9uTWFwW2RvbS5pbm5lclRleHQgfHwgZGVmYXVsdFJlc29sdXRpb25dKTsKICAgICAgICAgICAgdmlkZW8gPSB2aWRlbyB8fCB2aWRlb3NbMF07CiAgICAgICAgICAgIGRvbS5kYXRhc2V0LnZpZGVvID0gdmlkZW8ucGxheV91cmw7CiAgICAgICAgICAgIGlmIChkb20uaW5uZXJUZXh0KSB7CiAgICAgICAgICAgICAgICAoZG9tLmlubmVyVGV4dCA9IGAke2RvbS5pbm5lclRleHR9ICgke2h1bWFuU2l6ZSh2aWRlby5zaXplKX0pYCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAoYnV0dG9ucy5sZW5ndGggPT0gMSkgewogICAgICAgICAgICAgICAgZG9tLm5leHRTaWJsaW5nLnF1ZXJ5U2VsZWN0b3IoJ2RpdicpLmlubmVyVGV4dCA9IGh1bWFuU2l6ZSh2aWRlby5zaXplKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICAvLyDpvKDmoIfkuovku7YgLSDmmL7npLroj5zljZUKICAgICAgICBkb21Eb3dubG9hZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVyZW50ZXInLCAoKSA9PiB7CiAgICAgICAgICAgIGxldCBkb21NZW51ID0gZG9tRG93bmxvYWRCdG4ucXVlcnlTZWxlY3RvcignZGl2Om50aC1vZi10eXBlKDEpJyk7CiAgICAgICAgICAgIGlmIChkb21NZW51KSB7CiAgICAgICAgICAgICAgICBkb21NZW51LnN0eWxlLmNzc1RleHQgPSBtZW51U3R5bGUgKyAnb3BhY2l0eToxICFpbXBvcnRhbnQ7IHZpc2liaWxpdHk6dmlzaWJsZSAhaW1wb3J0YW50JzsKICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICAvLyDpvKDmoIfkuovku7YgLSDpmpDol4/oj5zljZUKICAgICAgICBkb21Eb3dubG9hZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVybGVhdmUnLCAoKSA9PiB7CiAgICAgICAgICAgIGxldCBkb21NZW51ID0gZG9tRG93bmxvYWRCdG4ucXVlcnlTZWxlY3RvcignZGl2Om50aC1vZi10eXBlKDEpJyk7CiAgICAgICAgICAgIGlmIChkb21NZW51KSB7CiAgICAgICAgICAgICAgICBkb21NZW51LnN0eWxlLmNzc1RleHQgPSBtZW51U3R5bGU7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgLy8g6byg5qCH5LqL5Lu2IC0g6YCJ5oup6I+c5Y2V6aG5CiAgICAgICAgZG9tRG93bmxvYWRCdG4uYWRkRXZlbnRMaXN0ZW5lcigncG9pbnRlcnVwJywgZXZlbnQgPT4gewogICAgICAgICAgICBpZiAoZG93bmxvYWRpbmcpIHsKICAgICAgICAgICAgICAgIGFsZXJ0KCflvZPliY3mraPlnKjmiafooYzkuIvovb3ku7vliqHvvIzor7fnrYnlvoXku7vliqHlrozmiJDjgIInKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGV0IGUgPSBldmVudC5zcmNFbGVtZW50IHx8IGV2ZW50LnRhcmdldDsKCiAgICAgICAgICAgIHdoaWxlIChlLnRhZ05hbWUgIT0gJ0JVVFRPTicpIHsKICAgICAgICAgICAgICAgIGUgPSBlLnBhcmVudE5vZGU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGRvd25sb2FkVXJsKGUuZGF0YXNldC52aWRlbyk7CiAgICAgICAgfSk7CgogICAgICAgIC8vIOaYvuekuuS4i+i9veaMiemSrgogICAgICAgIGRvbUNvbnRyb2xCYXIuYXBwZW5kQ2hpbGQoZG9tRG93bmxvYWRCdG4pOwoKICAgIH0pOwp9KSgpOw==","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js","ts":1625035392129,"mimetype":"text/javascript"},"source":""}]},{"name":"Baidu Tieba: No Login","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["/^https?://(?:(?:c\\.)?tieba\\.baidu\\.com|www\\.tieba\\.com|dq\\.tieba\\.com|jump2?\\.bdimg\\.com)//"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1625035392136,"data":{}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/14151-baidu-tieba-no-login/code/Baidu%20Tieba:%20No%20Login.user.js","uuid":"ef53b7e7-0fb3-4366-9abe-71e2a7c00ede","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSAgIFZBX2kKLy8gQHZlcnNpb24gICAgIDQuMi4wLjIwMTkwOTAxCi8vIEBncmFudCAgICAgICB1bnNhZmVXaW5kb3cKLy8gQGluY2x1ZGUgICAgIC9eaHR0cHM/Oi8vKD86KD86Y1wuKT90aWViYVwuYmFpZHVcLmNvbXx3d3dcLnRpZWJhXC5jb218ZHFcLnRpZWJhXC5jb218anVtcDI/XC5iZGltZ1wuY29tKS8vCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1zdGFydAovLyBAbmFtZSAgICAgICAgQmFpZHUgVGllYmE6IE5vIExvZ2luCi8vIEBuYW1lOnpoLUNOICDnmb7luqbotLTlkKfvvJrkuI3nmbvlvZXljbPlj6/nnIvotLQKLy8gQG5hbWU6emgtVFcgIOeZvuW6pui0tOWQp++8muS4jeeZu+WFpeWNs+WPr+eci+iyvAovLyBAZGVzY3JpcHRpb24gVmlldyBCYWlkdSBUaWViYSB3aXRob3V0IGxvZ2luLgovLyBAZGVzY3JpcHRpb246emgtQ04g55m+5bqm6LS05ZCn55yL6LS077yI5YyF5ous5qW85Lit5qW877yJ5peg6aG755m75b2V44CCCi8vIEBkZXNjcmlwdGlvbjp6aC1UVyDnmb7luqbotLTlkKfnnIvosrzvvIjljIXmi6zmqJPkuK3mqJPvvInnhKHpoIjnmbvlhaXjgIIKLy8gPT0vVXNlclNjcmlwdD09Cgp1bnNhZmVXaW5kb3cuT2JqZWN0LmZyZWV6ZSA9IG51bGw7Cgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgdHJ5IHsKICAgIHVuc2FmZVdpbmRvdy5QYWdlRGF0YS51c2VyLmlzX2xvZ2luID0gMTsKICB9IGNhdGNoIChlcnJvcikgewogICAgLy9hbGVydChlcnJvcik7CiAgfQp9LCB0cnVlKTsK"},{"name":"Mouseover Popup Image Viewer","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":["upload.wikimedia.org","www.bjfgmodel.com"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1625035392136,"data":{"cfg":"s{\"version\":5,\"delay\":500,\"start\":\"auto\",\"zoom\":\"context\",\"center\":false,\"imgtab\":false,\"close\":true,\"preload\":false,\"css\":\"\",\"scales\":[],\"hosts\":\"\",\"scale\":1.5,\"xhr\":true}"}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/404-mouseover-popup-image-viewer/code/Mouseover%20Popup%20Image%20Viewer.user.js","uuid":"868cefc3-fcd6-4ba0-90c4-bfa2253526e3","source":""},{"name":"Easy Offline","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["http://www.toodledo.com/tasks/*","*://*.google.*/*","*://mega.*/*","*://*.mega.*/*","*://*.youku.com/v_*","*://*pan.baidu.com","*://*.iqiyi.com/v_*","*://*.iqiyi.com/w_*","*://*.iqiyi.com/a_*","*://*.le.com/ptv/vplay/*","*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://v.qq.com/tv/*","*://*.tudou.com/listplay/*","*://*.tudou.com/albumplay/*","*://*.tudou.com/programs/view/*","*://*.mgtv.com/b/*","*://film.sohu.com/album/*","*://tv.sohu.com/v/*","*://*.bilibili.com/video/*","*://*.bilibili.com/bangumi/play/*","*://*.baofeng.com/play/*","*://vip.pptv.com/show/*","*://v.pptv.com/show/*","*://www.le.com/ptv/vplay/*","*://www.wasu.cn/Play/show/*","*://m.v.qq.com/x/cover/*","*://m.v.qq.com/x/page/*","*://m.v.qq.com/*","*://m.iqiyi.com/*","*://m.iqiyi.com/kszt/*","*://m.youku.com/alipay_video/*","*://m.mgtv.com/b/*","*://m.tv.sohu.com/v/*","*://m.film.sohu.com/album/*","*://m.le.com/ptv/vplay/*","*://m.pptv.com/show/*","*://m.acfun.cn/v/*","*://m.bilibili.com/video/*","*://m.bilibili.com/anime/*","*://m.bilibili.com/bangumi/play/*","*://m.wasu.cn/Play/show/*","*://www.youtube.com","*://www.youtube.com/","*://www.youtube.com/watch*"],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1646293756124,"data":{"eoDisable_www.cqvip.com":"btrue","eoDisable_www.google.com":"btrue","weiyun:eoUrl":"smagnet:?xt=urn:btih:d6889597ef19375b05b71b78114d3bea9823aaed&website=bt%E5%A4%A9%E5%A0%82www.jsr9.com"}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/22590-%E4%B8%80%E9%94%AE%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD/code/%E4%B8%80%E9%94%AE%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD.user.js","uuid":"c6d3d74f-d6f7-4669-b10b-d2bff0c9094d","source":"","requires":[{"meta":{"name":"jquery-1.7.2.min.js","url":"http://code.jquery.com/jquery-1.7.2.min.js","ts":1655036574759,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"manageLinksLib.js","url":"https://greasyfork.org/scripts/436827/code/manageLinksLib.js?version=1047951","ts":1655036573580,"mimetype":"text/javascript"},"source":""}]},{"name":"searchEngineJump 简化修复版","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http*://services.addons.mozilla.org/*"],"orig_includes":["/^https?:\\/\\/(?:www|encrypted)\\.google(?:stable)?\\..{2,9}\\/(?:webhp|search|#|$|\\?)(?:.(?!tbm=))*$/","/^https?:\\/\\/www\\.baidu\\.com\\/(?:s|baidu|)/","/^https?:\\/\\/[^.]*\\.bing\\.com\\/search/","/^https?:\\/\\/www\\.so\\.com\\/s\\?/","/^https?:\\/\\/www\\.sogou\\.com\\/(?:web|sogou)/","/^https?:\\/\\/.*\\.*search\\.yahoo\\.com\\/search/","/^https?:\\/\\/.*\\.*search\\.yahoo\\.co.jp\\/search/","/^https?:\\/\\/(www\\.)?duckduckgo\\.com\\/\\?(.+&)?q=/","/^https?:\\/\\/(www\\.)?yandex\\..+\\/search\\/\\?(.+&)?text=/","/^https?:\\/\\/scholar\\.google(?:\\.\\D{1,3}){1,2}\\/scholar\\?/","/^https?:\\/\\/baike\\.baidu\\.com\\/((sub)?view)?(item)?(search)?/","/^https?:\\/\\/[a-z]{2,3}\\.baike\\.com\\/[a-z]/","/^https?:\\/\\/..\\.wikipedia\\.org\\/w\\/index\\.php\\?(?=.*search=)/","/^https?:\\/\\/zhidao\\.baidu\\.com\\/search/","/^https?:\\/\\/tieba\\.baidu\\.com\\/f/","/^https?:\\/\\/zhidao\\.baidu\\.com\\/(question|link)/","/^https?:\\/\\/www\\.zhihu\\.com\\/search\\?/","/^https?:\\/\\/wenku\\.baidu\\.com\\/search\\?/","/^https?:\\/\\/www\\.docin\\.com\\/search\\.do/","/^https?:\\/\\/www\\.soku\\.com\\/[a-z]/","/^https?:\\/\\/www\\.douban\\.com\\/search\\?/","/^https?:\\/\\/movie\\.douban\\.com\\/subject_search\\?/","/^https?:\\/\\/book\\.douban\\.com\\/subject_search\\?/","/^https?:\\/\\/www\\.duokan\\.com\\/search\\//","/^https?:\\/\\/(?:www|encrypted)\\.google(?:stable)?\\..{2,9}\\/(?:webhp|search|#|$|\\?)(.*tbm=bks)/","/^https?:\\/\\/www\\.bilibili\\.com\\/search\\?/","/^https?:\\/\\/www\\.acfun\\.tv\\/search/","/^https?:\\/\\/www\\.youtube\\.com\\/results/","/^https?:\\/\\/www\\.nicovideo\\.jp\\/search\\//","/^https?:\\/\\/(?:v|(?:video))\\.baidu\\.com\\/(?:v|#)/","/^https?:\\/\\/video\\.so\\.com\\//","/^https?:\\/\\/v\\.qq\\.com\\/search\\.html\\?/","/^https?:\\/\\/v\\.sogou\\.com\\/v\\?/","/^https?:\\/\\/.*\\.bing\\.com\\/video/","/^https?:\\/\\/so\\.iqiyi\\.com\\/so\\/q/","/^https?:\\/\\/so\\.letv\\.com\\/s\\?/","/^https?:\\/\\/so\\.tv\\.sohu\\.com\\/mts\\?/","/^https?:\\/\\/so\\.56\\.com\\/video\\//","/^https?:\\/\\/so\\.ku6\\.com\\/search/","/^https?:\\/\\/www\\.dongting\\.com\\/#/","/^https?:\\/\\/music\\.baidu\\.com\\/search/","/^https?:\\/\\/cgi\\.music\\.soso\\.com/","/^https?:\\/\\/mp3\\.sogou\\.com\\/music\\.so/","/^https?:\\/\\/so\\.yinyuetai\\.com\\/mv\\?/","/^https?:\\/\\/so\\.1ting\\.com\\//","/^https?:\\/\\/www\\.songtaste\\.com\\/search/","/^https?:\\/\\/www\\.xiami\\.com\\/search/","/^https?:\\/\\/music\\.163\\.com\\/.*#\\/search/","/^https?:\\/\\/sou\\.kuwo\\.cn\\/ws\\/NSearch/","/^https?:\\/\\/\\w{2,10}\\.google(?:\\.\\D{1,3}){1,2}\\/search\\?(.*tbs=sbi)|(.*tbm=isch)/","/^https?:\\/\\/image\\.baidu\\.c(om|n)\\/(i|search)/","/^https?:\\/\\/\\image\\.so\\.com\\/i\\?/","/^https?:\\/\\/.*\\.bing\\.com\\/images\\/search/","/^https?:\\/\\/pic\\.sogou\\.com\\/pic/","/^https?:\\/\\/image\\.youdao\\.com\\/search/","/^https?:\\/\\/huaban\\.com\\/search\\/\\?/","/^https?:\\/\\/www\\.flickr\\.com\\/search/","/^http:\\/\\/(..|...)\\.picsearch\\.com\\/index\\.cgi/","/^http:\\/\\/www\\.pixiv\\.net\\/search\\.php/","/^http:\\/\\/www\\.deviantart\\.com\\/browse\\/all\\/\\?q/","/^http:\\/\\/www\\.easyicon\\.net\\/iconsearch\\//","/^http:\\/\\/img\\.jpg4\\.info\\//","/^https?:\\/\\/www\\.allyingshi\\.com\\/index\\/search\\//","/^https?:\\/\\/bt\\.ktxp\\.com\\/search\\.php\\?/","/^http:\\/\\/cili006\\.com\\/\\?topic_title/","/^https?:\\/\\/share\\.dmhy\\.org\\/topics\\/list/","/^https?:\\/\\/kat\\.cr\\/usearch\\//","/^https?:\\/\\/www\\.nyaa\\.se\\/\\?page/","/^https?:\\/\\/www\\.ed2000\\.com\\/FileList\\.asp/","/^https?:\\/\\/search\\.t\\.qq\\.com\\/index\\.php\\?(.*QQ%E6%97)/","/^https?:\\/\\/(www\\.)?btso\\.pw\\/search/","/^https?:\\/\\/(www\\.)?thepiratebay\\.org\\/search\\//","/^https?:\\/\\/www\\.breadsearch\\.com\\/search/","/^https?:\\/\\/www\\.cilibaba\\.com\\/search\\//","/^https?:\\/\\/www\\.bthave\\.cc\\/search\\//","/^https?:\\/\\/(www\\.)?btku\\.org\\/q\\//","/^https?:\\/\\/(www\\.)?torrentkitty\\.(com|org|net|tv)\\/search\\//","/^https?:\\/\\/btdigg\\.org\\/search\\?/","/^https?:\\/\\/s8?\\.etao\\.com\\/search/","/^https?:\\/\\/search\\.jd\\.com\\/Search\\?/","/^https?:\\/\\/s\\.taobao\\.com\\/search/","/^https?:\\/\\/s\\.1688\\.com\\/(((selloffer|company|newbuyoffer|wiki)\\/)|([a-z]+\\/[a-z]+_search))/","/^https?:\\/\\/searchex\\.yixun\\.com\\/html\\?/","/^https?:\\/\\/(search)\\.suning\\.com\\//","/^https?:\\/\\/list\\.tmall\\.com\\/\\/?search/","/^https?:\\/\\/www\\.amazon\\.((cn)|(com))\\/s\\/ref/","/^https?:\\/\\/search\\.dangdang\\.com\\/\\?key/","/^https?:\\/\\/s\\.paipai\\.com\\/[a-z]/","/^https?:\\/\\/se?\\.wanggou\\.com\\/[a-z]/","/^https?:\\/\\/s\\.mall\\.360\\.cn\\/search/","/^https?:\\/\\/www\\.huihui\\.cn\\/search\\?/","/^https?:\\/\\/dict\\.youdao\\.com\\/search/","/^https?:\\/\\/www\\.iciba\\.com/","/^https?:\\/\\/dict\\.cn\\/./","/^https?:\\/\\/dict\\.hjenglish\\.com\\/(en|w)/","/^https?:\\/\\/dict\\.hjenglish\\.com\\/(404\\/)?jp/","/^https?:\\/\\/www\\.zdic\\.net\\/sousuo/","/^https?:\\/\\/translate\\.google\\./","/^https?:\\/\\/fanyi\\.baidu\\.com/","/^https?:\\/\\/fanyi\\.youdao\\.com/","/^https?:\\/\\/(cn|www)\\.bing\\.com\\/dict\\/search\\?/","/^https?:\\/\\/www\\.bing\\.com\\/translator/","/^https?:\\/\\/fy\\.iciba\\.com/","/^https?:\\/\\/search\\.t\\.qq\\.com\\/index|user\\.php\\?/","/^https?:\\/\\/s\\.weibo\\.com\\/weibo|user\\//","/^https?:\\/\\/www\\.facebook\\.com\\/search\\//","/^https?:\\/\\/(www\\.)?twitter\\.com\\/search/","/^https?:\\/\\/plus\\.google\\.com\\/s\\//","/^https?:\\/\\/shooter\\.cn\\/search/","/^https?:\\/\\/www\\.subom\\.net\\/search/","/^https?:\\/\\/vdisk\\.weibo\\.com\\/search/","/^https?:\\/\\/(?:www|encrypted|cse)\\.google(?:stable)?\\..{2,9}\\/(?:cse\\?)(.*q=)/","/^http:\\/\\/www\\.javlibrary\\.com\\/[a-z]{2}\\/.*search/","/^http:\\/\\/www\\.javlibrary\\.com\\/[a-z]{2}\\/\\?v/","/^http:\\/\\/www\\.javmoo\\.xyz\\/[a-z]{2}\\/search/","/^http:\\/\\/www\\.javmoo\\.xyz\\/[a-z]{2}\\/movie/","/^http:\\/\\/www\\.avless\\.com\\/[a-z]{2}\\/search/","/^http:\\/\\/www\\.avless\\.com\\/[a-z]{2}\\/movie/","/^http:\\/\\/www\\.avmemo\\.com\\/[a-z]{2}\\/search/","/^http:\\/\\/www\\.avmemo\\.com\\/[a-z]{2}\\/movie/","/^https?:\\/\\/www\\.javbus\\.com\\/((search\\/)|(uncensored\\/)|(searchstar\\/))/","/^https?:\\/\\/www\\.javbus\\.com\\/[A-Za-z0-9-]+$/","/^http:\\/\\/(www\\.)?avdb\\.la\\/search/","/^http:\\/\\/(www\\.)?avdb\\.la\\/movie/","/^http:\\/\\/www\\.avdb\\.im\\/([a-z]{2}\\/)?search/","/^http:\\/\\/www\\.avdb\\.im\\/([a-z]{2}\\/)?movie/","/^http:\\/\\/www\\.libredmm\\.com\\//","/^http:\\/\\/www\\.pornmd\\.com\\//","/^http:\\/\\/www\\.pornhub\\.com\\/.*search/","/^http:\\/\\/www\\.xtube\\.com\\/.*search/","/^http:\\/\\/www\\.redtube\\.com\\/.*search/","/^http:\\/\\/www\\.youporn\\.com\\/.*search/","/^http:\\/\\/www\\.keezmovies\\.com\\/.*search/","/^http:\\/\\/www\\.tube8\\.com\\/.*search/","/^http:\\/\\/www\\.spankwire\\.com\\/.*search/","/^http:\\/\\/www\\.extremetube\\.com\\/.*search/","/^http:\\/\\/www\\.dmm\\.[\\w\\.]+\\/.*search/","/^http:\\/\\/www\\.oisinbosoft\\.[\\w\\.]+\\/.*seach/","/^http:\\/\\/www\\.minnano\\-av\\.[\\w\\.]+\\/.*search/","/^https?:\\/\\/www\\.fakku\\.net\\/.*search/","/^https?:\\/\\/www\\.zerochan\\.net\\//","/^https?:\\/\\/\\w*\\.?pururin\\.com\\/search/","/^https?:\\/\\/\\w*\\.?donmai\\.us\\/.*(search|tags)/","/^https?:\\/\\/\\w*\\.?gelbooru\\.com\\/.*(search|tags)/","/^https?:\\/\\/\\w*\\.?konachan\\.com\\/.*(search|tags)/","/^https?:\\/\\/\\w*\\.?yande\\.re\\/.*(search|tags)/","/^https?:\\/\\/\\w*\\.?rule34\\.xxx\\/.*(search|tags)/","/^https?:\\/\\/\\w*\\.?lolibooru\\.moe\\/.*(search|tags)/","/^https?:\\/\\/\\w*\\.?safebooru\\.org\\/.*(search|tags)/","/^https?:\\/\\/\\w*\\.?sankakucomplex\\.com\\/.*(search|tags)/","/^https?:\\/\\/\\w*\\.?behoimi\\.org\\/.*(search|tags)/","/^http:\\/\\/www\\.sokmil\\.com\\/.*search/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1625035392170,"data":{}},"enabled":false,"position":6,"file_url":"https://openuserjs.org/install/rudy/searchEngineJump_%E7%AE%80%E5%8C%96%E4%BF%AE%E5%A4%8D%E7%89%88.user.js","uuid":"cd213cc9-5492-47c9-8034-c0cbada0100f","source":"","resources":[{"meta":{"name":"iconData.json","url":"https://raw.githubusercontent.com/tangxiadi/searchEngineJumpSU/master/iconData.json","ts":1625035392165,"mimetype":"text/plain"},"source":""}]},{"name":"HTML5视频播放工具","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["https://user.qzone.qq.com/*","*olevod.com/index.php/vod/play/id/*","*olevod.tv/index.php/vod/play/id/*"],"orig_includes":["https://*.qq.com/*","https://www.weiyun.com/video_*","https://v.youku.com/v_show/id_*","https://vku.youku.com/live/*","https://video.tudou.com/v/*","https://www.iqiyi.com/*","https://live.bilibili.com/*","https://www.bilibili.com/*","https://www.ixigua.com/*","https://www.acfun.cn/*","http://v.pptv.com/show/*","https://v.pptv.com/show/*","https://www.miguvideo.com/*","https://tv.sohu.com/*","https://film.sohu.com/album/*","https://www.mgtv.com/*","https://pan.baidu.com/*","https://yun.baidu.com/*","https://*.163.com/*","https://*.icourse163.org/*","http://video.sina.*","https://video.sina.*","http://k.sina.*","https://k.sina.*","https://weibo.com/*","https://*.weibo.com/*","https://pan.baidu.com/*","https://yun.baidu.com/*","http://v.ifeng.com/*","https://v.ifeng.com/*","http://news.mtime.com/*","http://video.mtime.com/*","https://www.youtube.com/watch*","https://www.ted.com/talks/*","https://www.yy.com/*","https://www.huya.com/*","https://v.douyu.com/*","https://www.douyu.com/*","https://www.longzhu.com/*","https://www.zhanqi.tv/*","*/play*","*play/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1625035392171,"data":{}},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/30545-%E8%A7%86%E9%A2%91%E7%BD%91html5%E6%92%AD%E6%94%BE%E5%B0%8F%E5%B7%A5%E5%85%B7/code/%E8%A7%86%E9%A2%91%E7%BD%91HTML5%E6%92%AD%E6%94%BE%E5%B0%8F%E5%B7%A5%E5%85%B7.user.js","uuid":"b06aa54e-1a97-43b6-bf51-457f159782e8","source":"LyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYgKi8KLy8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgSFRNTDXop4bpopHmkq3mlL7lt6XlhbcKLy8gQGRlc2NyaXB0aW9uIOWQr+eUqEhUTUw15pKt5pS+77yb6KeG6aKR5oiq5Zu+77yb5YiH5o2i55S75Lit55S777yb57yT5a2Y6KeG6aKR77yb5LiH6IO9572R6aG15YWo5bGP77yb5re75Yqg5b+r5o236ZSu77ya5b+r6L+b44CB5b+r6YCA44CB5pqC5YGcL+aSreaUvuOAgemfs+mHj+OAgeS4i+S4gOmbhuOAgeWIh+aNoijnvZHpobUp5YWo5bGP44CB5LiK5LiL5bin44CB5pKt5pS+6YCf5bqm44CC5pSv5oyB6KeG6aKR56uZ54K577ya5rK5566h44CBVEVE44CB5LyYLuWcn+OAgVFR44CBQuermeOAgeilv+eTnOinhumikeOAgeeIseWlh+iJuuOAgUHnq5njgIFQUFRW44CB6IqS5p6cVFbjgIHlkqrlkpXop4bpopHjgIHmlrDmtarjgIHlvq7ljZrjgIHnvZHmmJNb5aix5LmQ44CB5LqR6K++5aCC44CB5paw6Ze7XeOAgeaQnOeLkOOAgemjjuihjOOAgeeZvuW6puS6keinhumikeetie+8m+ebtOaSre+8muaWl+mxvOOAgVlZ44CB6JmO54mZ44CB6b6Z54+g44CB5oiY5peX44CC5Y+v5aKe5Yqg6Ieq5a6a5LmJ56uZ54K5Ci8vIEBob21lcGFnZSAgIGh0dHBzOi8vYmJzLmthZmFuLmNuL3RocmVhZC0yMDkzMDE0LTEtMS5odG1sCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vKi5xcS5jb20vKgovLyBAZXhjbHVkZSAgICBodHRwczovL3VzZXIucXpvbmUucXEuY29tLyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly93d3cud2VpeXVuLmNvbS92aWRlb18qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vdi55b3VrdS5jb20vdl9zaG93L2lkXyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly92a3UueW91a3UuY29tL2xpdmUvKgovLyBAaW5jbHVkZSAgICBodHRwczovL3ZpZGVvLnR1ZG91LmNvbS92LyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly93d3cuaXFpeWkuY29tLyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly9saXZlLmJpbGliaWxpLmNvbS8qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vd3d3LmJpbGliaWxpLmNvbS8qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vd3d3Lml4aWd1YS5jb20vKgovLyBAaW5jbHVkZSAgICBodHRwczovL3d3dy5hY2Z1bi5jbi8qCi8vIEBpbmNsdWRlICAgIGh0dHA6Ly92LnBwdHYuY29tL3Nob3cvKgovLyBAaW5jbHVkZSAgICBodHRwczovL3YucHB0di5jb20vc2hvdy8qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vd3d3Lm1pZ3V2aWRlby5jb20vKgovLyBAaW5jbHVkZSAgICBodHRwczovL3R2LnNvaHUuY29tLyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly9maWxtLnNvaHUuY29tL2FsYnVtLyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly93d3cubWd0di5jb20vKgovLyBAdmVyc2lvbiAgICAxLjkuMQovLyBAaW5jbHVkZSAgICBodHRwczovL3Bhbi5iYWlkdS5jb20vKgovLyBAaW5jbHVkZSAgICBodHRwczovL3l1bi5iYWlkdS5jb20vKgovLyBAaW5jbHVkZSAgICBodHRwczovLyouMTYzLmNvbS8qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vKi5pY291cnNlMTYzLm9yZy8qCi8vIEBpbmNsdWRlICAgIGh0dHA6Ly92aWRlby5zaW5hLioKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly92aWRlby5zaW5hLioKLy8gQGluY2x1ZGUgICAgaHR0cDovL2suc2luYS4qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vay5zaW5hLioKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly93ZWliby5jb20vKgovLyBAaW5jbHVkZSAgICBodHRwczovLyoud2VpYm8uY29tLyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly9wYW4uYmFpZHUuY29tLyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly95dW4uYmFpZHUuY29tLyoKLy8gQGluY2x1ZGUgICAgaHR0cDovL3YuaWZlbmcuY29tLyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly92LmlmZW5nLmNvbS8qCi8vIEBpbmNsdWRlICAgIGh0dHA6Ly9uZXdzLm10aW1lLmNvbS8qCi8vIEBpbmNsdWRlICAgIGh0dHA6Ly92aWRlby5tdGltZS5jb20vKgovLyBAR01faW5mbwovLyBAaW5jbHVkZSAgICBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaCoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly93d3cudGVkLmNvbS90YWxrcy8qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vd3d3Lnl5LmNvbS8qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vd3d3Lmh1eWEuY29tLyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly92LmRvdXl1LmNvbS8qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vd3d3LmRvdXl1LmNvbS8qCi8vIEBpbmNsdWRlICAgIGh0dHBzOi8vd3d3Lmxvbmd6aHUuY29tLyoKLy8gQGluY2x1ZGUgICAgaHR0cHM6Ly93d3cuemhhbnFpLnR2LyoKLy8gQHJ1bi1hdCAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQHJlcXVpcmUgICAgaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS92dWVAMi42LjExL2Rpc3QvdnVlLm1pbi5qcwovLyBAZ3JhbnQgICAgICBHTV9hZGRTdHlsZQovLyBAaW5jbHVkZSAgICAqL3BsYXkqCi8vIEBpbmNsdWRlICAgICpwbGF5LyoKLy8gQGV4Y2x1ZGUgICAgKm9sZXZvZC5jb20vaW5kZXgucGhwL3ZvZC9wbGF5L2lkLyoKLy8gQGV4Y2x1ZGUgICAgKm9sZXZvZC50di9pbmRleC5waHAvdm9kL3BsYXkvaWQvKgovLyBAZ3JhbnQgICAgICB3aW5kb3cub251cmxjaGFuZ2UKLy8gQGdyYW50ICAgICAgdW5zYWZlV2luZG93Ci8vIEBncmFudCAgICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQKLy8gQGdyYW50ICAgICAgR01fc2V0VmFsdWUKLy8gQGdyYW50ICAgICAgR01fZ2V0VmFsdWUKLy8gQG5hbWVzcGFjZSAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy91c2Vycy83MDM2Ci8vID09L1VzZXJTY3JpcHQ9PQoKJ3VzZSBzdHJpY3QnOwpjb25zdCB3ID0gdW5zYWZlV2luZG93IHx8IHdpbmRvdzsKY29uc3QgeyBob3N0LCBwYXRobmFtZTogcGF0aCB9ID0gbG9jYXRpb247CmNvbnN0IGQgPSBkb2N1bWVudCwgZmluZCA9IFtdLmZpbmQ7CmxldCB2LCBfZnAsIF9mcywgYnk7IC8vIGRvY3VtZW50LmJvZHkKY29uc3Qgb2JzZXJ2ZU9wdCA9IHtjaGlsZExpc3QgOiB0cnVlLCBzdWJ0cmVlIDogdHJ1ZX07CmNvbnN0IG5vb3BGbiA9IGZ1bmN0aW9uKCl7fTsKY29uc3QgdmFsaWRFbCA9IGUgPT4gZSAmJiBlLm9mZnNldFdpZHRoID4gMTsKY29uc3QgcSA9IChjc3MsIHAgPSBkKSA9PiBwLnF1ZXJ5U2VsZWN0b3IoY3NzKTsKY29uc3QgZGVsRWxlbSA9IGUgPT4gZS5yZW1vdmUoKTsKY29uc3QgJCQgPSBmdW5jdGlvbihjLCBjYiA9IGRlbEVsZW0sIGRvYyA9IGQpIHsKCWlmICghYyB8fCAhYy5sZW5ndGgpIHJldHVybjsKCWlmICh0eXBlb2YgYyA9PT0gJ3N0cmluZycpIGMgPSBkb2MucXVlcnlTZWxlY3RvckFsbChjKTsKCWlmICghY2IpIHJldHVybiBjOwoJZm9yIChsZXQgZSBvZiBjKSBpZiAoZSAmJiBjYihlKT09PSAhMSkgYnJlYWs7Cn07CmNvbnN0IHIxID0gKHJlZ3AsIHMpID0+IHJlZ3AudGVzdChzKSAmJiBSZWdFeHAuJDE7CmNvbnN0IGxvZyA9IGNvbnNvbGUubG9nLmJpbmQoCgljb25zb2xlLAoJJyVj6ISa5pysWyVzXSDlj43ppojvvJolc1xuJXMnLAoJJ2NvbG9yOiNjM2M7Zm9udC1zaXplOjEuMmVtJywKCUdNX2luZm8uc2NyaXB0Lm5hbWUsCglHTV9pbmZvLnNjcmlwdC5ob21lcGFnZQopOwpjb25zdCBnbUZ1bmNPZkNoZWNrTWVudSA9ICh0aXRsZSwgc2F2ZU5hbWUsIGRlZmF1bHRWYWwgPSB0cnVlKSA9PiB7Cgljb25zdCByID0gR01fZ2V0VmFsdWUoc2F2ZU5hbWUsIGRlZmF1bHRWYWwpOwoJaWYgKHIpIHRpdGxlID0gJ+KImiAgJysgdGl0bGU7CglHTV9yZWdpc3Rlck1lbnVDb21tYW5kKHRpdGxlLCAoKSA9PiB7CgkJR01fc2V0VmFsdWUoc2F2ZU5hbWUsICFyKTsKCQlsb2NhdGlvbi5yZWxvYWQoKTsKCX0pOwoJcmV0dXJuIHI7Cn07CmNvbnN0IHNsZWVwID0gbXMgPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpIH0pOwpjb25zdCBhZGRVcmxDaGFuZ2VFdmVudCA9ICgpID0+IHsKCWhpc3RvcnkucHVzaFN0YXRlID0gKCBmID0+IGZ1bmN0aW9uIHB1c2hTdGF0ZSgpewoJCWNvbnN0IHJldCA9IGYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKCQl3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3B1c2hzdGF0ZScpKTsKCQl3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3VybGNoYW5nZScpKTsKCQlyZXR1cm4gcmV0OwoJfSkoaGlzdG9yeS5wdXNoU3RhdGUpOwoKCWhpc3RvcnkucmVwbGFjZVN0YXRlID0gKCBmID0+IGZ1bmN0aW9uIHJlcGxhY2VTdGF0ZSgpewoJCWNvbnN0IHJldCA9IGYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKCQl3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3JlcGxhY2VzdGF0ZScpKTsKCQl3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3VybGNoYW5nZScpKTsKCQlyZXR1cm4gcmV0OwoJfSkoaGlzdG9yeS5yZXBsYWNlU3RhdGUpOwoKCXdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsKCk9PnsKCQl3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3VybGNoYW5nZScpKQoJfSk7Cn07Ci8qIOeUu+S4reeUuwo8c3ZnIHZpZXdCb3g9IjAgMCAyMiAyMiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48ZyBmaWxsPSIjRTZFNkU2IiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPjxwYXRoIGQ9Ik0xNyA0YTIgMiAwIDAxMiAydjZoLTJWNi44YS44LjggMCAwMC0uOC0uOEg0LjhhLjguOCAwIDAwLS43OTQuN0w0IDYuOHY4LjRhLjguOCAwIDAwLjcuNzk0bC4xLjAwNkgxMXYySDRhMiAyIDAgMDEtMi0yVjZhMiAyIDAgMDEyLTJoMTN6Ij48L3BhdGg+PHJlY3QgeD0iMTMiIHk9IjE0IiB3aWR0aD0iOCIgaGVpZ2h0PSI2IiByeD0iMSI+PC9yZWN0PjwvZz48L3N2Zz4K6K6+572uCjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjIgMjIiPgo8Y2lyY2xlIGN4PSIxMSIgY3k9IjExIiByPSIyIj48L2NpcmNsZT4KPHBhdGggZD0iTTE5LjE2NCA4Ljg2MUwxNy42IDguNmE2Ljk3OCA2Ljk3OCAwIDAwLTEuMTg2LTIuMDk5bC41NzQtMS41MzNhMSAxIDAgMDAtLjQzNi0xLjIxN2wtMS45OTctMS4xNTNhMS4wMDEgMS4wMDEgMCAwMC0xLjI3Mi4yM2wtMS4wMDggMS4yMjVhNy4wNCA3LjA0IDAgMDAtMi41NS4wMDFMOC43MTYgMi44MjlhMSAxIDAgMDAtMS4yNzItLjIzTDUuNDQ3IDMuNzUxYTEgMSAwIDAwLS40MzYgMS4yMTdsLjU3NCAxLjUzM0E2Ljk5NyA2Ljk5NyAwIDAwNC40IDguNmwtMS41NjQuMjYxQS45OTkuOTk5IDAgMDAyIDkuODQ3djIuMzA2YzAgLjQ4OS4zNTMuOTA2LjgzNi45ODZsMS42MTMuMjY5YTcgNyAwIDAwMS4yMjggMi4wNzVsLS41NTggMS40ODdhMSAxIDAgMDAuNDM2IDEuMjE3bDEuOTk3IDEuMTUzYy40MjMuMjQ0Ljk2MS4xNDcgMS4yNzItLjIzbDEuMDQtMS4yNjNhNy4wODkgNy4wODkgMCAwMDIuMjcyIDBsMS4wNCAxLjI2M2ExIDEgMCAwMDEuMjcyLjIzbDEuOTk3LTEuMTUzYTEgMSAwIDAwLjQzNi0xLjIxN2wtLjU1Ny0xLjQ4N2MuNTIxLS42MS45NC0xLjMxIDEuMjI4LTIuMDc1bDEuNjEzLS4yNjlhLjk5OS45OTkgMCAwMC44MzUtLjk4NlY5Ljg0N2EuOTk5Ljk5OSAwIDAwLS44MzYtLjk4NnpNMTEgMTVhNCA0IDAgMTEwLTggNCA0IDAgMDEwIDh6Ij48L3BhdGg+Cjwvc3ZnPgpuZXh0CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjIgMjIiPjxwYXRoIGQ9Ik0xNiA1YTEgMSAwIDAwLTEgMXY0LjYxNWExLjQzMSAxLjQzMSAwIDAwLS42MTUtLjgyOUw3LjIxIDUuMjNBMS40MzkgMS40MzkgMCAwMDUgNi40NDV2OS4xMWExLjQ0IDEuNDQgMCAwMDIuMjEgMS4yMTVsNy4xNzUtNC41NTVhMS40MzYgMS40MzYgMCAwMC42MTYtLjgyOFYxNmExIDEgMCAwMDIgMFY2QzE3IDUuNDQ4IDE2LjU1MiA1IDE2IDV6Ij48L3BhdGg+PC9zdmc+CuaIquWbvgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmVyc2lvbj0iMS4xIiB2aWV3Qm94PSIwIDAgMzIgMzIiPjxwYXRoIGQ9Ik0xNiAyM2MtMy4zMDkgMC02LTIuNjkxLTYtNnMyLjY5MS02IDYtNiA2IDIuNjkxIDYgNi0yLjY5MSA2LTYgNnpNMTYgMTNjLTIuMjA2IDAtNCAxLjc5NC00IDRzMS43OTQgNCA0IDRjMi4yMDYgMCA0LTEuNzk0IDQtNHMtMS43OTQtNC00LTR6TTI3IDI4aC0yMmMtMS42NTQgMC0zLTEuMzQ2LTMtM3YtMTZjMC0xLjY1NCAxLjM0Ni0zIDMtM2gzYzAuNTUyIDAgMSAwLjQ0OCAxIDFzLTAuNDQ4IDEtMSAxaC0zYy0wLjU1MSAwLTEgMC40NDktMSAxdjE2YzAgMC41NTIgMC40NDkgMSAxIDFoMjJjMC41NTIgMCAxLTAuNDQ4IDEtMXYtMTZjMC0wLjU1MS0wLjQ0OC0xLTEtMWgtMTFjLTAuNTUyIDAtMS0wLjQ0OC0xLTFzMC40NDgtMSAxLTFoMTFjMS42NTQgMCAzIDEuMzQ2IDMgM3YxNmMwIDEuNjU0LTEuMzQ2IDMtMyAzek0yNCAxMC41YzAgMC44MjggMC42NzIgMS41IDEuNSAxLjVzMS41LTAuNjcyIDEuNS0xLjVjMC0wLjgyOC0wLjY3Mi0xLjUtMS41LTEuNXMtMS41IDAuNjcyLTEuNSAxLjV6TTE1IDRjMCAwLjU1Mi0wLjQ0OCAxLTEgMWgtNGMtMC41NTIgMC0xLTAuNDQ4LTEtMXYwYzAtMC41NTIgMC40NDgtMSAxLTFoNGMwLjU1MiAwIDEgMC40NDggMSAxdjB6Ij48L3BhdGg+PC9zdmc+CmNvbnN0IGNvb2tpZSA9IG5ldyBQcm94eShub29wRm4sIHsKCWFwcGx5KHRhcmdldCwgY3R4LCBhcmdzKSB7IC8v5riF55CGY29va2llCgkJY29uc3Qga2V5cyA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaCgvW14gPTtdKyg/PVw9KS9nKTsKCQlpZiAoa2V5cykgewoJCQljb25zdCB2YWwgPSAnPTsgZXhwaXJlcz0nICsgbmV3IERhdGUoMCkudG9VVENTdHJpbmcoKSArJzsgZG9tYWluPS47IHBhdGg9Lyc7CgkJCWZvciAoY29uc3QgayBvZiBrZXlzKSBkb2N1bWVudC5jb29raWUgPSBrICsgdmFsOwoJCX0KCQkvLyByZXR1cm4gUmVmbGVjdC5hcHBseSh0YXJnZXQsIGN0eCwgYXJncyk7Cgl9LAoJZ2V0KHRhcmdldCwgbmFtZSkgeyAvLyDor7vlj5Zjb29raWUKCQljb25zdCByID0gcjEobmV3IFJlZ0V4cChuYW1lICsnPShbXjtdKiknKSwgZG9jdW1lbnQuY29va2llKTsKCQlpZiAocikgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChyKTsKCX0sCglzZXQodGFyZ2V0LCBuYW1lLCB2YWx1ZSwgcmVjZWl2ZXIpIHsgLy8g5YaZ5YWlY29va2llCgkJbGV0IHMsIHYsIGV4cGlyZXMsCgkJb25lUGFyYW0gPSB0eXBlb2YgdmFsdWUgPT0gJ3N0cmluZyc7CgkJaWYgKG9uZVBhcmFtKSB7CgkJCWV4cGlyZXMgPSA2OwoJCQl2ID0gdmFsdWU7CgkJfSBlbHNlIHsKCQkJdiA9IHZhbHVlLnZhbDsKCQkJZXhwaXJlcyA9IHZhbHVlLmV4cGlyZXMgfHwgNjsKCQkJZGVsZXRlIHZhbHVlLmV4cGlyZXM7CgkJfQoJCXMgPSBuYW1lICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHYpOwoKCQlpZiAoZXhwaXJlcyAmJiAodHlwZW9mIGV4cGlyZXMgPT0gJ251bWJlcicgfHwgZXhwaXJlcy50b1VUQ1N0cmluZykpIHsKCQkJbGV0IGRhdGU7CgkJCWlmICh0eXBlb2YgZXhwaXJlcyA9PSAnbnVtYmVyJykgewoJCQkJZGF0ZSA9IG5ldyBEYXRlKCk7CgkJCQlkYXRlLnNldFRpbWUoZXhwaXJlcyAqIDI0ICogMzYwMDAwMCArIGRhdGUuZ2V0VGltZSgpKTsKCQkJfSBlbHNlIHsKCQkJCWRhdGUgPSBleHBpcmVzOwoJCQl9CgkJCXMgKz0gJzsgZXhwaXJlcz0nICsgZGF0ZS50b1VUQ1N0cmluZygpOwoJCX0KCQlpZiAoIW9uZVBhcmFtKSBmb3IgKGNvbnN0IGsgaW4gdmFsdWUpIHMgKz0gJzsgJyArIGsgKyAnPScgKyB2YWx1ZVtrXTsKCQlkb2N1bWVudC5jb29raWUgPSBzOwoJCXJldHVybiB0cnVlOwoJfSwKCWRlbGV0ZVByb3BlcnR5KHRhcmdldCwgbmFtZSwgZGVzY3JpcHRvcikgey8vIOWIoOmZpGNvb2tpZQoJCWRvY3VtZW50LmNvb2tpZSA9IG5hbWUgKyAnPTsgcGF0aD0vOyBleHBpcmVzPScrIG5ldyBEYXRlKDApLnRvVVRDU3RyaW5nKCk7CgkJcmV0dXJuIHRydWU7Cgl9Cn0pOwpjb25zdCBvbmNlRXZlbnQgPSAoY3R4LCBlTmFtZSkgPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBjdHguYWRkRXZlbnRMaXN0ZW5lcihlTmFtZSwgcmVzb2x2ZSkpOwpjb25zdCBwcm9taXNpZnkgPSAoZm4pID0+ICguLi5hcmdzKSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICBhcmdzLnB1c2gocmVzb2x2ZSk7Cglmbi5hcHBseSh0aGlzLCBhcmdzKTsKfSk7ICovCmNvbnN0IGhvb2tBdHRhY2hTaGFkb3cgPSAoY2IpID0+IHsKCXRyeSB7CgkJY29uc3QgX2F0dGFjaFNoYWRvdyA9IEVsZW1lbnQucHJvdG90eXBlLmF0dGFjaFNoYWRvdzsKCQlFbGVtZW50LnByb3RvdHlwZS5hdHRhY2hTaGFkb3cgPSBmdW5jdGlvbihvcHQpIHsKCQkJb3B0Lm1vZGUgPSAnb3Blbic7CgkJCWNvbnN0IHNoYWRvd1Jvb3QgPSBfYXR0YWNoU2hhZG93LmNhbGwodGhpcywgb3B0KTsKCQkJY2Ioc2hhZG93Um9vdCk7CgkJCXJldHVybiBzaGFkb3dSb290OwoJCX07Cgl9IGNhdGNoIChlKSB7CgkJY29uc29sZS5lcnJvcignSGFjayBhdHRhY2hTaGFkb3cgZXJyb3InLCBlKTsKCX0KfTsKY29uc3QgZ2V0U3R5bGUgPSAobywgcykgPT4gewoJaWYgKG8uc3R5bGVbc10pIHJldHVybiBvLnN0eWxlW3NdOwoJaWYgKGdldENvbXB1dGVkU3R5bGUpIHsKCQljb25zdCB4ID0gZ2V0Q29tcHV0ZWRTdHlsZShvLCAnJyk7CgkJcyA9IHMucmVwbGFjZSgvKFtBLVpdKS9nLCctJDEnKS50b0xvd2VyQ2FzZSgpOwoJCXJldHVybiB4ICYmIHguZ2V0UHJvcGVydHlWYWx1ZShzKTsKCX0KfTsKY29uc3QgZG9DbGljayA9IGUgPT4gewoJaWYgKHR5cGVvZiBlID09PSAnc3RyaW5nJykgZSA9IHEoZSk7CglpZiAoZSkgeyBlLmNsaWNrID8gZS5jbGljaygpIDogZS5kaXNwYXRjaEV2ZW50KG5ldyBNb3VzZUV2ZW50KCdjbGljaycpKSB9Owp9Owpjb25zdCBjbGlja0R1YWxCdXR0b24gPSBidG4gPT4geyAvLyAy5ZCIMSDmjInpkq4KCSFidG4ubmV4dFNpYmxpbmcgfHwgZ2V0U3R5bGUoYnRuLCAnZGlzcGxheScpICE9PSAnbm9uZScgPyBkb0NsaWNrKGJ0bikgOiBkb0NsaWNrKGJ0bi5uZXh0U2libGluZyk7Cn07CmNvbnN0IGludGVydmFsUXVlcnkgPSAoY2IsIGNvbmRpdGlvbiwgc3RvcCA9IHRydWUpID0+IHsKCWNvbnN0IGZuID0gdHlwZW9mIGNvbmRpdGlvbiA9PT0gJ3N0cmluZycgPyBxLmJpbmQobnVsbCwgY29uZGl0aW9uKSA6IGNvbmRpdGlvbjsKCWNvbnN0IHQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CgkJY29uc3QgciA9IGZuKCk7CgkJaWYgKHIpIHsKCQkJc3RvcCAmJiBjbGVhckludGVydmFsKHQpOwoJCQljYihyKTsKCQl9Cgl9LCAzMDApOwoJcmV0dXJuIHQ7Cn07CmNvbnN0IGdvTmV4dE1WID0gKCkgPT4gewoJY29uc3QgcyA9IGxvY2F0aW9uLnBhdGhuYW1lOwoJY29uc3QgbSA9IHMubWF0Y2goLyhcZCspKFxEKikkLyk7Cgljb25zdCBkID0gK21bMV0gKyAxOwoJbG9jYXRpb24uYXNzaWduKHMuc2xpY2UoMCwgbS5pbmRleCkgKyBkICsgbVsyXSk7Cn07CmNvbnN0IGZpcmVmb3hWZXIgPSByMSgvRmlyZWZveFwvKFxkKykvLCBuYXZpZ2F0b3IudXNlckFnZW50KTsKY29uc3QgaXNFZGdlID0gLyBFZGdlP1wvLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpOwpjb25zdCBmYWtlVUEgPSB1YSA9PiBPYmplY3QuZGVmaW5lUHJvcGVydHkobmF2aWdhdG9yLCAndXNlckFnZW50JywgewoJdmFsdWU6IHVhLAoJd3JpdGFibGU6IGZhbHNlLAoJY29uZmlndXJhYmxlOiBmYWxzZSwKCWVudW1lcmFibGU6IHRydWUKfSk7CmNvbnN0IGdldE1haW5Eb21haW4gPSBob3N0ID0+IHsKCWNvbnN0IGEgPSBob3N0LnNwbGl0KCcuJyk7CglsZXQgaSA9IGEubGVuZ3RoIC0gMjsKCWlmICgvXihjb20/fGNjfHR2fG5ldHxvcmd8Z292fGVkdSkkLy50ZXN0KGFbaV0pKSBpLS07CglyZXR1cm4gYVtpXTsKfTsKY29uc3QgaW5SYW5nZSA9IChuLCBtaW4sIG1heCkgPT4gTWF0aC5tYXgobWluLCBuKSA9PSBNYXRoLm1pbihuLCBtYXgpOwpjb25zdCBhZGp1c3RSYXRlID0gbiA9PiB7CgluICs9IHYucGxheWJhY2tSYXRlOwoJaWYgKGluUmFuZ2UobiwgMC4xLCAxNikpIHYucGxheWJhY2tSYXRlID0gK24udG9GaXhlZCgyKTsKfTsKY29uc3QgYWRqdXN0Vm9sdW1lID0gbiA9PiB7CgluICs9IHYudm9sdW1lOwoJaWYgKGluUmFuZ2UobiwgMCwgMSkpIHYudm9sdW1lID0gK24udG9GaXhlZCgxKTsKfTsKY29uc3QgdWFfY2hyb21lID0gJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk5LjAuMzYyNi4xMjEgU2FmYXJpLzUzNy4zNic7CmNvbnN0IHUgPSBnZXRNYWluRG9tYWluKGhvc3QpOwovLyDpgJrorq/mgLvnur8KY29uc3QgYnVzID0gbmV3IFZ1ZSgpOwpjb25zdCBjZmcgPSB7Cglpc0xpdmU6ICExLAoJZGlzYWJsZURCTENsaWNrOiAhMSwKCWlzQ2xpY2tPblZpZGVvOiAhMSwKCW11bHRpcGxlVjogITEsIC8v5aSa6KeG6aKR6aG16Z2iCglpc051bVVSTDogITEgLy/nvZHlnYDmlbDlrZfliIbpm4YKfTsKCmNsYXNzIEZ1bGxTY3JlZW4gewoJY29uc3RydWN0b3IoZSkgewoJCWxldCBmbiA9IGQuZXhpdEZ1bGxzY3JlZW4gfHwgZC53ZWJraXRFeGl0RnVsbHNjcmVlbiB8fCBkLm1vekNhbmNlbEZ1bGxTY3JlZW4gfHwgZC5tc0V4aXRGdWxsc2NyZWVuIHx8IG5vb3BGbjsKCQl0aGlzLmV4aXQgPSBmbi5iaW5kKGQpOwoJCWZuID0gZS5yZXF1ZXN0RnVsbHNjcmVlbiB8fCBlLndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuIHx8IGUubW96UmVxdWVzdEZ1bGxTY3JlZW4gfHwgZS5tc1JlcXVlc3RGdWxsU2NyZWVuIHx8IG5vb3BGbjsKCQl0aGlzLmVudGVyID0gZm4uYmluZChlKTsKCX0KCXN0YXRpYyBpc0Z1bGwoKSB7CgkJcmV0dXJuICEhKGQuZnVsbHNjcmVlbiB8fCBkLndlYmtpdElzRnVsbFNjcmVlbiB8fCBkLm1vekZ1bGxTY3JlZW4gfHwKCQlkLmZ1bGxzY3JlZW5FbGVtZW50IHx8IGQud2Via2l0RnVsbHNjcmVlbkVsZW1lbnQgfHwgZC5tb3pGdWxsU2NyZWVuRWxlbWVudCk7Cgl9Cgl0b2dnbGUoKSB7CgkJRnVsbFNjcmVlbi5pc0Z1bGwoKSA/IHRoaXMuZXhpdCgpIDogdGhpcy5lbnRlcigpOwoJfQp9CgovL+S4h+iDvee9kemhteWFqOWxjywg5Y+C6ICD5LqG77yaaHR0cHM6Ly9naXRodWIuY29tL2dvb3lpZS95a2g1cApjbGFzcyBGdWxsUGFnZSB7Cgljb25zdHJ1Y3Rvcihjb250YWluZXIpIHsKCQl0aGlzLl9pc0Z1bGwgPSAhMTsKCQl0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lciB8fCBGdWxsUGFnZS5nZXRQbGF5ZXJDb250YWluZXIodik7CgkJR01fYWRkU3R5bGUoCgkJCWAuZ20tZnAtYm9keSAuZ20tZnAtelRvcCB7CgkJCQlwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDsKCQkJCXotaW5kZXg6IDIxNDc0ODM2NDcgIWltcG9ydGFudDsKCQkJfQoJCQkuZ20tZnAtd3JhcHBlciwgLmdtLWZwLWJvZHl7IG92ZXJmbG93OmhpZGRlbiAhaW1wb3J0YW50OyB9CgkJCS5nbS1mcC13cmFwcGVyIC5nbS1mcC1pbm5lckJveCB7CgkJCQl3aWR0aDogMTAwJSAhaW1wb3J0YW50OwoJCQkJaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7CgkJCX0KCQkJLmdtLWZwLXdyYXBwZXIgewoJCQkJZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsKCQkJCXBvc2l0aW9uOiBmaXhlZCAhaW1wb3J0YW50OwoJCQkJd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKCQkJCWhlaWdodDogMTAwJSAhaW1wb3J0YW50OwoJCQkJdG9wOiAwICFpbXBvcnRhbnQ7CgkJCQlsZWZ0OiAwICFpbXBvcnRhbnQ7CgkJCQliYWNrZ3JvdW5kOiAjMDAwICFpbXBvcnRhbnQ7CgkJCQl6LWluZGV4OiAyMTQ3NDgzNjQ3ICFpbXBvcnRhbnQ7CgkJCX1gCgkJKTsKCX0KCXN0YXRpYyBnZXRQbGF5ZXJDb250YWluZXIodmlkZW8pIHsKCQlsZXQgZSA9IHZpZGVvLCBwID0gZS5wYXJlbnROb2RlOwoJCWNvbnN0IHsgY2xpZW50V2lkdGg6IHdpZCwgY2xpZW50SGVpZ2h0OiBoIH0gPSBlOwoJCWRvIHsKCQkJZSA9IHA7CgkJCXAgPSBlLnBhcmVudE5vZGU7CgkJfSB3aGlsZSAocCAhPT0gYnkgJiYgcC5jbGllbnRXaWR0aC13aWQgPCA1ICYmIHAuY2xpZW50SGVpZ2h0LWggPCA1KTsKCQkvL2Ug5Li66L+U5Zue5YC877yM5Zyo5q2k5LmL5ZCO5LiN6IO95Y+Y5LqGCgkJd2hpbGUgKHAgIT09IGJ5KSBwID0gcC5wYXJlbnROb2RlIHx8IHAuaG9zdDsKCQlyZXR1cm4gZTsKCX0KCXN0YXRpYyBpc0Z1bGwoZSkgewoJCXJldHVybiB3LmlubmVyV2lkdGggLSBlLmNsaWVudFdpZHRoIDwgNSAmJiB3LmlubmVySGVpZ2h0IC0gZS5jbGllbnRIZWlnaHQgPCA1OwoJfQoJdG9nZ2xlKCkgewoJCS8vIGFzc2VydCh0aGlzLmNvbnRhaW5lcik7CgkJaWYgKCF0aGlzLmNvbnRhaW5lci5jb250YWlucyh2KSkgdGhpcy5jb250YWluZXIgPSBGdWxsUGFnZS5nZXRQbGF5ZXJDb250YWluZXIodik7CgkJYnVzLiRlbWl0KCdzd2l0Y2hGUCcsICF0aGlzLl9pc0Z1bGwpOwoJCWJ5LmNsYXNzTGlzdC50b2dnbGUoJ2dtLWZwLWJvZHknKTsKCQlsZXQgZSA9IHY7CgkJd2hpbGUgKGUgIT0gdGhpcy5jb250YWluZXIpIHsKCQkJZS5jbGFzc0xpc3QudG9nZ2xlKCdnbS1mcC1pbm5lckJveCcpOwoJCQllID0gZS5wYXJlbnROb2RlOwoJCX0KCQllLmNsYXNzTGlzdC50b2dnbGUoJ2dtLWZwLXdyYXBwZXInKTsKCQllID0gZS5wYXJlbnROb2RlOwoJCXdoaWxlIChlICE9IGJ5KSB7CgkJCWUuY2xhc3NMaXN0LnRvZ2dsZSgnZ20tZnAtelRvcCcpOwoJCQllID0gZS5wYXJlbnROb2RlOwoJCX0KCQl0aGlzLl9pc0Z1bGwgPSAhdGhpcy5faXNGdWxsOwoJfQp9Cgpjb25zdCBjYWNoZU1WID0gewoJY2hlY2soKSB7CgkJY29uc3QgYnVmID0gdi5idWZmZXJlZDsKCQljb25zdCBpID0gYnVmLmxlbmd0aCAtIDE7CgkJdGhpcy5pRW5kID0gYnVmLmVuZChpKTsKCQlyZXR1cm4gYnVmLnN0YXJ0KDApID49IHRoaXMucGxheVBvcyB8fCB0aGlzLmlFbmQgPiB2LmR1cmF0aW9uIC01NTsKCX0sCglmaW5pc2goKSB7CgkJdi5yZW1vdmVFdmVudExpc3RlbmVyKCdjYW5wbGF5dGhyb3VnaCcsIHRoaXMub25DaGFjaGUpOwoJCXYuY3VycmVudFRpbWUgPSB0aGlzLnBsYXlQb3M7CgkJdGhpcy5jaGFjaGVkID0gITE7CgkJc2V0VGltZW91dChfID0+IHYucGF1c2UoKSwgOTkpOwoJCUhUTUxNZWRpYUVsZW1lbnQucHJvdG90eXBlLnBsYXkgPSB0aGlzLnJhd1BsYXk7Cgl9LAoJb25DaGFjaGUoKSB7CgkJaWYgKHRoaXMuY2hlY2soKSkgdGhpcy5maW5pc2goKTsKCQllbHNlIHYuY3VycmVudFRpbWUgPSB0aGlzLmlFbmQ7Cgl9LAoJZXhlYygpIHsKCQlpZiAoY2ZnLmlzTGl2ZSB8fCAhdiB8fCB0aGlzLmNoYWNoZWQpIHJldHVybjsKCQlpZiAodi5zcmMuc3RhcnRzV2l0aCgnaHR0cCcpKSB7CgkJCWFsZXJ0KCfnm7TmjqXlqpLkvZPnsbvlnovvvIjlpoJNUDTmoLzlvI/vvInnvJPlrZjml6DmlYjmnpzvvIEnKTsKCQkJcmV0dXJuOwoJCX0KCQl0aGlzLmNoYWNoZWQgPSB0cnVlOyAvL+ato+WcqOe8k+WtmAoJCXYucGF1c2UoKTsKCQl0aGlzLnJhd1BsYXkgPSBIVE1MTWVkaWFFbGVtZW50LnByb3RvdHlwZS5wbGF5OwoJCUhUTUxNZWRpYUVsZW1lbnQucHJvdG90eXBlLnBsYXkgPSAoKSA9PiBuZXcgUHJvbWlzZSgoKSA9PiB3LmFsZXJ0KCfor7flhYjlgZzmraLnvJPlrZjop4bpopHvvIEnKSk7CgkJdGhpcy5wbGF5UG9zID0gdi5jdXJyZW50VGltZTsKCQl2LmFkZEV2ZW50TGlzdGVuZXIoJ2NhbnBsYXl0aHJvdWdoJywgdGhpcy5vbkNoYWNoZSk7CgkJdGhpcy5jaGVjaygpOwoJCXYuY3VycmVudFRpbWUgPSB0aGlzLmlFbmQ7Cgl9Cn07CmNhY2hlTVYub25DaGFjaGUgPSBjYWNoZU1WLm9uQ2hhY2hlLmJpbmQoY2FjaGVNVik7Cgpjb25zdCBhY3RMaXN0ID0gbmV3IE1hcCgpOwphY3RMaXN0LnNldCg5MCwgXyA9PiB7di5wbGF5YmFja1JhdGUgPSAxfSkgLy/mjInplK5aCi5zZXQoODgsIGFkanVzdFJhdGUuYmluZChudWxsLCAtMC4xKSkgLy/mjInplK5YCi5zZXQoNjcsIGFkanVzdFJhdGUuYmluZChudWxsLCAwLjEpKSAvL+aMiemUrkMKLnNldCg0MCwgYWRqdXN0Vm9sdW1lLmJpbmQobnVsbCwgLTAuMSkpIC8v4oaT44CA6ZmN6Z+z6YePCi5zZXQoMzgsIGFkanVzdFZvbHVtZS5iaW5kKG51bGwsIDAuMSkpIC8v4oaR44CA5Yqg6Z+z6YePCi5zZXQoMzcsIF8gPT4ge3YuY3VycmVudFRpbWUgLT0gNX0pIC8v5oyJ6ZSu4oaQCi5zZXQoMzcrMTAyNCwgXyA9PiB7di5jdXJyZW50VGltZSAtPSAyMH0pIC8v5oyJ6ZSuc2hpZnQr4oaQCi5zZXQoMzksIF8gPT4ge3YuY3VycmVudFRpbWUgKz0gNX0pIC8v5oyJ6ZSu4oaSCi5zZXQoMzkrMTAyNCwgXyA9PiB7di5jdXJyZW50VGltZSArPSAyMH0pIC8v5oyJ6ZSuc2hpZnQr4oaSCi5zZXQoNjgsIF8gPT4ge3YuY3VycmVudFRpbWUgLT0gMC4wMzt2LnBhdXNlKCl9KSAvL+aMiemUrkTvvJrkuIrkuIDluKcKLnNldCg3MCwgXyA9PiB7di5jdXJyZW50VGltZSArPSAwLjAzO3YucGF1c2UoKX0pIC8v5oyJ6ZSuRu+8muS4i+S4gOW4pwouc2V0KDMyLCBfID0+IHsJLy/mjInplK5zcGFjZQoJaWYgKGNmZy5idG5QbGF5KSBjbGlja0R1YWxCdXR0b24oY2ZnLmJ0blBsYXkpOwoJZWxzZSB2LnBhdXNlZCA/IHYucGxheSgpIDogdi5wYXVzZSgpOwp9KQouc2V0KDEzLCBfID0+IHsJLy/lm57ovabplK7jgIIg5YWo5bGPCglfZnMgPyBfZnMudG9nZ2xlKCkgOiBjbGlja0R1YWxCdXR0b24oY2ZnLmJ0bkZTKTsKfSkKLnNldCgxMysxMDI0LCBfID0+IHsvL3dlYuWFqOWxjwoJc2VsZiAhPSB0b3AgPyB0b3AucG9zdE1lc3NhZ2Uoe2lkOiAnZ20taDUtdG9nZ2xlLWlmcmFtZVdlYkZ1bGwnfSwgJyonKQoJOiBfZnAgPyBfZnAudG9nZ2xlKCkgOiBjbGlja0R1YWxCdXR0b24oY2ZnLmJ0bkZQKTsKfSkKLnNldCgyNywgXyA9PiB7CS8v5oyJ6ZSuZXNjCglpZiAoRnVsbFNjcmVlbi5pc0Z1bGwoKSkgewoJCV9mcyA/IF9mcy5leGl0KCkgOiBjbGlja0R1YWxCdXR0b24oY2ZnLmJ0bkZTKTsKCX0gZWxzZSBpZiAoc2VsZiAhPSB0b3ApIHsKCQl0b3AucG9zdE1lc3NhZ2Uoe2lkOiAnZ20taDUtaXMtaWZyYW1lV2ViRnVsbCd9LCAnKicpOwoJfSBlbHNlIGlmIChGdWxsUGFnZS5pc0Z1bGwodikpIHsKCQlfZnAgPyBfZnAudG9nZ2xlKCkgOiBjbGlja0R1YWxCdXR0b24oY2ZnLmJ0bkZQKTsKCX0KfSkKLnNldCg3MywgXyA9PiB7IC8v5oyJ6ZSuSe+8mueUu+S4reeUu+aooeW8jwoJaWYgKCFkLnBpY3R1cmVJblBpY3R1cmVFbGVtZW50KSB7CgkJdi5yZXF1ZXN0UGljdHVyZUluUGljdHVyZSgpLmNhdGNoKGVyciA9PiB7CgkJCWFsZXJ0KCfml6Dms5Xov5vlhaXnlLvkuK3nlLvmqKHlvI8h6ZSZ6K+v77yaXG4nKyBlcnIpCgkJfSk7Cgl9IGVsc2UgewoJCWQuZXhpdFBpY3R1cmVJblBpY3R1cmUoKS5jYXRjaChlcnIgPT4gewoJCQlhbGVydCgn5peg5rOV6YCA5Ye655S75Lit55S75qih5byPIemUmeivr++8mlxuJysgZXJyKQoJCX0pOwoJfQp9KQouc2V0KDgwLCBfID0+IHsgLy/mjInplK5Q77ya5oiq5Zu+Cgljb25zdCBjYW52YXMgPSBkLmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpOwoJY2FudmFzLndpZHRoID0gdi52aWRlb1dpZHRoOwoJY2FudmFzLmhlaWdodCA9IHYudmlkZW9IZWlnaHQ7CgljYW52YXMuZ2V0Q29udGV4dCgnMmQnKS5kcmF3SW1hZ2UodiwgMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTsKCgljYW52YXMudG9CbG9iKChibG9iKSA9PiB7CgkJY29uc3QgZGF0YVVSTCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7CgkJY29uc3QgbGluayA9IGQuY3JlYXRlRWxlbWVudCgnYScpOwoJCWxpbmsuaHJlZiA9IGRhdGFVUkw7CgkJbGluay5kb3dubG9hZCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpLnRvU3RyaW5nKDM2KSArICcucG5nJzsKCQlsaW5rLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CgkJZC5ib2R5LmFwcGVuZENoaWxkKGxpbmspOwoJCWxpbmsuY2xpY2soKTsKCQlsaW5rLnJlbW92ZSgpOwoJCVVSTC5yZXZva2VPYmplY3RVUkwoZGF0YVVSTCk7Cgl9KTsKfSkKLnNldCg3NywgXyA9PiB7Ly8gTSDnvJPlrZjop4bpopEKCWNhY2hlTVYuY2hhY2hlZCA/IGNhY2hlTVYuZmluaXNoKCkgOiBjYWNoZU1WLmV4ZWMoKTsKfSkKLnNldCg3OCwgXyA9PiB7Ly8gTiDkuIvkuIDpm4YKCWlmIChzZWxmICE9IHRvcCkgdG9wLnBvc3RNZXNzYWdlKHtpZDogJ2dtLWg1LXBsYXktbmV4dCd9LCAnKicpOwoJZWxzZSBpZiAoY2ZnLmJ0bk5leHQpIGRvQ2xpY2soY2ZnLmJ0bk5leHQpOwoJZWxzZSBpZiAoY2ZnLmlzTnVtVVJMKSBnb05leHRNVigpOwp9KTsKCmNvbnN0IGFwcCA9IHsKCXJhd1Byb3BzOiBuZXcgTWFwKCksCglzaGVsbEV2ZW50KCkgewoJCWNvbnN0IGZuID0gZXYgPT4gewoJCQlpZiAoZXYudGFyZ2V0LmNsb3Nlc3QoJ2J1dHRvbicpKSByZXR1cm47CgkJCWV2LnN0b3BQcm9wYWdhdGlvbigpOyAvLyBwcmV2ZW50RGVmYXVsdAoJCQlldi5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsKCQkJYWN0TGlzdC5nZXQoMTAzNykoKTsgLy93ZWLlhajlsY8KCQl9OwoJCWNvbnN0IGUgPSBjZmcuaXNDbGlja09uVmlkZW8gPyB2IDogY2ZnLm12U2hlbGw7CgkJIWNmZy5pc0xpdmUgJiYgZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBldiA9PiB7CgkJCWlmICgxID09IGV2LmJ1dHRvbikgewoJCQkJZXYuc3RvcFByb3BhZ2F0aW9uKCk7CgkJCQlldi5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsKCQkJCWFjdExpc3QuaGFzKDM5KSA/IGFjdExpc3QuZ2V0KDM5KSgpIDogdi5jdXJyZW50VGltZSArPSA1OwoJCQl9CgkJfSk7CgkJIWNmZy5kaXNhYmxlREJMQ2xpY2sgJiYgZS5hZGRFdmVudExpc3RlbmVyKCdkYmxjbGljaycsIGZuKTsKCX0sCglzZXRTaGVsbCgpIHsKCQljb25zdCBlID0gdGhpcy5nZXREUGxheWVyKCkgfHwgdGhpcy5nZXRWanNQbGF5ZXIoKSB8fAoJCQkoY2ZnLnNoZWxsQ1NTICYmIHEoY2ZnLnNoZWxsQ1NTKSkgfHwKCQkJKHRvcCAhPSBzZWxmID8gYnkgOiBGdWxsUGFnZS5nZXRQbGF5ZXJDb250YWluZXIodikpOwoJCWlmIChlICYmIGNmZy5tdlNoZWxsICE9PSBlKSB7CgkJCWNmZy5tdlNoZWxsID0gZTsKCQkJdGhpcy5zaGVsbEV2ZW50KCk7CgkJfQoJfSwKCWNoZWNrTVYoKSB7CgkJaWYgKHRoaXMudkxpc3QpIHsKCQkJY29uc3QgZSA9IHRoaXMuZmluZE1WKCk7CgkJCWlmIChlICYmIGUgIT0gdikgewoJCQkJdiA9IGU7CgkJCQljZmcuYnRuUGxheSA9IGNmZy5idG5OZXh0ID0gY2ZnLmJ0bkZQID0gY2ZnLmJ0bkZTID0gX2ZzID0gX2ZwID0gbnVsbDsKCQkJCWlmICghY2ZnLmlzTGl2ZSkgewoJCQkJCXYucGxheWJhY2tSYXRlID0gbG9jYWxTdG9yYWdlLm12UGxheVJhdGUgfHwgMTsKCQkJCQl2LmFkZEV2ZW50TGlzdGVuZXIoJ3JhdGVjaGFuZ2UnLCBldiA9PiB7CgkJCQkJCWxvY2FsU3RvcmFnZS5tdlBsYXlSYXRlID0gdi5wbGF5YmFja1JhdGU7CgkJCQkJfSk7CgkJCQl9CgkJCQl0aGlzLnNldFNoZWxsKCk7CgkJCX0KCQl9CgkJaWYgKCF2YWxpZEVsKGNmZy5tdlNoZWxsKSkgewoJCQljZmcubXZTaGVsbCA9IG51bGw7CgkJCXRoaXMuc2V0U2hlbGwoKTsKCQl9CgkJdGhpcy5jaGVja1VJKCk7CgkJcmV0dXJuIHY7Cgl9LAoJZ2V0RFBsYXllcigpIHsKCQljb25zdCBlID0gdi5jbG9zZXN0KCcuZHBsYXllcicpOwoJCWlmIChlKSB7CgkJCWNmZy5idG5GUCA9IHEoJy5kcGxheWVyLWZ1bGwtaW4taWNvbiA+IHNwYW4nLCBlKTsKCQkJY2ZnLmJ0bkZTID0gcSgnLmRwbGF5ZXItZnVsbC1pY29uJywgZSk7CgkJCWUuY2xvc2VzdCgnYm9keSA+IConKS5jbGFzc0xpc3QuYWRkKCdnbS1kcC16VG9wJyk7CgkJfQoJCXJldHVybiBlOwoJfSwKCWdldFZqc1BsYXllcigpIHsKCQljb25zdCBlID0gdi5jbG9zZXN0KCcudmlkZW8tanMnKTsKCQlpZiAoZSkgewoJCQljZmcuYnRuRlMgPSBxKCcudmpzLWNvbnRyb2wtYmFyID4gYnV0dG9uLnZqcy1idXR0b246bnRoLWxhc3Qtb2YtdHlwZSgxKScpOwoJCQljZmcud2ViZnVsbENTUyA9ICcudmpzLWNvbnRyb2wtYmFyID4gYnV0dG9uLnZqcy1idXR0b25bdGl0bGUkPSLlhajlsY8iXTpudGgtbGFzdC1vZi10eXBlKDIpJzsKCQl9CgkJcmV0dXJuIGU7Cgl9LAoJaG90S2V5KGUpIHsKCQljb25zdCB0ID0gZS50YXJnZXQ7CgkJaWYgKGUuY3RybEtleSB8fCBlLmFsdEtleSB8fCB0LmNvbnRlbnRFZGl0YWJsZT09J3RydWUnIHx8CgkJCS9JTlBVVHxURVhUQVJFQXxTRUxFQ1QvLnRlc3QodC5ub2RlTmFtZSkpIHJldHVybjsKCQlpZiAoZS5zaGlmdEtleSAmJiAhWzEzLDM3LDM5XS5pbmNsdWRlcyhlLmtleUNvZGUpKSByZXR1cm47CgkJaWYgKGNmZy5pc0xpdmUgJiYgWzM3LDM5LDc4LDc3LDg4LDY3LDkwXS5pbmNsdWRlcyhlLmtleUNvZGUpKSByZXR1cm47CgkJaWYgKCF0aGlzLmNoZWNrTVYoKSkgcmV0dXJuOwoJCWlmICghZS5zaGlmdEtleSAmJiBjZmcubXZTaGVsbCAmJiBjZmcubXZTaGVsbC5jb250YWlucyh0KSAmJiBbMzIsMzcsMzldLmluY2x1ZGVzKGUua2V5Q29kZSkpIHJldHVybjsKCQljb25zdCBrZXkgPSBlLnNoaWZ0S2V5ID8gZS5rZXlDb2RlICsgMTAyNCA6IGUua2V5Q29kZTsKCQlpZiAoYWN0TGlzdC5oYXMoa2V5KSkgewoJCQllLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpOwoJCQllLnN0b3BQcm9wYWdhdGlvbigpOwoJCQllLnByZXZlbnREZWZhdWx0KCk7CgkJCWFjdExpc3QuZ2V0KGtleSkoKTsKCQl9Cgl9LAoJY2hlY2tVSSgpIHsKCQlpZiAoY2ZnLndlYmZ1bGxDU1MgJiYgIXZhbGlkRWwoY2ZnLmJ0bkZQKSkgY2ZnLmJ0bkZQID0gcShjZmcud2ViZnVsbENTUyk7CgkJaWYgKGNmZy5idG5GUCkgX2ZwID0gbnVsbDsKCQllbHNlIGlmICghX2ZwICYmIHNlbGYgPT0gdG9wKSBfZnAgPSBuZXcgRnVsbFBhZ2UoY2ZnLm12U2hlbGwpOwoKCQlpZiAoY2ZnLmZ1bGxDU1MgJiYgIXZhbGlkRWwoY2ZnLmJ0bkZTKSkgY2ZnLmJ0bkZTID0gcShjZmcuZnVsbENTUyk7CgkJaWYgKGNmZy5idG5GUykgX2ZzID0gbnVsbDsKCQllbHNlIGlmICghX2ZzKSBfZnMgPSBuZXcgRnVsbFNjcmVlbih2KTsKCgkJaWYgKGNmZy5uZXh0Q1NTICYmICF2YWxpZEVsKGNmZy5idG5OZXh0KSkgY2ZnLmJ0bk5leHQgPSBxKGNmZy5uZXh0Q1NTKTsKCQlpZiAoY2ZnLnBsYXlDU1MgJiYgIXZhbGlkRWwoY2ZnLmJ0blBsYXkpKSBjZmcuYnRuUGxheSA9IHEoY2ZnLnBsYXlDU1MpOwoJfSwKCW9uR3Jvd1ZMaXN0KCkgewoJCWlmICh0aGlzLnZMaXN0Lmxlbmd0aCA9PSB0aGlzLnZDb3VudCkgcmV0dXJuOwoJCWlmICh0aGlzLnZpZXdPYnNlcnZlcikgewoJCQlmb3IgKGxldCBlIG9mIHRoaXMudkxpc3QpIHsKCQkJCWlmICghdGhpcy52U2V0LmhhcyhlKSkgdGhpcy52aWV3T2JzZXJ2ZXIub2JzZXJ2ZShlKTsKCQkJfQoJCX0gZWxzZSB7CgkJCWNvbnN0IGNvbmZpZyA9IHsKCQkJCXJvb3RNYXJnaW46ICcwcHgnLAoJCQkJdGhyZXNob2xkOiAwLjkKCQkJfTsKCQkJdGhpcy52aWV3T2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIodGhpcy5vbkludGVyc2VjdGlvbi5iaW5kKHRoaXMpLCBjb25maWcpOwoJCQlmb3IgKGxldCBlIG9mIHRoaXMudkxpc3QpIHRoaXMudmlld09ic2VydmVyLm9ic2VydmUoZSk7CgkJfQoJCXRoaXMudlNldCA9IG5ldyBTZXQodGhpcy52TGlzdCk7CgkJdGhpcy52Q291bnQgPSB0aGlzLnZMaXN0Lmxlbmd0aDsKCX0sCglvbkludGVyc2VjdGlvbihlbnRyaWVzKSB7CgkJaWYgKHRoaXMudkxpc3QubGVuZ3RoIDwgMikgcmV0dXJuOwoJCWNvbnN0IGVudHJ5ID0gZmluZC5jYWxsKGVudHJpZXMsIGsgPT4gay5pc0ludGVyc2VjdGluZyk7CgkJaWYgKCFlbnRyeSB8fCB2ID09IGVudHJ5LnRhcmdldCkgcmV0dXJuOwoJCXYgPSBlbnRyeS50YXJnZXQ7CgkJX2ZzID0gbmV3IEZ1bGxTY3JlZW4odik7CgkJX2ZwID0gbmV3IEZ1bGxQYWdlKHYpOwoJCWJ1cy4kb24oJ3N3aXRjaEZQJywgYXN5bmMgKHRvRnVsbCkgPT4gewoJCQkvLyBjb25zdCBjID0gdG9GdWxsID8gdGhpcy52U2V0IDogdGhpcy52TGlzdDsKCQkJLy8gZm9yIChjb25zdCBlIG9mIGMpIHRoaXMudmlld09ic2VydmVyLnVub2JzZXJ2ZShlKTsKCQkJc2xlZXAoMjAwKTsKCQkJaWYgKCF0b0Z1bGwpIHYuc2Nyb2xsSW50b1ZpZXcoKTsKCQl9KTsKCQlidXMuJGVtaXQoJ3N3aXRjaE1WJyk7Cgl9LAoJYmluZEV2ZW50KCkgewoJCWZvciAoY29uc3QgW2ksa10gb2YgdGhpcy5yYXdQcm9wcykgUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eShIVE1MVmlkZW9FbGVtZW50LnByb3RvdHlwZSwgaSwgayk7CgkJdGhpcy5yYXdQcm9wcy5jbGVhcigpOwoJCXRoaXMucmF3UHJvcHMgPSBudWxsOwoJCSQkKGNmZy5hZHNDU1MpOwoJCWJ5ID0gZC5ib2R5OwoJCWxvZygnYmluZCBldmVudFxuJywgdik7CgkJYnVzLiRlbWl0KCdmb3VuZE1WJyk7CiAgICAgICAgaWYgKHdpbmRvdy5vbnVybGNoYW5nZSA9PT0gdm9pZCAwKSBhZGRVcmxDaGFuZ2VFdmVudCgpOwoJCXdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd1cmxjaGFuZ2UnLCBhc3luYyAoaW5mbykgPT4geyAvL1RNIGV2ZW50OiBpbmZvLnVybAoJCQlhd2FpdCBzbGVlcCgzMDApOwoJCQlidXMuJGVtaXQoJ3VybGNoYW5nZScpOwoJCQl0aGlzLmNoZWNrTVYoKTsKCQl9KTsKCQlpZiAodG9wICE9IHNlbGYpIHsKCQkJdG9wLnBvc3RNZXNzYWdlKHtpZDogJ2dtLWg1LWluaXQtTVZmcmFtZSd9LCAnKicpOwoJCQl3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIGV2ID0+IHsKCQkJCWlmICghZXYuc291cmNlIHx8ICFldi5kYXRhIHx8ICFldi5kYXRhLmlkKSByZXR1cm47CgkJCQlzd2l0Y2ggKGV2LmRhdGEuaWQpIHsKCQkJCWNhc2UgJ2dtLWg1LXRvZ2dsZS1mdWxsU2NyZWVuJzoKCQkJCQlfZnMgPyBfZnMudG9nZ2xlKCkgOiBjbGlja0R1YWxCdXR0b24oY2ZnLmJ0bkZTKTsKCQkJCQlicmVhazsKCQkJCX0KCQkJfSwgZmFsc2UpOwoJCX0KCQlpZiAoIWNmZy5pc0xpdmUpIHsKCQkJdi5wbGF5YmFja1JhdGUgPSBsb2NhbFN0b3JhZ2UubXZQbGF5UmF0ZSB8fCAxOwoJCQl2LmFkZEV2ZW50TGlzdGVuZXIoJ3JhdGVjaGFuZ2UnLCBldiA9PiB7CgkJCQlsb2NhbFN0b3JhZ2UubXZQbGF5UmF0ZSA9IHYucGxheWJhY2tSYXRlOwoJCQl9KTsKCQl9CgkJY29uc3QgZm4gPSBldiA9PiB7CgkJCWJ1cy4kZW1pdCgnY2FucGxheScpOwoJCQl2LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NhbnBsYXl0aHJvdWdoJywgZm4pOwoJCX07CgkJdi5hZGRFdmVudExpc3RlbmVyKCdjYW5wbGF5dGhyb3VnaCcsIGZuKTsKCQlieS5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5ob3RLZXkuYmluZCh0aGlzKSk7CgoJCWNmZy5tdlNoZWxsID8gdGhpcy5zaGVsbEV2ZW50KCkgOiB0aGlzLnNldFNoZWxsKCk7CgkJdGhpcy5jaGVja1VJKCk7CgkJaWYgKGNmZy5tdWx0aXBsZVYpIHsKCQkJbmV3IE11dGF0aW9uT2JzZXJ2ZXIodGhpcy5vbkdyb3dWTGlzdC5iaW5kKHRoaXMpKS5vYnNlcnZlKGJ5LCBvYnNlcnZlT3B0KTsKCQkJdGhpcy52Q291bnQgPSAwOwoJCQl0aGlzLm9uR3Jvd1ZMaXN0KCk7CgkJfQoJfSwKCWluaXQoKSB7CgkJZm9yIChjb25zdCBpIG9mIHRoaXMucmF3UHJvcHMua2V5cygpKSB0aGlzLnJhd1Byb3BzLnNldChpLAoJCQlSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihIVE1MTWVkaWFFbGVtZW50LnByb3RvdHlwZSwgaSkpOwoJCXRoaXMudkxpc3QgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd2aWRlbycpOwoJCWNvbnN0IGZuID0gZSA9PiBjZmcuY3NzTVYgPyBlLm1hdGNoZXMoY2ZnLmNzc01WKSA6IGUub2Zmc2V0V2lkdGggPiA5OwoJCXRoaXMuZmluZE1WID0gZmluZC5iaW5kKHRoaXMudkxpc3QsIGZuKTsKCQljb25zdCB0aW1lciA9IGludGVydmFsUXVlcnkoZSA9PiB7CgkJCXYgPSBlOwoJCQl0aGlzLmJpbmRFdmVudCgpOwoJCX0sIHRoaXMuZmluZE1WKTsKCgkJaG9va0F0dGFjaFNoYWRvdyhhc3luYyBzaGFkb3dSb290ID0+IHsKCQkJYXdhaXQgc2xlZXAoNjAwKTsKCQkJYnVzLiRlbWl0KCdhZGRTaGFkb3dSb290Jywgc2hhZG93Um9vdCk7CgkJCWlmICh2KSByZXR1cm47CgkJCWlmICh2ID0gcSgndmlkZW8nLCBzaGFkb3dSb290KSkgeyAvLyB2LmdldFJvb3ROb2RlKCkgPT0gc2hhZG93Um9vdAoJCQkJbG9nKCdGb3VuZCBNViBpbiBTaGFkb3dSb290XG4nLCB2LCBzaGFkb3dSb290KTsKCQkJCWlmICghY2ZnLnNoZWxsQ1NTKSBjZmcubXZTaGVsbCA9IHNoYWRvd1Jvb3QuaG9zdDsKCQkJCWNsZWFySW50ZXJ2YWwodGltZXIpOwoJCQkJdGhpcy5iaW5kRXZlbnQoKTsKCgkJCQl0aGlzLnZMaXN0ID0gbnVsbDsKCQkJCXRoaXMuZmluZE1WID0gbm9vcEZuOwoJCQl9CgkJfSk7Cgl9Cn07CgpsZXQgcm91dGVyID0gewoJdGVkKCkgewoJCWNmZy5mdWxsQ1NTID0gJ2J1dHRvblt0aXRsZT0iRW50ZXIgRnVsbHNjcmVlbiJdJzsKCQljZmcucGxheUNTUyA9ICdidXR0b25bdGl0bGU9InBsYXkgdmlkZW8iXSc7CgkJaWYgKCFnbUZ1bmNPZkNoZWNrTWVudSgnVEVE5by65Yi26auY5riFJywgJ3RlZF9mb3JjZUhEJykpIHJldHVybjsKCQljb25zdCBnZXRIRFNvdXJjZSA9IGFzeW5jICgpID0+IHsKCQkJY29uc3QgcG4gPSByMSgvXihcL3RhbGtzXC9cdyspLywgcGF0aCk7CgkJCWNvbnN0IHJlc3AgPSBhd2FpdCBmZXRjaChwbiArICcvbWV0YWRhdGEuanNvbicpOwoJCQljb25zdCBkYXRhID0gYXdhaXQgcmVzcC5qc29uKCk7CgkJCXJldHVybiBkYXRhLnRhbGtzWzBdLmRvd25sb2Fkcy5uYXRpdmVEb3dubG9hZHM/LmhpZ2gKCQkJICB8fCBkYXRhLnRhbGtzWzBdLnBsYXllcl90YWxrc1swXS5yZXNvdXJjZXMuaDI2NFswXS5maWxlOwoJCX07CgkJY29uc3QgY2hlY2sgPSBhc3luYyAocnMpID0+IHsKCQkJaWYgKCF2LnNyYyB8fCB2LnNyYy5zdGFydHNXaXRoKCdodHRwJykpIHJldHVybjsKCQkJdHJ5IHsKCQkJCWNvbnN0IHMgPSBhd2FpdCBnZXRIRFNvdXJjZSgpOwoJCQkJJCQoYXBwLnZMaXN0LCBlID0+IGUucmVtb3ZlQXR0cmlidXRlKCdzcmMnKSk7IC8vIOWPlua2iOWkmuS9meeahOWqkuS9k+i1hOa6kOivt+axggoJCQkJdi5zcmMgPSBzOwoJCQl9IGNhdGNoKGV4KSB7CgkJCQlhbGVydCgn6auY5riF5aqS5L2T5LiN5a2Y5Zyo77yBJyk7CgkJCX0KCQl9OwoJCWJ1cy4kb24oJ2ZvdW5kTVYnLCAoKSA9PiB7CgkJCXYuc2V0QXR0cmlidXRlKCdjcm9zc29yaWdpbicsICJhbm9ueW1vdXMiKTsKCQkJbmV3IE11dGF0aW9uT2JzZXJ2ZXIoY2hlY2spLm9ic2VydmUodiwgewoJCQkJYXR0cmlidXRlczogdHJ1ZSwKCQkJCWF0dHJpYnV0ZUZpbHRlcjogWydzcmMnXQoJCQl9KTsKCQkJY2hlY2soKTsKCQl9KTsKCX0sCgl5b3V0dWJlKCkgewoJCUdNX2FkZFN0eWxlKAoJCQlgLmdtLWZwLWJvZHkgI3BsYXllci1jb250YWluZXItaW5uZXJ7cGFkZGluZy10b3A6MCFpbXBvcnRhbnR9CgkJCS5nbS1mcC1ib2R5ICNwbGF5ZXItY29udGFpbmVyLW91dGVyewoJCQkJbWF4LXdpZHRoOjEwMCUhaW1wb3J0YW50OwoJCQkJbWFyZ2luOjAhaW1wb3J0YW50OwoJCQl9YAoJCSk7CgkJY2ZnLnBsYXlDU1MgPSAnYnV0dG9uLnl0cC1wbGF5LWJ1dHRvbic7CgkJY2ZnLm5leHRDU1MgPSAnYS55dHAtbmV4dC1idXR0b24nOwoJCWNmZy5mdWxsQ1NTID0gJ2J1dHRvbi55dHAtZnVsbHNjcmVlbi1idXR0b24nOwoJCWNmZy5pc0NsaWNrT25WaWRlbyA9IHRydWU7CgkJYWN0TGlzdC5kZWxldGUoMzIpOwoJCWFjdExpc3Quc2V0KDY5LCBhY3RMaXN0LmdldCg3MCkpOyAvL0bplK4gPj4gRemUrgoJCWFjdExpc3QuZGVsZXRlKDcwKTsKCX0sCglxcSgpIHsKCQlpZiAoc2VsZiAhPSB0b3AgJiYoaG9zdCA9PSAndi5xcS5jb20nIHx8IGhvc3QgPT0gJ3ZpZGVvLnFxLmNvbScpICkgdGhyb3cgJ+WPquWkhOeQhuS4u+mhtemdoic7CgkJYWN0TGlzdC5kZWxldGUoMzIpOwoJCWNmZy5uZXh0Q1NTID0gJy50eHBfYnRuX25leHQnOwoJCWNmZy53ZWJmdWxsQ1NTID0gJy50eHBfYnRuX2Zha2UnOwoJCWNmZy5mdWxsQ1NTID0gJy50eHBfYnRuX2Z1bGxzY3JlZW4nOwoJCWJ1cy4kb24oJ2NhbnBsYXknLCAoKSA9PiB7CgkJCWlmICh2Lm11dGVkKSAkKCcudHhwX2ljb25fdm9sdW1lJykuY2xpY2soKS5uZXh0KCkuaGlkZSgpOwoJCQlpZiAoIXcuUExBWUVSKSByZXR1cm47CgkJCWNvbnN0IHAgPSB3LlBMQVlFUi5fVWlDb250cm9sLl9VaVNwZWVkOwoJCQlhY3RMaXN0LnNldCg5MCwgXyA9PiBwLnNldFNwZWVkKDEpKQoJCQkuc2V0KDg4LCBfID0+IHAuc2V0U3BlZWQodi5wbGF5YmFja1JhdGUgLSAwLjEpKQoJCQkuc2V0KDY3LCBfID0+IHAuc2V0U3BlZWQodi5wbGF5YmFja1JhdGUgKyAwLjEpKTsKCQl9KTsKCQkvLyBhcHAucmF3UHJvcHMuc2V0KCdwbGF5YmFja1JhdGUnLCAxKTsKCX0sCgl5b3VrdSgpIHsKCQlhY3RMaXN0LmRlbGV0ZSgzNyk7CgkJYWN0TGlzdC5kZWxldGUoMzkpOwoJCWlmIChob3N0LnN0YXJ0c1dpdGgoJ3ZrdS4nKSkgewoJCQlidXMuJG9uKCdjYW5wbGF5JywgKCkgPT4gewoJCQkJY2ZnLmlzTGl2ZSA9ICFxKCcuc3B2X3Byb2dyZXNzJyk7CgkJCX0pOwoJCQljZmcuZnVsbENTUyA9ICcubGl2ZV9pY29uX2Z1bGwnOwoJCX0gZWxzZSB7CgkJCWJ1cy4kb24oJ2ZvdW5kTVYnLCgpID0+IHsgJChkb2N1bWVudCkudW5iaW5kKCdrZXl1cCcpIH0pOwoJCQkvLyBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnY25hJyk7CgkJCS8vIGRlbGV0ZSBjb29raWUuY25hOyAgLy/lhajpg6jmuIXpmaQ6IGNvb2tpZSgpOyDlhpnlhaVjb29raWXvvJogY29va2llLmNuYSA9ICd4eHh4eC0tLXh4eCc7CgkJCWNmZy5zaGVsbENTUyA9ICcjeWtQbGF5ZXInOwoJCQljZmcud2ViZnVsbENTUyA9ICcua3VpLXdlYmZ1bGxzY3JlZW4taWNvbi0wJzsKCQkJY2ZnLmZ1bGxDU1MgPSAnLmt1aS1mdWxsc2NyZWVuLWljb24tMCc7CgkJCWNmZy5uZXh0Q1NTID0gJy5rdWktbmV4dC1pY29uLTAnOwoJCX0KCX0sCgliaWxpYmlsaSgpIHsKCQlhcHAucmF3UHJvcHMuc2V0KCdwbGF5YmFja1JhdGUnLCAxKQoJCSAgLnNldCgnY3VycmVudFRpbWUnLCAxKQoJCSAgLnNldCgndm9sdW1lJywgMSk7CgkJY2ZnLmlzTGl2ZSA9IGhvc3Quc3RhcnRzV2l0aCgnbGl2ZS4nKTsKCQlpZiAoY2ZnLmlzTGl2ZSkgcmV0dXJuOwoJCWNvbnN0IGlzU3F1aXJ0bGUgPSBwYXRoLnN0YXJ0c1dpdGgoJy9iYW5ndW1pJyk7CgkJaWYgKCFpc1NxdWlydGxlKSBhY3RMaXN0LmRlbGV0ZSgzMik7CgkJY2ZnLm5leHRDU1MgPSBpc1NxdWlydGxlID8gJy5zcXVpcnRsZS12aWRlby1uZXh0JyA6ICcuYmlsaWJpbGktcGxheWVyLXZpZGVvLWJ0bi1uZXh0JzsKCQljZmcud2ViZnVsbENTUyA9IGlzU3F1aXJ0bGUgPyAnLnNxdWlydGxlLXZpZGVvLXBhZ2VmdWxsc2NyZWVuJyA6ICcuYmlsaWJpbGktcGxheWVyLXZpZGVvLXdlYi1mdWxsc2NyZWVuJzsKCQljZmcuZnVsbENTUyA9IGlzU3F1aXJ0bGUgPyAnLnNxdWlydGxlLXZpZGVvLWZ1bGxzY3JlZW4nIDogJy5iaWxpYmlsaS1wbGF5ZXItdmlkZW8tYnRuLWZ1bGxzY3JlZW4nOwoJCS8qIGJ1cy4kb24oJ2tleWRvd24nLCBldiA9PiB7CgkJCWxldCBuLCBwID0gdy5wbGF5ZXI7CgkJCXN3aXRjaCAoZXYua2V5Q29kZSkgewoJCQljYXNlIDM4OiBuID0gMC4xOyAvL+WKoOmfs+mHjwoJCQljYXNlIDQwOiBuID0gbiB8fCAtMC4xOyAvL+mZjemfs+mHjwoJCQkJcC52b2x1bWUobiArIHAudm9sdW1lKCkpOwoJCQkJZXYucHJldmVudERlZmF1bHQoKTsKCQkJCWV2LnN0b3BQcm9wYWdhdGlvbigpOwoJCQkJcmV0dXJuIHRydWU7CgkJCWNhc2UgMzc6IG4gPSBldi5zaGlmdEtleSA/IC0yMCA6IC01OyAvL2xlZnQgIOW/q+mAgDXnp5Isc2hpZnTliqDpgJ8KCQkJY2FzZSAzOTogbiA9IG4gfHwgKGV2LnNoaWZ0S2V5ID8gMjAgOiA1KTsKCQkJY2FzZSA3MDogbiA9IG4gfHwgMC4wMzsgLy/mjInplK5G77ya5LiL5LiA5binCgkJCWNhc2UgNjg6IG4gPSBuIHx8IC0wLjAzOyAvL+aMiemUrkTvvJrkuIrkuIDluKcKCQkJCW4gKz0gcC5nZXRDdXJyZW50VGltZSgpOwoJCQkJcC5zZWVrKG4sIHAuZ2V0U3RhdGUoKSA9PT0gIlBBVVNFRCIpOwoJCQkJZXYucHJldmVudERlZmF1bHQoKTsKCQkJCWV2LnN0b3BQcm9wYWdhdGlvbigpOwoJCQkJcmV0dXJuIHRydWU7CgkJCX0KCQl9KTsgKi8KCX0sCglpcWl5aSgpIHsKCQljZmcuZnVsbENTUyA9ICcuaXFwLWJ0bi1mdWxsc2NyZWVuOm5vdCguZmFrZV9fY2xpY2spJzsKCQljZmcud2ViZnVsbENTUyA9ICcuaXFwLWJ0bi13ZWJzY3JlZW46bm90KC5mYWtlX19jbGljayknOwoJCWNmZy5uZXh0Q1NTID0gJy5pcXAtYnRuLW5leHQnOwoJfSwKCXBwdHYoKSB7CgkJY2ZnLmZ1bGxDU1MgPSAnLnctem9vbS1jb250YWluZXIgPiBkaXYnOwoJCWNmZy53ZWJmdWxsQ1NTID0gJy53LWV4cGFuZC1jb250YWluZXIgPiBkaXYnOwoJCWNmZy5uZXh0Q1NTID0gJy53LW5leHQnOwoJfSwKCW1ndHYoKSB7CgkJY2ZnLmZ1bGxDU1MgPSAnbWFuZ28tc2NyZWVuJzsKCQljZmcud2ViZnVsbENTUyA9ICdtYW5nby13ZWJzY3JlZW4gPiBhJzsKCQljZmcubmV4dENTUyA9ICdtYW5nby1jb250cm9sLXBsYXluZXh0LWJ0bic7Cgl9LAoJaXhpZ3VhKCkgewoJCWNmZy5mdWxsQ1NTID0gJ2RpdlthcmlhLWxhYmVsPSLlhajlsY8iXSc7CgkJLy8gY2ZnLndlYmZ1bGxDU1MgPSAnLnhncGMtdGhlYXRlci1jb250cm9sLWl0ZW0nOwoJCWNmZy5uZXh0Q1NTID0gJy54Z3BsYXllci1jb250cm9sLWl0ZW0uY29udHJvbF9wbGF5bmV4dCc7CgkJYnVzLiRvbignZm91bmRNVicsICgpID0+IHsKCQkJdi5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgYXBwLmhvdEtleS5iaW5kKGFwcCkpOwoJCX0pOwoJfSwKCW1pZ3V2aWRlbygpIHsKCQljZmcucGxheUNTUyA9ICcucGxheS1idG4nOwoJCWNmZy5uZXh0Q1NTID0gJy5uZXh0LWJ0bic7Cgl9LAoJYmFpZHUoKSB7CgkJYXBwLnJhd1Byb3BzLnNldCgncGxheWJhY2tSYXRlJywgMSk7Cgl9LAoJd2VpYm8oKSB7CgkJY2ZnLm11bHRpcGxlViA9IHBhdGguc3RhcnRzV2l0aCgnL3UvJyk7Cgl9LAoJYWNmdW4oKSB7CgkJY2ZnLm5leHRDU1MgPSAnLmJ0bi1uZXh0LXBhcnQgLmNvbnRyb2wtYnRuJzsKCQljZmcud2ViZnVsbENTUyA9ICcuZnVsbHNjcmVlbi13ZWInOwoJCWNmZy5mdWxsQ1NTID0gJy5mdWxsc2NyZWVuLXNjcmVlbic7Cgl9LAoJWycxNjMnXSgpIHsKCQljZmcubXVsdGlwbGVWID0gaG9zdC5zdGFydHNXaXRoKCduZXdzLicpOwoJCUdNX2FkZFN0eWxlKCdkaXYudmlkZW8sdmlkZW97bWF4LWhlaWdodDogMTAwJSAhaW1wb3J0YW50O30nKTsKCQlyZXR1cm4gaG9zdC5zcGxpdCgnLicpLmxlbmd0aCA+IDM7Cgl9LAoJc29odSgpIHsKCQljZmcubmV4dENTUyA9ICdsaS5vbltkYXRhLXZpZF0rbGkgYSc7CgkJY2ZnLmZ1bGxDU1MgPSAnLngtZnVsbHNjcmVlbi1idG4nOwoJCWNmZy53ZWJmdWxsQ1NTID0gJy54LXBhZ2Vmcy1idG4nOwoJfSwKCWZ1bigpIHsKCQljZmcubmV4dENTUyA9ICcuYnRuLWl0ZW0uYnRuLW5leHQnOwoJfSwKCWxlKCkgewoJCUdNX2FkZFN0eWxlKCcuZ20tZnAtYm9keSAubGVfaGVhZHtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fScpOwoJCWNmZy5jc3NNViA9ICcjdmlkZW8gdmlkZW8nOwoJCWNmZy5zaGVsbENTUyA9ICcjdmlkZW8nOwoJCWNmZy5uZXh0Q1NTID0gJy5odl9pY29fbmV4dCc7CgkJc2V0SW50ZXJ2YWwoXyA9PiB7CgkJCWlmICghdiB8fCB2Lm9mZnNldEhlaWdodCkgcmV0dXJuOwoJCQlmb3IgKGNvbnN0IGsgb2YgT2JqZWN0LnZhbHVlcyh2LmF0dHJpYnV0ZXMpKSBpZiAodi5nZXRBdHRyaWJ1dGUoay5uYW1lKSA9PSAnJyl7CgkJCQl2LnJlbW92ZUF0dHJpYnV0ZShrLm5hbWUpOwoJCQkJYnJlYWs7CgkJCX0KCQl9LCA2MDApOwoJfSwKCWFnZW15cygpIHsKCQlhY3RMaXN0LnNldCg3OCwgXyA9PiB7IGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5ocmVmLnJlcGxhY2UoL1xkKyQvLCBzID0+ICsrcykgfSk7Cgl9LAoJaGFubWlkeSgpIHsKCQljZmcubmV4dENTUyA9IGBhW2hyZWY9IiR7cGF0aH0iXSthYDsKCQkvLyBHTV9hZGRTdHlsZSgnLmRwbGF5ZXItbG9hZGVkeyBiYWNrZ3JvdW5kLWNvbG9yOm9yYW5nZSAhaW1wb3J0YW50OyB9Jyk7Cgl9LAoJb2xldm9kKCkgewoJCWNmZy5mdWxsQ1NTID0gJ2J1dHRvbltkYXRhLXBseXI9ZnVsbHNjcmVlbl0nOwoJCUdNX2FkZFN0eWxlKCcucGx5cl9fdmlkZW8td3JhcHBlcnsgaGVpZ2h0OjEwMCUhaW1wb3J0YW50OyBwYWRkaW5nLWJvdHRvbTowIWltcG9ydGFudDt9Jyk7Cgl9Cn07CgppZiAoIXJvdXRlclt1XSkgeyAvL+ebtOaSreermeeCuQoJcm91dGVyID0gewoJCWRvdXl1KCkgewoJCQljZmcuYWRzQ1NTID0gJ2FbaHJlZio9Indhbi5kb3V5dS5jb20iXSc7CgkJCWNmZy5pc0xpdmUgPSAhaG9zdC5zdGFydHNXaXRoKCd2LicpOwoJCQlpZiAoY2ZnLmlzTGl2ZSkgewoJCQkJY2ZnLmNzc01WID0gJy5sYXlvdXQtUGxheWVyIHZpZGVvJzsKCQkJCWNmZy53ZWJmdWxsQ1NTID0gJy53ZnMtMmE4ZTgzJzsKCQkJCWNmZy5mdWxsQ1NTID0gJy5mcy03ODExNTMnOwoJCQkJY2ZnLnBsYXlDU1MgPSAnZGl2W2NsYXNzfD1wbGF5XSc7CgkJCQlwYXRoICE9ICcvJyAmJiBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZXYgPT4gewoJCQkJCSQkKCcudS1zcGVjaWFsU3RhdGVJbnB1dCcsIGUgPT4ge2UuY2hlY2tlZCA9IHRydWU7fSkKCQkJCX0pOwoJCQl9IGVsc2UgYnVzLiRvbignYWRkU2hhZG93Um9vdCcsIGZ1bmN0aW9uKHIpIHsKCQkJCWlmIChyLmhvc3QubWF0Y2hlcygnI2RlbWFuZGNvbnRyb2xsZXItYmFyJykpIHsKCQkJCQljZmcuc2hlbGxDU1MgPSAnZGl2W2Z1bGxzY3JlZW5dLnZpZGVvJzsKCQkJCQljZmcuYnRuRlAgPSBxKCcuQ29udHJvbGxlckJhci1QYWdlRnVsbCcsIHIpOwoJCQkJCWNmZy5idG5GUyA9IHEoJy5Db250cm9sbGVyQmFyLVdpbmRvd0Z1bGwnLCByKTsKCQkJCX0KCQkJfSk7CgkJfSwKCQl5eSgpIHsKCQkJY2ZnLmlzTGl2ZSA9ICFwYXRoLnN0YXJ0c1dpdGgoJy94LycpOwoJCQlpZiAoY2ZnLmlzTGl2ZSkgewoJCQkJY2ZnLmZ1bGxDU1MgPSAnLnljX19mdWxsc2NyZWVuLWJ0bic7CgkJCQljZmcud2ViZnVsbENTUyA9ICcueWNfX2NpbmVtYS1tb2RlLWJ0bic7CgkJCQljZmcucGxheUNTUyA9ICcueWNfX3BsYXktYnRuJzsKCQkJfQoJCX0sCgkJaHV5YSgpIHsKCQkJaWYgKGZpcmVmb3hWZXIgJiYgZmlyZWZveFZlciA8IDU3KSByZXR1cm4gdHJ1ZTsKCQkJY2ZnLmRpc2FibGVEQkxDbGljayA9ICEwOwoJCQljZmcud2ViZnVsbENTUyA9ICcucGxheWVyLWZ1bGxwYWdlLWJ0bic7CgkJCWNmZy5mdWxsQ1NTID0gJy5wbGF5ZXItZnVsbHNjcmVlbi1idG4nOwoJCQljZmcucGxheUNTUyA9ICcjcGxheWVyLWJ0bic7CgkJCWNmZy5hZHNDU1MgPSAnI3BsYXllci1zdWJzY3JpYmUtd2FwLCN3cmFwLWluY29tZSc7CgkJCWludGVydmFsUXVlcnkoZG9DbGljaywgJy5sb2dpbi10aXBzLWNsb3NlJyk7CgkJCWxvY2FsU3RvcmFnZVsnc2lkZWJhci9hZHMnXSA9ICd7fSc7CgkJCWxvY2FsU3RvcmFnZVsnc2lkZWJhci9zdGF0ZSddID0gMDsKCQkJbG9jYWxTdG9yYWdlLlRUX1JPT01fU0hJRUxEX0NGR18wXyA9ICd7IjEwMDAwIjoxLCIyMDAwMSI6MSwiMjAwMDIiOjEsIjIwMDAzIjoxLCIzMDAwMCI6MX0nOwoJCX0sCgkJbG9uZ3podSgpIHsKCQkJY2ZnLmZ1bGxDU1MgPSAnYS55YS1zY3JlZW4tYnRuJzsKCQl9LAoJCXpoYW5xaSgpIHsKCQkJbG9jYWxTdG9yYWdlLmxhc3RQbGF5ZXIgPSAnaDUnOwoJCQljZmcuZnVsbENTUyA9ICcudmlkZW8tZnVsbHNjcmVlbic7CgkJfQoJfTsKCWlmIChyb3V0ZXJbdV0pIHsKCQljZmcuaXNMaXZlID0gY2ZnLmlzTGl2ZSB8fCAhaG9zdC5zdGFydHNXaXRoKCd2LicpOwoJCSghdy5jaHJvbWUgfHwgaXNFZGdlKSAmJiBmYWtlVUEodWFfY2hyb21lKTsKCX0KfQoKUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eShuYXZpZ2F0b3IsICdwbHVnaW5zJywgewoJZ2V0KCkgeyByZXR1cm4geyBsZW5ndGg6IDAgfSB9Cn0pOwpHTV9yZWdpc3Rlck1lbnVDb21tYW5kKCfohJrmnKzlip/og73lv6vmjbfplK7ooagnICwgYWxlcnQuYmluZCh3LApg5Y+M5Ye777ya5YiH5o2i77yI572R6aG177yJ5YWo5bGPICAgICAgICAg6byg5qCH5Lit6ZSu77ya5b+r6L+bNeenkgoKUO+8muinhumikeaIquWbviAgICAgICAgae+8muWIh+aNoueUu+S4reeUuyAgICAgICAgTe+8mijlgZzmraIp57yT5a2Y6KeG6aKRCuKGkCDihpLmlrnlkJHplK7vvJrlv6vpgIDjgIHlv6vov5s156eSOyAgIOaWueWQkemUriArIHNoaWZ0OiAyMOenkgrihpEg4oaT5pa55ZCR6ZSu77ya6Z+z6YeP6LCD6IqCICAgRVND77ya6YCA5Ye677yI572R6aG177yJ5YWo5bGPCuepuuagvOmUru+8muaaguWBnC/mkq3mlL4gICAgICBO77ya5pKt5pS+5LiL5LiA6ZuGCuWbnui9pumUru+8muWIh+aNouWFqOWxjzsgICAgICDlm57ovabplK4gKyBzaGlmdDog5YiH5o2i572R6aG15YWo5bGPCkPvvJrliqDpgJ8wLjHlgI3mkq3mlL4gICAgICAgWO+8muWHj+mAnzAuMeWAjeaSreaUviAgICAgICBa77ya5q2j5bi46YCf5bqm5pKt5pS+CkTvvJrkuIrkuIDluKcgICAgIEbvvJrkuIvkuIDluKcoeW91dHViZS5jb23nlKhF6ZSuKWAKKSk7CmlmICghcm91dGVyW3VdIHx8ICFyb3V0ZXJbdV0oKSkgYXBwLmluaXQoKTsKaWYgKCFyb3V0ZXJbdV0gJiYgIWNmZy5pc051bVVSTCkgY2ZnLmlzTnVtVVJMID0gL1tfXFddXGQrKFwvfFwuW2Etel17Myw4fSk/JC8udGVzdChwYXRoKTs=","requires":[{"meta":{"name":"vue.min.js","url":"https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.min.js","ts":1649818947640,"mimetype":"text/javascript"},"source":""}]},{"name":"破解VIP会员视频集合","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["*://*.bilibili.com/blackboard/*"],"orig_includes":[],"orig_matches":["*://*.iqiyi.com/*","*://*.youku.com/*","*://*.le.com/*","*://*.letv.com/*","*://v.qq.com/*","*://*.tudou.com/*","*://*.mgtv.com/*","*://film.sohu.com/*","*://tv.sohu.com/*","*://*.acfun.cn/*","*://*.bilibili.com/*","*://vip.1905.com/play/*","*://*.pptv.com/*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://*.fun.tv/vplay/*","*://*.wasu.cn/Play/show/*","*://*.56.com/*"],"orig_noframes":true,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1625035392184,"data":{"topSet":"o{\"vqqcom\":44,\"wwwiqiyicom\":50,\"vpptvcom\":50,\"wwwbilibilicom\":50,\"vyoukucom\":50}"}},"enabled":false,"position":8,"file_url":"https://greasyfork.org/scripts/27530-%E7%A0%B4%E8%A7%A3vip%E4%BC%9A%E5%91%98%E8%A7%86%E9%A2%91%E9%9B%86%E5%90%88/code/%E7%A0%B4%E8%A7%A3VIP%E4%BC%9A%E5%91%98%E8%A7%86%E9%A2%91%E9%9B%86%E5%90%88.user.js","uuid":"ace5a1a7-07c2-4679-916e-1a8de45a253d","source":"","requires":[{"meta":{"name":"vue.min.js","url":"https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.min.js","ts":1625035392182,"mimetype":"text/javascript"},"source":""}]},{"name":"最强的老牌脚本CSDNGreener：CSDN广告完全过滤、人性化脚本优化","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.csdn.net"],"orig_excludes":[],"orig_includes":["*://*.csdn.net/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1625035392187,"data":{}},"enabled":true,"position":9,"file_url":"https://openuserjs.org/install/AdlerED/%E6%9C%80%E5%BC%BA%E7%9A%84%E8%80%81%E7%89%8C%E8%84%9A%E6%9C%ACCSDNGreener%EF%BC%9ACSDN%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4%E3%80%81%E4%BA%BA%E6%80%A7%E5%8C%96%E8%84%9A%E6%9C%AC%E4%BC%98%E5%8C%96.user.js","uuid":"89750bcf-972f-4d14-87fa-065d0590b449","source":"","requires":[{"meta":{"name":"jquery.cookie.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery-cookie/1.4.1/jquery.cookie.min.js","ts":1653920365202,"mimetype":"text/javascript"},"source":"LyohIGpxdWVyeS5jb29raWUgdjEuNC4xIHwgTUlUICovCiFmdW5jdGlvbihhKXsiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbImpxdWVyeSJdLGEpOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9hKHJlcXVpcmUoImpxdWVyeSIpKTphKGpRdWVyeSl9KGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGgucmF3P2E6ZW5jb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIGgucmF3P2E6ZGVjb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGIoaC5qc29uP0pTT04uc3RyaW5naWZ5KGEpOlN0cmluZyhhKSl9ZnVuY3Rpb24gZShhKXswPT09YS5pbmRleE9mKCciJykmJihhPWEuc2xpY2UoMSwtMSkucmVwbGFjZSgvXFwiL2csJyInKS5yZXBsYWNlKC9cXFxcL2csIlxcIikpO3RyeXtyZXR1cm4gYT1kZWNvZGVVUklDb21wb25lbnQoYS5yZXBsYWNlKGcsIiAiKSksaC5qc29uP0pTT04ucGFyc2UoYSk6YX1jYXRjaChiKXt9fWZ1bmN0aW9uIGYoYixjKXt2YXIgZD1oLnJhdz9iOmUoYik7cmV0dXJuIGEuaXNGdW5jdGlvbihjKT9jKGQpOmR9dmFyIGc9L1wrL2csaD1hLmNvb2tpZT1mdW5jdGlvbihlLGcsaSl7aWYodm9pZCAwIT09ZyYmIWEuaXNGdW5jdGlvbihnKSl7aWYoaT1hLmV4dGVuZCh7fSxoLmRlZmF1bHRzLGkpLCJudW1iZXIiPT10eXBlb2YgaS5leHBpcmVzKXt2YXIgaj1pLmV4cGlyZXMsaz1pLmV4cGlyZXM9bmV3IERhdGU7ay5zZXRUaW1lKCtrKzg2NGU1KmopfXJldHVybiBkb2N1bWVudC5jb29raWU9W2IoZSksIj0iLGQoZyksaS5leHBpcmVzPyI7IGV4cGlyZXM9IitpLmV4cGlyZXMudG9VVENTdHJpbmcoKToiIixpLnBhdGg/IjsgcGF0aD0iK2kucGF0aDoiIixpLmRvbWFpbj8iOyBkb21haW49IitpLmRvbWFpbjoiIixpLnNlY3VyZT8iOyBzZWN1cmUiOiIiXS5qb2luKCIiKX1mb3IodmFyIGw9ZT92b2lkIDA6e30sbT1kb2N1bWVudC5jb29raWU/ZG9jdW1lbnQuY29va2llLnNwbGl0KCI7ICIpOltdLG49MCxvPW0ubGVuZ3RoO28+bjtuKyspe3ZhciBwPW1bbl0uc3BsaXQoIj0iKSxxPWMocC5zaGlmdCgpKSxyPXAuam9pbigiPSIpO2lmKGUmJmU9PT1xKXtsPWYocixnKTticmVha31lfHx2b2lkIDA9PT0ocj1mKHIpKXx8KGxbcV09cil9cmV0dXJuIGx9O2guZGVmYXVsdHM9e30sYS5yZW1vdmVDb29raWU9ZnVuY3Rpb24oYixjKXtyZXR1cm4gdm9pZCAwPT09YS5jb29raWUoYik/ITE6KGEuY29va2llKGIsIiIsYS5leHRlbmQoe30sYyx7ZXhwaXJlczotMX0pKSwhYS5jb29raWUoYikpfX0pOw=="},{"meta":{"name":"nprogress.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/nprogress/0.2.0/nprogress.min.js","ts":1653920365213,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKG4sZSl7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWUoKTpuLk5Qcm9ncmVzcz1lKCl9KHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sZSx0KXtyZXR1cm4gZT5uP2U6bj50P3Q6bn1mdW5jdGlvbiBlKG4pe3JldHVybiAxMDAqKC0xK24pfWZ1bmN0aW9uIHQobix0LHIpe3ZhciBpO3JldHVybiBpPSJ0cmFuc2xhdGUzZCI9PT1jLnBvc2l0aW9uVXNpbmc/e3RyYW5zZm9ybToidHJhbnNsYXRlM2QoIitlKG4pKyIlLDAsMCkifToidHJhbnNsYXRlIj09PWMucG9zaXRpb25Vc2luZz97dHJhbnNmb3JtOiJ0cmFuc2xhdGUoIitlKG4pKyIlLDApIn06eyJtYXJnaW4tbGVmdCI6ZShuKSsiJSJ9LGkudHJhbnNpdGlvbj0iYWxsICIrdCsibXMgIityLGl9ZnVuY3Rpb24gcihuLGUpe3ZhciB0PSJzdHJpbmciPT10eXBlb2Ygbj9uOm8obik7cmV0dXJuIHQuaW5kZXhPZigiICIrZSsiICIpPj0wfWZ1bmN0aW9uIGkobixlKXt2YXIgdD1vKG4pLGk9dCtlO3IodCxlKXx8KG4uY2xhc3NOYW1lPWkuc3Vic3RyaW5nKDEpKX1mdW5jdGlvbiBzKG4sZSl7dmFyIHQsaT1vKG4pO3IobixlKSYmKHQ9aS5yZXBsYWNlKCIgIitlKyIgIiwiICIpLG4uY2xhc3NOYW1lPXQuc3Vic3RyaW5nKDEsdC5sZW5ndGgtMSkpfWZ1bmN0aW9uIG8obil7cmV0dXJuKCIgIisobi5jbGFzc05hbWV8fCIiKSsiICIpLnJlcGxhY2UoL1xzKy9naSwiICIpfWZ1bmN0aW9uIGEobil7biYmbi5wYXJlbnROb2RlJiZuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobil9dmFyIHU9e307dS52ZXJzaW9uPSIwLjIuMCI7dmFyIGM9dS5zZXR0aW5ncz17bWluaW11bTouMDgsZWFzaW5nOiJlYXNlIixwb3NpdGlvblVzaW5nOiIiLHNwZWVkOjIwMCx0cmlja2xlOiEwLHRyaWNrbGVSYXRlOi4wMix0cmlja2xlU3BlZWQ6ODAwLHNob3dTcGlubmVyOiEwLGJhclNlbGVjdG9yOidbcm9sZT0iYmFyIl0nLHNwaW5uZXJTZWxlY3RvcjonW3JvbGU9InNwaW5uZXIiXScscGFyZW50OiJib2R5Iix0ZW1wbGF0ZTonPGRpdiBjbGFzcz0iYmFyIiByb2xlPSJiYXIiPjxkaXYgY2xhc3M9InBlZyI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0ic3Bpbm5lciIgcm9sZT0ic3Bpbm5lciI+PGRpdiBjbGFzcz0ic3Bpbm5lci1pY29uIj48L2Rpdj48L2Rpdj4nfTt1LmNvbmZpZ3VyZT1mdW5jdGlvbihuKXt2YXIgZSx0O2ZvcihlIGluIG4pdD1uW2VdLHZvaWQgMCE9PXQmJm4uaGFzT3duUHJvcGVydHkoZSkmJihjW2VdPXQpO3JldHVybiB0aGlzfSx1LnN0YXR1cz1udWxsLHUuc2V0PWZ1bmN0aW9uKGUpe3ZhciByPXUuaXNTdGFydGVkKCk7ZT1uKGUsYy5taW5pbXVtLDEpLHUuc3RhdHVzPTE9PT1lP251bGw6ZTt2YXIgaT11LnJlbmRlcighcikscz1pLnF1ZXJ5U2VsZWN0b3IoYy5iYXJTZWxlY3Rvciksbz1jLnNwZWVkLGE9Yy5lYXNpbmc7cmV0dXJuIGkub2Zmc2V0V2lkdGgsbChmdW5jdGlvbihuKXsiIj09PWMucG9zaXRpb25Vc2luZyYmKGMucG9zaXRpb25Vc2luZz11LmdldFBvc2l0aW9uaW5nQ1NTKCkpLGYocyx0KGUsbyxhKSksMT09PWU/KGYoaSx7dHJhbnNpdGlvbjoibm9uZSIsb3BhY2l0eToxfSksaS5vZmZzZXRXaWR0aCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZihpLHt0cmFuc2l0aW9uOiJhbGwgIitvKyJtcyBsaW5lYXIiLG9wYWNpdHk6MH0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt1LnJlbW92ZSgpLG4oKX0sbyl9LG8pKTpzZXRUaW1lb3V0KG4sbyl9KSx0aGlzfSx1LmlzU3RhcnRlZD1mdW5jdGlvbigpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdS5zdGF0dXN9LHUuc3RhcnQ9ZnVuY3Rpb24oKXt1LnN0YXR1c3x8dS5zZXQoMCk7dmFyIG49ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dS5zdGF0dXMmJih1LnRyaWNrbGUoKSxuKCkpfSxjLnRyaWNrbGVTcGVlZCl9O3JldHVybiBjLnRyaWNrbGUmJm4oKSx0aGlzfSx1LmRvbmU9ZnVuY3Rpb24obil7cmV0dXJuIG58fHUuc3RhdHVzP3UuaW5jKC4zKy41Kk1hdGgucmFuZG9tKCkpLnNldCgxKTp0aGlzfSx1LmluYz1mdW5jdGlvbihlKXt2YXIgdD11LnN0YXR1cztyZXR1cm4gdD8oIm51bWJlciIhPXR5cGVvZiBlJiYoZT0oMS10KSpuKE1hdGgucmFuZG9tKCkqdCwuMSwuOTUpKSx0PW4odCtlLDAsLjk5NCksdS5zZXQodCkpOnUuc3RhcnQoKX0sdS50cmlja2xlPWZ1bmN0aW9uKCl7cmV0dXJuIHUuaW5jKE1hdGgucmFuZG9tKCkqYy50cmlja2xlUmF0ZSl9LGZ1bmN0aW9uKCl7dmFyIG49MCxlPTA7dS5wcm9taXNlPWZ1bmN0aW9uKHQpe3JldHVybiB0JiYicmVzb2x2ZWQiIT09dC5zdGF0ZSgpPygwPT09ZSYmdS5zdGFydCgpLG4rKyxlKyssdC5hbHdheXMoZnVuY3Rpb24oKXtlLS0sMD09PWU/KG49MCx1LmRvbmUoKSk6dS5zZXQoKG4tZSkvbil9KSx0aGlzKTp0aGlzfX0oKSx1LnJlbmRlcj1mdW5jdGlvbihuKXtpZih1LmlzUmVuZGVyZWQoKSlyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5wcm9ncmVzcyIpO2koZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCJucHJvZ3Jlc3MtYnVzeSIpO3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3QuaWQ9Im5wcm9ncmVzcyIsdC5pbm5lckhUTUw9Yy50ZW1wbGF0ZTt2YXIgcixzPXQucXVlcnlTZWxlY3RvcihjLmJhclNlbGVjdG9yKSxvPW4/Ii0xMDAiOmUodS5zdGF0dXN8fDApLGw9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjLnBhcmVudCk7cmV0dXJuIGYocyx7dHJhbnNpdGlvbjoiYWxsIDAgbGluZWFyIix0cmFuc2Zvcm06InRyYW5zbGF0ZTNkKCIrbysiJSwwLDApIn0pLGMuc2hvd1NwaW5uZXJ8fChyPXQucXVlcnlTZWxlY3RvcihjLnNwaW5uZXJTZWxlY3RvciksciYmYShyKSksbCE9ZG9jdW1lbnQuYm9keSYmaShsLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpLGwuYXBwZW5kQ2hpbGQodCksdH0sdS5yZW1vdmU9ZnVuY3Rpb24oKXtzKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwibnByb2dyZXNzLWJ1c3kiKSxzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYy5wYXJlbnQpLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpO3ZhciBuPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKTtuJiZhKG4pfSx1LmlzUmVuZGVyZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKX0sdS5nZXRQb3NpdGlvbmluZ0NTUz1mdW5jdGlvbigpe3ZhciBuPWRvY3VtZW50LmJvZHkuc3R5bGUsZT0iV2Via2l0VHJhbnNmb3JtImluIG4/IldlYmtpdCI6Ik1velRyYW5zZm9ybSJpbiBuPyJNb3oiOiJtc1RyYW5zZm9ybSJpbiBuPyJtcyI6Ik9UcmFuc2Zvcm0iaW4gbj8iTyI6IiI7cmV0dXJuIGUrIlBlcnNwZWN0aXZlImluIG4/InRyYW5zbGF0ZTNkIjplKyJUcmFuc2Zvcm0iaW4gbj8idHJhbnNsYXRlIjoibWFyZ2luIn07dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7dmFyIHQ9ZS5zaGlmdCgpO3QmJnQobil9dmFyIGU9W107cmV0dXJuIGZ1bmN0aW9uKHQpe2UucHVzaCh0KSwxPT1lLmxlbmd0aCYmbigpfX0oKSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuKXtyZXR1cm4gbi5yZXBsYWNlKC9eLW1zLS8sIm1zLSIpLnJlcGxhY2UoLy0oW1xkYS16XSkvZ2ksZnVuY3Rpb24obixlKXtyZXR1cm4gZS50b1VwcGVyQ2FzZSgpfSl9ZnVuY3Rpb24gZShuKXt2YXIgZT1kb2N1bWVudC5ib2R5LnN0eWxlO2lmKG4gaW4gZSlyZXR1cm4gbjtmb3IodmFyIHQscj1pLmxlbmd0aCxzPW4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKTtyLS07KWlmKHQ9aVtyXStzLHQgaW4gZSlyZXR1cm4gdDtyZXR1cm4gbn1mdW5jdGlvbiB0KHQpe3JldHVybiB0PW4odCksc1t0XXx8KHNbdF09ZSh0KSl9ZnVuY3Rpb24gcihuLGUscil7ZT10KGUpLG4uc3R5bGVbZV09cn12YXIgaT1bIldlYmtpdCIsIk8iLCJNb3oiLCJtcyJdLHM9e307cmV0dXJuIGZ1bmN0aW9uKG4sZSl7dmFyIHQsaSxzPWFyZ3VtZW50cztpZigyPT1zLmxlbmd0aClmb3IodCBpbiBlKWk9ZVt0XSx2b2lkIDAhPT1pJiZlLmhhc093blByb3BlcnR5KHQpJiZyKG4sdCxpKTtlbHNlIHIobixzWzFdLHNbMl0pfX0oKTtyZXR1cm4gdX0pOw=="},{"meta":{"name":"clipboard.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/clipboard.js/2.0.10/clipboard.min.js","ts":1653920365201,"mimetype":"text/javascript"},"source":""}]},{"name":"全网VIP视频免费破解去广告，支持电视剧免跳出选集、全网音乐直接下载、知乎视频下载、必应壁纸下载等多合一纯净脚本","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*://*.youku.com/v_*","*://*.iqiyi.com/v_*","*://*.iqiyi.com/w_*","*://*.iqiyi.com/a_*","*://*.le.com/ptv/vplay/*","*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://*.tudou.com/listplay/*","*://*.tudou.com/albumplay/*","*://*.tudou.com/programs/view/*","*://*.mgtv.com/b/*","*://film.sohu.com/album/*","*://tv.sohu.com/v/*","*://*.bilibili.com/anime/*","*://*.bilibili.com/bangumi/play/*","*://*.baofeng.com/play/*.","*://vip.pptv.com/show/*","*://v.pptv.com/show/*","*://showxi.xyz/mov/*","*music.163.com*","*://y.qq.com*","*://www.kugou.com*","*://www.kuwo.cn*","*://www.lizhi.fm*","*://*.ximalaya.com*","*://music.migu.cn*","*://cn.bing.com/","*://cn.bing.com/?FORM=*","*://www.zhihu.com/*","*://www.zhihu.com/*","https://v.vzuu.com/video/*","https://video.zhihu.com/video/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1625035392191,"data":{"episodeObj":"o{\"websiteTitle\":\"qq\",\"episodeList\":[],\"originVideoUrl\":\"https://v.qq.com/x/cover/0sdnyl7h86atoyt.html\"}"}},"enabled":false,"position":10,"file_url":"https://greasyfork.org/scripts/390952-%E5%85%A8%E7%BD%91vip%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A-%E6%94%AF%E6%8C%81%E7%94%B5%E8%A7%86%E5%89%A7%E5%85%8D%E8%B7%B3%E5%87%BA%E9%80%89%E9%9B%86-%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD-%E7%9F%A5%E4%B9%8E%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD-%E5%BF%85%E5%BA%94%E5%A3%81%E7%BA%B8%E4%B8%8B%E8%BD%BD%E7%AD%89%E5%A4%9A%E5%90%88%E4%B8%80%E7%BA%AF%E5%87%80%E8%84%9A%E6%9C%AC/code/%E5%85%A8%E7%BD%91VIP%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A%EF%BC%8C%E6%94%AF%E6%8C%81%E7%94%B5%E8%A7%86%E5%89%A7%E5%85%8D%E8%B7%B3%E5%87%BA%E9%80%89%E9%9B%86%E3%80%81%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E3%80%81%E7%9F%A5%E4%B9%8E%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E3%80%81%E5%BF%85%E5%BA%94%E5%A3%81%E7%BA%B8%E4%B8%8B%E8%BD%BD%E7%AD%89%E5%A4%9A%E5%90%88%E4%B8%80%E7%BA%AF%E5%87%80%E8%84%9A%E6%9C%AC.user.js","uuid":"50bd6cbc-3651-4407-a8df-3268cf257cca","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js","ts":1625035392189,"mimetype":"text/javascript"},"source":""}]},{"name":"百度网盘简易下载助手（直链下载复活版）","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["localhost","127.0.0.1","yyxxs.cn","softxm.cn","softxm.vip","42.193.51.61","119.28.33.23","119.28.139.214","49.234.47.193","82.156.65.179","42.193.127.85","81.70.253.99","49.232.252.126","82.156.15.149","59.110.224.13","59.110.225.22","59.110.226.3","baidu.com"],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/*","*://yun.baidu.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1652943618515,"data":{"softxm_storageName_common_start":"n1627463379405","softxm_storageName_last_code":"s8876","softxm_storageName_last_jsonRpc":"shttp://localhost:6800/jsonrpc","softxm_storageName_last_mine":"s","softxm_storageName_last_savePath":"sD:\\__easyHelper__","softxm_storageName_last_token":"s"}},"enabled":true,"position":11,"file_url":"https://greasyfork.org/scripts/418182-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%AE%80%E6%98%93%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B-%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%A4%8D%E6%B4%BB%E7%89%88/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%AE%80%E6%98%93%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B%EF%BC%88%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%A4%8D%E6%B4%BB%E7%89%88%EF%BC%89.user.js","uuid":"6c271fad-4174-48e0-bcb0-fcad5fd4981a","source":"","requires":[{"meta":{"name":"jquery.js","url":"https://lib.baomitu.com/jquery/3.6.0/jquery.js","ts":1655036573144,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"sweetalert.min.js","url":"https://lib.baomitu.com/sweetalert/2.1.2/sweetalert.min.js","ts":1655036573136,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"clipboard.min.js","url":"https://lib.baomitu.com/clipboard.js/2.0.6/clipboard.min.js","ts":1655036573136,"mimetype":"text/javascript"},"source":""}]},{"name":"百度文库转 Word | 百度文库下载器","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://wenku.baidu.com/view*","*://wenku.baidu.com/link*","*://wenku.baidu.com/share*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1638867309864,"data":{}},"enabled":true,"position":12,"file_url":"https://greasyfork.org/scripts/405373-%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E8%BD%AC-word-%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E4%B8%8B%E8%BD%BD%E5%99%A8/code/%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E8%BD%AC%20Word%20%7C%20%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E4%B8%8B%E8%BD%BD%E5%99%A8.user.js","uuid":"abe77eb4-dd5d-4937-9437-a3ec6b075070","source":"","requires":[{"meta":{"name":"jquery.js","url":"https://cdn.bootcss.com/jquery/2.2.4/jquery.js","ts":1647418513139,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"FileSaver(html5).js","url":"https://greasyfork.org/scripts/405376-filesaver-html5/code/FileSaver(html5).js?version=816426","ts":1647418518154,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"Everything-Hook.js","url":"https://greasyfork.org/scripts/372672-everything-hook/code/Everything-Hook.js?version=784972","ts":1647418518149,"mimetype":"text/javascript"},"source":""}]},{"name":"bilibili视频下载","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://www.bilibili.com/video/av*","*://www.bilibili.com/video/BV*","*://www.bilibili.com/medialist/play/*","*://www.bilibili.com/bangumi/play/ep*","*://www.bilibili.com/bangumi/play/ss*","*://www.bilibili.com/cheese/play/ep*","*://www.bilibili.com/cheese/play/ss*","https://www.mcbbs.net/template/mcbbs/image/special_photo_bg.png*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1648737883779,"data":{}},"enabled":true,"position":13,"file_url":"https://greasyfork.org/scripts/413228-bilibili%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD/code/bilibili%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD.user.js","uuid":"c61dc843-caed-4944-b70d-dfa783c8b1f4","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://static.hdslb.com/js/jquery.min.js","ts":1654686415651,"mimetype":"text/javascript"},"source":""}]},{"name":"解锁B站大会员番剧、B站视频解析下载；全网VIP视频免费破解去广告；全网音乐直接下载；油管、Facebook等国外视频解析下载；网盘搜索引擎破解无限下载等","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_prototypes":false,"compat_powerful_this":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":["*://*.youku.com/v_*","*://*.iqiyi.com/v_*","*://*.iqiyi.com/w_*","*://*.iqiyi.com/a_*","*://*.le.com/ptv/vplay/*","*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://v.qq.com/tv/*","*://*.tudou.com/listplay/*","*://*.tudou.com/albumplay/*","*://*.tudou.com/programs/view/*","*://*.mgtv.com/b/*","*://film.sohu.com/album/*","*://tv.sohu.com/v/*","*://*.baofeng.com/play/*","*://vip.pptv.com/show/*","*://v.pptv.com/show/*","*://www.le.com/ptv/vplay/*","*://www.wasu.cn/Play/show/*","*://*.1905.com/video/*","*://*.1905.com/play/*","*://*.1905.com/*/play/*","*://www.miguvideo.com/mgs/*","*://m.v.qq.com/x/cover/*","*://m.v.qq.com/x/page/*","*://m.v.qq.com/*","*://m.iqiyi.com/v_*","*://m.iqiyi.com/w_*","*://m.iqiyi.com/a_*","*://m.youku.com/alipay_video/*","*://https://m.youku.com/video/id_*","*://m.mgtv.com/b/*","*://m.tv.sohu.com/v/*","*://m.film.sohu.com/album/*","*://m.le.com/ptv/vplay/*","*://m.pptv.com/show/*","*://m.acfun.cn/v/*","*://m.bilibili.com/video/*","*://m.bilibili.com/anime/*","*://m.bilibili.com/bangumi/play/*","*://m.wasu.cn/Play/show/*","*://www.youtube.com","*://www.youtube.com/","*://www.youtube.com/watch*","*://www.facebook.com/*","*://yt1s.com/facebook-downloader","*music.163.com*","*://y.qq.com*","*://www.kugou.com*","*://www.kuwo.cn*","*://www.lizhi.fm*","*://*.ximalaya.com*","*://music.migu.cn*","*://*.taobao.com/*","*://*detail.tmall.com/*","*://*detail.tmall.hk/*","*://*item.jd.com/*","*://item.yiyaojd.com/*","*://npcitem.jd.hk/*","*://www.laisoyixia.com/download/detail**","*://www.xiaozhukuaipan.com/download/**","*://www.baidu.com/*","*://www.so.com/s*","*://www.sogou.com/web*","*://cn.bing.com/search*","*://so.toutiao.com/search*","*://www.bilibili.com/**","*://search.bilibili.com/**","*://space.bilibili.com/**","*://*.zhihu.com/*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":["tt.shuqiandiqiu.com","api.bilibili.com","api.staticj.top","cdn.jsdelivr.net"],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"ts":1655778604497,"data":{"bilibili_video_record":"sBV1xQ4y1X7y7"}},"enabled":true,"position":14,"file_url":"https://greasyfork.org/scripts/418804-%E8%A7%A3%E9%94%81b%E7%AB%99%E5%A4%A7%E4%BC%9A%E5%91%98%E7%95%AA%E5%89%A7-b%E7%AB%99%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E4%B8%8B%E8%BD%BD-%E5%85%A8%E7%BD%91vip%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A-%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD-%E6%B2%B9%E7%AE%A1-facebook%E7%AD%89%E5%9B%BD%E5%A4%96%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E4%B8%8B%E8%BD%BD-%E7%BD%91%E7%9B%98%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%A0%B4%E8%A7%A3%E6%97%A0%E9%99%90%E4%B8%8B%E8%BD%BD%E7%AD%89/code/%E8%A7%A3%E9%94%81B%E7%AB%99%E5%A4%A7%E4%BC%9A%E5%91%98%E7%95%AA%E5%89%A7%E3%80%81B%E7%AB%99%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E4%B8%8B%E8%BD%BD%EF%BC%9B%E5%85%A8%E7%BD%91VIP%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A%EF%BC%9B%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%EF%BC%9B%E6%B2%B9%E7%AE%A1%E3%80%81Facebook%E7%AD%89%E5%9B%BD%E5%A4%96%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E4%B8%8B%E8%BD%BD%EF%BC%9B%E7%BD%91%E7%9B%98%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%A0%B4%E8%A7%A3%E6%97%A0%E9%99%90%E4%B8%8B%E8%BD%BD%E7%AD%89.user.js","uuid":"405d4ee9-8494-43b0-8f2a-0add2fa0dd8d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICAgIOino+mUgULnq5nlpKfkvJrlkZjnlarliafjgIFC56uZ6KeG6aKR6Kej5p6Q5LiL6L2977yb5YWo572RVklQ6KeG6aKR5YWN6LS556C06Kej5Y675bm/5ZGK77yb5YWo572R6Z+z5LmQ55u05o6l5LiL6L2977yb5rK5566h44CBRmFjZWJvb2vnrYnlm73lpJbop4bpopHop6PmnpDkuIvovb3vvJvnvZHnm5jmkJzntKLlvJXmk47noLTop6Pml6DpmZDkuIvovb3nrYkKLy8gQG5hbWVzcGFjZSAgICAgICAgIHN1cGVyX3ZpZGVvX2hlbHBlcl9jYXQKLy8gQHZlcnNpb24gICAgICAgICAgIDQuMC4zCi8vIEBkZXNjcmlwdGlvbiAgICAgICDjgJDinaTvuI8g6KeG6aKR6Kej5p6Q77yM5L2T5Lya5oul5pyJVklQ55qE5oSf6KeJ4p2k77iP77yM6YCC6YWNUEMr56e75YqoIOOAkeWKn+iDveaciSjlj6/pgInmi6nmgKfmiZPlvIAp77yaMeOAgULnq5nkvb/nlKjliqnmiYvvvJrop6PplIFC56uZ5aSn5Lya5ZGY55Wq5Ymn44CB6KeG6aKR6Kej5p6Q5LiL6L29KOWPr+WkmlDkuIvovb0p44CB5rWP6KeI6K6w5b2V562J77ybMuOAgeefpeS5juS9v+eUqOWKqeaJi++8muWGheWuueenjeexu+agh+ivhuOAgemXruetlOaYvuekuuS8mOWMluOAgeinhumikeS4i+i9veetie+8mzPjgIHlhajnvZFWSVDop4bpopHop6PmnpDvvJrniLHlpYfoibrjgIHohb7orq/jgIHkvJjphbfjgIHoipLmnpznrYnop4bpopHlhY3otLnnoLTop6Mo5pSv5oyB6Ieq5a6a5LmJ6Kej5p6Q5o6l5Y+jKe+8mzTjgIHlhajnvZFWSVDpn7PkuZDop6PmnpDvvJrnvZHmmJPkupHpn7PkuZDjgIFRUemfs+S5kOOAgemFt+eLl+OAgeiNlOaenUZN44CB5Zac6ams5ouJ6ZuF562J5YWN5a6i5oi356uv5LiL6L2977ybNeOAgeayueeuoeOAgUZhY2Vib29r562J5Zu95aSW6KeG6aKR6Kej5p6Q5LiL6L2977ybNuOAgee9keebmOaQnOe0ouW8leaTjijmnaXmkJzkuIDkuIs6bGFpc295aXhpYS5jb20sIOWwj+eMquW/q+ebmDp4aWFvemh1a3VhaXBhbi5jb20p56C06Kej5peg6ZmQ5LiL6L2977ybN+OAgeS8mOaDoOWIuOafpeivouetie+8mzjjgIHmkJzntKLlvJXmk47lr7zoiKrjgJDohJrmnKzplb/mnJ/nu7TmiqTmm7TmlrDvvIzlrozlhajlhY3otLnvvIzml6Dlub/lkYrjgJEKLy8gQGF1dGhvciAgICAgICAgICAgIOeIseeUu+eUu+eahOeMqyzlsI/oib7nibkKLy8gQGljb24gICAgICAgICAgICAgIGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUNTMGxFUVZSWVI4V1h6Mm9UVVJUR3YzTW5wcWhOS3kxVVdteFJUR2RhaUxTUVJLa0tJb0s0RlZyUlBvSHU3Qk1ZbjBCMytnUXF1dWl1aUM2a2FGVnNBaEdFWmtLcUcvK1ZydHAwWVdzeVIyN0tsRXd6MHhublQzTGd3akIzN3ZsKzk3dHp6OXdoZERpb3cvcHdCQ2pvZk4wQUpvaHdLUWdrTXhZRjhEbXQwYnhkbmhhQVFvV1RYTWN6RU5KQmhGdkdNZ3FrNEdZNlNaWG1QZ3ZBbXkvY25ZaWpHcXJ3dm1UVkhTUXVwMmpMdkcwQnlKZjVFWURiVVFJQWVKeFI2VTRMUUhHVjFWb2Rlc1RpamZReEJkcmthU3JMNnowSGxzdDhpNEFuN1FCZ1lEYXIwbE1yZ000NUl0eHJDd0RqZmxham5DK0F0UjhHdm44ekdwejl4d1ZPam9yL1ptYS9BTnQvR0lzTE5XeHQ4cDdvNElpQW1sTFFQK0M5cHZrRytGb3lVUHhZczUyeGhGRFBLSWgzdVJ2aUcyQ2xXSWRzVHBIb0pZeW1GTmRsaVF6QUJCc2FFWmc0cCtEd1VmdGxpUnhBZ2d3T0MweGRpZG1hMVJhQUk5MkVhOU9IT2djd1BxbEFOcnVJMUFFbGhzYTJkQktYUUpFQm5EZ2xHbHZ4V04vQk5jRTNnS3lDUzY5YjY0QVVsTUlTd0V2NEJwREozNzc4aS9YZnU1WFF0RnRhTHErOVJpQ0E2Z1pqL2RjdVFOOEF1ZG9kNmt2b2RZWnV6OWs3VU9LN0pQREFiWEFZL1d4Z0xqdEdEeTJmNDA4VlBpOE1MSVVoNEpiREVMaHdOa252TFFEeVFOb1RoODdBa0Z1Q0lQMEUvTnpjZ1dZZVRDMGJkcmtOcDZMbTliYzRZTTRxci9OekVHYUN6Tkp4TE9ORlJxTWJ6ZjIySlN1L3dsY3BoaHd6cHNJQUljSUhyaUdYR2FkWCsvTWRXRFBmbFRqUnhjSCtrTFlKaFl0ajVQaXo0LzBnRjRZVk5qazZEdkFQRGIwYU1FcjgvbkVBQUFBQVNVVk9SSzVDWUlJPQovLyBAaW5jbHVkZSAgICAgICAgICAgKjovLyoueW91a3UuY29tL3ZfKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovLyouaXFpeWkuY29tL3ZfKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovLyouaXFpeWkuY29tL3dfKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovLyouaXFpeWkuY29tL2FfKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovLyoubGUuY29tL3B0di92cGxheS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vdi5xcS5jb20veC9jb3Zlci8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vdi5xcS5jb20veC9wYWdlLyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly92LnFxLmNvbS90di8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vKi50dWRvdS5jb20vbGlzdHBsYXkvKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovLyoudHVkb3UuY29tL2FsYnVtcGxheS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vKi50dWRvdS5jb20vcHJvZ3JhbXMvdmlldy8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vKi5tZ3R2LmNvbS9iLyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly9maWxtLnNvaHUuY29tL2FsYnVtLyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly90di5zb2h1LmNvbS92LyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly8qLmJhb2ZlbmcuY29tL3BsYXkvKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovL3ZpcC5wcHR2LmNvbS9zaG93LyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly92LnBwdHYuY29tL3Nob3cvKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovL3d3dy5sZS5jb20vcHR2L3ZwbGF5LyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly93d3cud2FzdS5jbi9QbGF5L3Nob3cvKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovLyouMTkwNS5jb20vdmlkZW8vKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovLyouMTkwNS5jb20vcGxheS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vKi4xOTA1LmNvbS8qL3BsYXkvKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovL3d3dy5taWd1dmlkZW8uY29tL21ncy8qCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS52LnFxLmNvbS94L2NvdmVyLyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly9tLnYucXEuY29tL3gvcGFnZS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS52LnFxLmNvbS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS5pcWl5aS5jb20vdl8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS5pcWl5aS5jb20vd18qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS5pcWl5aS5jb20vYV8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS55b3VrdS5jb20vYWxpcGF5X3ZpZGVvLyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly9odHRwczovL20ueW91a3UuY29tL3ZpZGVvL2lkXyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly9tLm1ndHYuY29tL2IvKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovL20udHYuc29odS5jb20vdi8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS5maWxtLnNvaHUuY29tL2FsYnVtLyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly9tLmxlLmNvbS9wdHYvdnBsYXkvKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovL20ucHB0di5jb20vc2hvdy8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS5hY2Z1bi5jbi92LyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly9tLmJpbGliaWxpLmNvbS92aWRlby8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS5iaWxpYmlsaS5jb20vYW5pbWUvKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovL20uYmlsaWJpbGkuY29tL2Jhbmd1bWkvcGxheS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbS53YXN1LmNuL1BsYXkvc2hvdy8qCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vd3d3LnlvdXR1YmUuY29tCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vd3d3LnlvdXR1YmUuY29tLwovLyBAaW5jbHVkZSAgICAgICAgICAgKjovL3d3dy55b3V0dWJlLmNvbS93YXRjaCoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly93d3cuZmFjZWJvb2suY29tLyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly95dDFzLmNvbS9mYWNlYm9vay1kb3dubG9hZGVyCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIEBpbmNsdWRlICAgICAgCSAgKm11c2ljLjE2My5jb20qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8veS5xcS5jb20qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vd3d3Lmt1Z291LmNvbSoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly93d3cua3V3by5jbioKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly93d3cubGl6aGkuZm0qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vKi54aW1hbGF5YS5jb20qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbXVzaWMubWlndS5jbioKLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly8qLnRhb2Jhby5jb20vKgovLyBAaW5jbHVkZSAgICAgIAkgICo6Ly8qZGV0YWlsLnRtYWxsLmNvbS8qCi8vIEBpbmNsdWRlICAgICAgCSAgKjovLypkZXRhaWwudG1hbGwuaGsvKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovLyppdGVtLmpkLmNvbS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vaXRlbS55aXlhb2pkLmNvbS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vbnBjaXRlbS5qZC5oay8qCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vd3d3LmxhaXNveWl4aWEuY29tL2Rvd25sb2FkL2RldGFpbCoqCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vd3d3LnhpYW96aHVrdWFpcGFuLmNvbS9kb3dubG9hZC8qKgovLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly93d3cuYmFpZHUuY29tLyoKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly93d3cuc28uY29tL3MqCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vd3d3LnNvZ291LmNvbS93ZWIqCi8vIEBpbmNsdWRlICAgICAgICAgICAqOi8vY24uYmluZy5jb20vc2VhcmNoKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovL3NvLnRvdXRpYW8uY29tL3NlYXJjaCoKLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIEBpbmNsdWRlCSAgIAkgICAgICAqOi8vd3d3LmJpbGliaWxpLmNvbS8qKgovLyBAaW5jbHVkZSAgICAgICAgICAgKjovL3NlYXJjaC5iaWxpYmlsaS5jb20vKioKLy8gQGluY2x1ZGUgICAgICAgICAgICo6Ly9zcGFjZS5iaWxpYmlsaS5jb20vKioKLy8gQGluY2x1ZGUgICAgICAJICAqOi8vKi56aGlodS5jb20vKgovLyBAcmVxdWlyZSAgICAgICAgICAgaHR0cHM6Ly9sZjI2LWNkbi10b3MuYnl0ZWNkbnRwLmNvbS9jZG4vZXhwaXJlLTEtTS9qcXVlcnkvMy4yLjEvanF1ZXJ5Lm1pbi5qcwovLyBAY29ubmVjdAkJCSAgdHQuc2h1cWlhbmRpcWl1LmNvbQovLyBAY29ubmVjdCAgICAgICAgICAgYXBpLmJpbGliaWxpLmNvbQovLyBAY29ubmVjdCAgICAgICAgICAgYXBpLnN0YXRpY2oudG9wCi8vIEBjb25uZWN0ICAgICAgICAgICBjZG4uanNkZWxpdnIubmV0Ci8vIEBncmFudCAgICAgICAgICAgICB1bnNhZmVXaW5kb3cKLy8gQGdyYW50ICAgICAgICAgICAgIEdNX29wZW5JblRhYgovLyBAZ3JhbnQgICAgICAgICAgICAgR00ub3BlbkluVGFiCi8vIEBncmFudCAgICAgICAgICAgICBHTV9nZXRWYWx1ZQovLyBAZ3JhbnQgICAgICAgICAgICAgR00uZ2V0VmFsdWUKLy8gQGdyYW50ICAgICAgICAgICAgIEdNX3NldFZhbHVlCi8vIEBncmFudCAgICAgICAgICAgICBHTS5zZXRWYWx1ZQovLyBAZ3JhbnQgICAgICAgICAgICAgR01feG1saHR0cFJlcXVlc3QKLy8gQGdyYW50ICAgICAgICAgICAgIEdNLnhtbEh0dHBSZXF1ZXN0Ci8vIEBncmFudCAgICAgICAgICAgICBHTV9yZWdpc3Rlck1lbnVDb21tYW5kCi8vIEBsaWNlbnNlICAgICAgICAgICBBR1BMIExpY2Vuc2UKLy8gQGNoYXJzZXQJCSAgICAgIFVURi04Ci8vIEBhbnRpZmVhdHVyZSAgCSAgcmVmZXJyYWwtbGluayDjgJDmraTmj5DnpLrkuLpHcmVhc3lGb3Jr5Luj56CB6KeE6IyD6KaB5rGC5ZCr5pyJ5p+l5Yi45Yqf6IO955qE6ISa5pys5b+F6aG75re75Yqg77yM5a6e6ZmF5L2/55So5peg5Lu75L2V5by65Yi26Lez6L2s77yM5Luj56CB5Y+v5p+l77yM6K+355+l5oKJ44CRCi8vIEBvcmlnaW5hbC1hdXRob3IgICDmqZjlrZDniLHlk60KLy8gQG9yaWdpbmFsLWxpY2Vuc2UgIEFHUEwgTGljZW5zZQovLyBAb3JpZ2luYWwtc2NyaXB0ICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzM5MDk1MgovLyBAcnVuLWF0ICAgICAgICAgICAgZG9jdW1lbnQtaWRsZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbiAoKSB7CgkndXNlIHN0cmljdCc7CgkKCWlmKHdpbmRvdy50b3AgIT0gd2luZG93LnNlbGYpewoJCXJldHVybjsKCX0KCQoJLy/lhbHmnInmlrnms5XvvIzlhajlsYDlhbHkuqsKCWZ1bmN0aW9uIGNvbW1vbkZ1bmN0aW9uKCl7CgkJdGhpcy5HTWdldFZhbHVlID0gZnVuY3Rpb24gKG5hbWUsIHZhbHVlPW51bGwpIHsKCQkJbGV0IHN0b3JhZ2VWYWx1ZSA9IHZhbHVlOwoJCQlpZiAodHlwZW9mIEdNX2dldFZhbHVlID09PSAiZnVuY3Rpb24iKSB7CgkJCQlzdG9yYWdlVmFsdWUgPSBHTV9nZXRWYWx1ZShuYW1lLCB2YWx1ZSk7CgkJCX0gZWxzZSBpZih0eXBlb2YgR00uc2V0VmFsdWUgPT09ICJmdW5jdGlvbiIpewoJCQkJc3RvcmFnZVZhbHVlID0gR00uZ2V0VmFsdWUobmFtZSwgdmFsdWUpOwoJCQl9ZWxzZXsKCQkJCXZhciBhcnIgPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0obmFtZSk7CgkJCQlpZihhcnIgIT0gbnVsbCl7CgkJCQkJc3RvcmFnZVZhbHVlID0gYXJyCgkJCQl9CgkJCX0KCQkJcmV0dXJuIHN0b3JhZ2VWYWx1ZTsKCQl9OwoJCXRoaXMuR01zZXRWYWx1ZSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKXsKCQkJaWYgKHR5cGVvZiBHTV9zZXRWYWx1ZSA9PT0gImZ1bmN0aW9uIikgewoJCQkJR01fc2V0VmFsdWUobmFtZSwgdmFsdWUpOwoJCQl9IGVsc2UgaWYodHlwZW9mIEdNLnNldFZhbHVlID09PSAiZnVuY3Rpb24iKXsKCQkJCUdNLnNldFZhbHVlKG5hbWUsIHZhbHVlKTsKCQkJfWVsc2V7CgkJCQl3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0obmFtZSwgdmFsdWUpCgkJCX0KCQl9OwoJCXRoaXMuR01hZGRTdHlsZSA9IGZ1bmN0aW9uKGNzcyl7CgkJCXZhciBteVN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTsKCQkJbXlTdHlsZS50ZXh0Q29udGVudCA9IGNzczsKCQkJdmFyIGRvYyA9IGRvY3VtZW50LmhlYWQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwoJCQlkb2MuYXBwZW5kQ2hpbGQobXlTdHlsZSk7CgkJfTsKCQl0aGlzLkdNb3BlbkluVGFiID0gZnVuY3Rpb24odXJsLCBvcGVuX2luX2JhY2tncm91bmQpewoJCQlpZiAodHlwZW9mIEdNX29wZW5JblRhYiA9PT0gImZ1bmN0aW9uIikgewoJCQkJR01fb3BlbkluVGFiKHVybCwgb3Blbl9pbl9iYWNrZ3JvdW5kKTsKCQkJfSBlbHNlIHsKCQkJCUdNLm9wZW5JblRhYih1cmwsIG9wZW5faW5fYmFja2dyb3VuZCk7CgkJCX0KCQl9OwoJCXRoaXMuYWRkU2NyaXB0ID0gZnVuY3Rpb24odXJsKXsKCQkJdmFyIHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTsKCQkJcy5zZXRBdHRyaWJ1dGUoJ3NyYycsdXJsKTsKCQkJZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzKTsKCQl9OwoJCXRoaXMucmFuZG9tTnVtYmVyID0gZnVuY3Rpb24oKXsKCQkJcmV0dXJuIE1hdGguY2VpbChNYXRoLnJhbmRvbSgpKjEwMDAwMDAwMCk7CgkJfTsKCQl0aGlzLnJlcXVlc3QgPSBmdW5jdGlvbihtb3RoZWQsIHVybCwgcGFyYW0peyAgIC8v572R57uc6K+35rGCCgkJCXJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpewoJCQkJR01feG1saHR0cFJlcXVlc3QoewoJCQkJCXVybDogdXJsLAoJCQkJCW1ldGhvZDogbW90aGVkLAoJCQkJCWRhdGE6cGFyYW0sCgkJCQkJb25sb2FkOiBmdW5jdGlvbihyZXNwb25zZSkgewoJCQkJCQl2YXIgc3RhdHVzID0gcmVzcG9uc2Uuc3RhdHVzOwoJCQkJCQl2YXIgcGxheXVybCA9ICIiOwoJCQkJCQlpZihzdGF0dXM9PTIwMHx8c3RhdHVzPT0nMjAwJyl7CgkJCQkJCQl2YXIgcmVzcG9uc2VUZXh0ID0gcmVzcG9uc2UucmVzcG9uc2VUZXh0OwoJCQkJCQkJcmVzb2x2ZSh7InJlc3VsdCI6InN1Y2Nlc3MiLCAiZGF0YSI6cmVzcG9uc2VUZXh0fSk7CgkJCQkJCX1lbHNlewoJCQkJCQkJcmVqZWN0KHsicmVzdWx0IjoiZXJyb3IiLCAiZGF0YSI6bnVsbH0pOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSk7CgkJCX0pCgkJfTsKCQl0aGlzLmFkZENvbW1vbkh0bWxDc3MgPSBmdW5jdGlvbigpewoJCQl2YXIgY3NzVGV4dCA9IAoJCQkJYAoJCQkJQGtleWZyYW1lcyBmYWRlSW4gewoJCQkJICAgIDAlICAgIHtvcGFjaXR5OiAwfQoJCQkJICAgIDEwMCUgIHtvcGFjaXR5OiAxfQoJCQkJfQoJCQkJQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVJbiB7CgkJCQkgICAgMCUgICAge29wYWNpdHk6IDB9CgkJCQkgICAgMTAwJSAge29wYWNpdHk6IDF9CgkJCQl9CgkJCQlALW1vei1rZXlmcmFtZXMgZmFkZUluIHsKCQkJCSAgICAwJSAgICB7b3BhY2l0eTogMH0KCQkJCSAgICAxMDAlICB7b3BhY2l0eTogMX0KCQkJCX0KCQkJCUAtby1rZXlmcmFtZXMgZmFkZUluIHsKCQkJCSAgICAwJSAgICB7b3BhY2l0eTogMH0KCQkJCSAgICAxMDAlICB7b3BhY2l0eTogMX0KCQkJCX0KCQkJCUAtbXMta2V5ZnJhbWVzIGZhZGVJbiB7CgkJCQkgICAgMCUgICAge29wYWNpdHk6IDB9CgkJCQkgICAgMTAwJSAge29wYWNpdHk6IDF9CgkJCQl9CgkJCQlAa2V5ZnJhbWVzIGZhZGVPdXQgewoJCQkJICAgIDAlICAgIHtvcGFjaXR5OiAxfQoJCQkJICAgIDEwMCUgIHtvcGFjaXR5OiAwfQoJCQkJfQoJCQkJQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVPdXQgewoJCQkJICAgIDAlICAgIHtvcGFjaXR5OiAxfQoJCQkJICAgIDEwMCUgIHtvcGFjaXR5OiAwfQoJCQkJfQoJCQkJQC1tb3ota2V5ZnJhbWVzIGZhZGVPdXQgewoJCQkJICAgIDAlICAgIHtvcGFjaXR5OiAxfQoJCQkJICAgIDEwMCUgIHtvcGFjaXR5OiAwfQoJCQkJfQoJCQkJQC1vLWtleWZyYW1lcyBmYWRlT3V0IHsKCQkJCSAgICAwJSAgICB7b3BhY2l0eTogMX0KCQkJCSAgICAxMDAlICB7b3BhY2l0eTogMH0KCQkJCX0KCQkJCUAtbXMta2V5ZnJhbWVzIGZhZGVPdXQgewoJCQkJICAgIDAlICAgIHtvcGFjaXR5OiAxfQoJCQkJICAgIDEwMCUgIHtvcGFjaXR5OiAwfQoJCQkJfQoJCQkJLndlYi10b2FzdC1ra2xpOXsKCQkJCSAgICBwb3NpdGlvbjogZml4ZWQ7CgkJCQkgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjcpOwoJCQkJICAgIGNvbG9yOiAjZmZmOwoJCQkJICAgIGZvbnQtc2l6ZTogMTRweDsKCQkJCSAgICBsaW5lLWhlaWdodDogMTsKCQkJCSAgICBwYWRkaW5nOjEwcHg7CgkJCQkgICAgYm9yZGVyLXJhZGl1czogM3B4OwoJCQkJICAgIGxlZnQ6IDUwJTsKCQkJCSAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7CgkJCQkgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7CgkJCQkgICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7CgkJCQkgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOwoJCQkJICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7CgkJCQkgICAgei1pbmRleDogOTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OwoJCQkJICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7CgkJCQl9CgkJCQkuZmFkZU91dHsKCQkJCSAgICBhbmltYXRpb246IGZhZGVPdXQgLjVzOwoJCQkJfQoJCQkJLmZhZGVJbnsKCQkJCSAgICBhbmltYXRpb246ZmFkZUluIC41czsKCQkJCX0KCQkJCWA7CgkJCXRoaXMuR01hZGRTdHlsZShjc3NUZXh0KTsKCQl9OwoJCXRoaXMud2ViVG9hc3QgPSBmdW5jdGlvbihwYXJhbXMpIHsJLy/lsI/mj5DnpLrmoYYKCQkgICAgdmFyIHRpbWUgPSBwYXJhbXMudGltZTsKCQkgICAgdmFyIGJhY2tncm91bmQgPSBwYXJhbXMuYmFja2dyb3VuZDsKCQkgICAgdmFyIGNvbG9yID0gcGFyYW1zLmNvbG9yOwoJCSAgICB2YXIgcG9zaXRpb24gPSBwYXJhbXMucG9zaXRpb247ICAvL2NlbnRlci10b3AsIGNlbnRlci1ib3R0b20KCQkgICAgdmFyIGRlZmF1bHRNYXJnaW5WYWx1ZSA9IDUwOwoJCSAgICAKCQkgICAgaWYodGltZSA9PSB1bmRlZmluZWQgfHwgdGltZSA9PSAnJyl7CgkJICAgICAgICB0aW1lID0gMTUwMDsKCQkgICAgfQoJCSAgICAKCQkgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CgkJICAgIGVsLnNldEF0dHJpYnV0ZSgiY2xhc3MiLCAid2ViLXRvYXN0LWtrbGk5Iik7CgkJICAgIGVsLmlubmVySFRNTCA9IHBhcmFtcy5tZXNzYWdlOwoJCSAgICAvL+iDjOaZr+minOiJsgoJCSAgICBpZihiYWNrZ3JvdW5kIT11bmRlZmluZWQgJiYgYmFja2dyb3VuZCE9JycpewoJCSAgICAJZWwuc3R5bGUuYmFja2dyb3VuZENvbG9yPWJhY2tncm91bmQ7CgkJICAgIH0KCQkgICAgLy/lrZfkvZPpopzoibIKCQkgICAgaWYoY29sb3IhPXVuZGVmaW5lZCAmJiBjb2xvciE9JycpewoJCSAgICAJZWwuc3R5bGUuY29sb3I9Y29sb3I7CgkJICAgIH0KCQkgICAgCgkJICAgIC8v5pi+56S65L2N572uCgkJICAgIGlmKHBvc2l0aW9uPT11bmRlZmluZWQgfHwgcG9zaXRpb249PScnKXsKCQkgICAgCXBvc2l0aW9uID0gImNlbnRlci1ib3R0b20iOwoJCSAgICB9CgkJICAgIAoJCSAgICAvL+iuvue9ruaYvuekuuS9jee9ru+8jOW9k+WJjeacieenjeS4pOenjeW9ouW8jwoJCSAgICBpZihwb3NpdGlvbj09PSJjZW50ZXItYm90dG9tIil7CgkJICAgIAllbC5zdHlsZS5ib3R0b20gPSBkZWZhdWx0TWFyZ2luVmFsdWUrInB4IjsgCgkJICAgIH1lbHNlewoJCSAgICAJZWwuc3R5bGUudG9wID0gZGVmYXVsdE1hcmdpblZhbHVlKyJweCI7IAoJCSAgICB9CgkJCWVsLnN0eWxlLnpJbmRleD05OTk5OTk7CgkJICAgIAoJCSAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsKTsKCQkgICAgZWwuY2xhc3NMaXN0LmFkZCgiZmFkZUluIik7CgkJICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewoJCSAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSgiZmFkZUluIik7CgkJICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKCJmYWRlT3V0Iik7CgkJICAgICAgICAvKuebkeWQrOWKqOeUu+e7k+adn++8jOenu+mZpOaPkOekuuS/oeaBr+WFg+e0oCovCgkJICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCJhbmltYXRpb25lbmQiLCBmdW5jdGlvbiAoKSB7CgkJICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChlbCk7CgkJICAgICAgICB9KTsKCQkgICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoIndlYmtpdEFuaW1hdGlvbkVuZCIsIGZ1bmN0aW9uICgpIHsKCQkgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGVsKTsKCQkgICAgICAgIH0pOwoJCSAgICB9LCB0aW1lKTsKCQl9LAoJCXRoaXMucXVlcnlVcmxQYXJhbXRlciA9IGZ1bmN0aW9uKHRleHQsIHRhZykgeyAvL+afpeivokdFVOivt+axgnVybOS4reeahOWPguaVsAoJCQlpZih0ZXh0LmluZGV4T2YoIj8iKSE9LTEpeyAvL+mAieWPlj/lkI7pnaLnmoTlrZfnrKbkuLIs5YW85a65d2luZG93LmxvY2F0aW9uLnNlYXJjaO+8jOWJjemdoueahD/kuI3og73ljrvmjokKCQkJCXZhciB0ZXh0QXJyYXkgPSB0ZXh0LnNwbGl0KCI/Iik7CgkJCQl0ZXh0ID0gIj8iK3RleHRBcnJheVt0ZXh0QXJyYXkubGVuZ3RoLTFdOwoJCQl9CgkJCXZhciB0ID0gbmV3IFJlZ0V4cCgiKF58JikiICsgdGFnICsgIj0oW14mXSopKCZ8JCkiKTsKCQkJdmFyIGEgPSB0ZXh0LnN1YnN0cigxKS5tYXRjaCh0KTsKCQkJaWYgKGEgIT0gbnVsbCl7CgkJCQlyZXR1cm4gYVsyXTsKCQkJfQoJCQlyZXR1cm4gIiI7CgkJfTsKCQl0aGlzLmlzUEMgPSBmdW5jdGlvbigpewoJCQl2YXIgdXNlckFnZW50SW5mbyA9IG5hdmlnYXRvci51c2VyQWdlbnQ7CgkJCXZhciBBZ2VudHMgPSBbIkFuZHJvaWQiLCAiaVBob25lIiwiU3ltYmlhbk9TIiwgIldpbmRvd3MgUGhvbmUiLCAiaVBhZCIsICJpUG9kIl07CgkJCXZhciBmbGFnID0gdHJ1ZTsKCQkJZm9yICh2YXIgdiA9IDA7IHYgPCBBZ2VudHMubGVuZ3RoOyB2KyspIHsKCQkJCWlmICh1c2VyQWdlbnRJbmZvLmluZGV4T2YoQWdlbnRzW3ZdKSA+IDApIHsKCQkJCQlmbGFnID0gZmFsc2U7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCX0KCQkJcmV0dXJuIGZsYWc7CgkJfTsKCQl0aGlzLmdldEJpbGliaWxpQlY9ZnVuY3Rpb24oKXsKCQkJdmFyIHBhdGhuYW1lID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lOwoJCQl2YXIgYnYgPSBwYXRobmFtZS5yZXBsYWNlKCIvdmlkZW8vIiwiIikucmVwbGFjZSgiLyIsIiIpOwoJCQlyZXR1cm4gYnY7CgkJfQoJfQoJCgkvL+WFqOWxgOW8ueeql+WvueixoQoJY29uc3QgcG9wdXAgPSAoZnVuY3Rpb24oKXsKCSAgICBjbGFzcyBQb3B1cCB7CgkgICAgICAgIGNvbnN0cnVjdG9yKCkgewoJICAgICAgICAgICAgdGhpcy5tYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykKCSAgICAgICAgICAgIHRoaXMuc2V0U3R5bGUodGhpcy5tYXNrLCB7CgkgICAgICAgICAgICAgICAgIndpZHRoIjogJzEwMCUnLAoJICAgICAgICAgICAgICAgICJoZWlnaHQiOiAnMTAwJScsCgkgICAgICAgICAgICAgICAgImJhY2tncm91bmRDb2xvciI6ICdyZ2JhKDAsIDAsIDAsIC42KScsCgkgICAgICAgICAgICAgICAgInBvc2l0aW9uIjogJ2ZpeGVkJywKCSAgICAgICAgICAgICAgICAibGVmdCI6ICIwcHgiLAoJICAgICAgICAgICAgICAgICJ0b3AiOiAiMHB4IiwKCQkJCQkiYm90dG9tIjoiMHB4IiwKCQkJCQkicmlnaHQiOiIwcHgiLAoJCQkJCSJ6LWluZGV4IjoiOTk5OTkiCgkgICAgICAgICAgICB9KQoJICAgICAgICAgICAgLy8g5Yib5bu65Lit6Ze05pi+56S65YaF5a6555qE5rC05bmz5bm25Z6C55u05bGF5Lit55qEZGl2CgkgICAgICAgICAgICB0aGlzLmNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKQoJICAgICAgICAgICAgdGhpcy5zZXRTdHlsZSh0aGlzLmNvbnRlbnQsIHsKCSAgICAgICAgICAgICAgICAibWF4LXdpZHRoIjogJzQwMHB4JywKCQkJCQkid2lkdGgiOiIxMDAlIiwKCSAgICAgICAgICAgICAgICAibWF4LWhlaWdodCI6ICc2MDBweCcsCgkgICAgICAgICAgICAgICAgImJhY2tncm91bmRDb2xvciI6ICcjZmZmJywKCSAgICAgICAgICAgICAgICAiYm94U2hhZG93IjogJzAgMCAycHggIzk5OScsCgkgICAgICAgICAgICAgICAgInBvc2l0aW9uIjogJ2Fic29sdXRlJywKCSAgICAgICAgICAgICAgICAibGVmdCI6ICc1MCUnLAoJICAgICAgICAgICAgICAgICJ0b3AiOiAnNTAlJywKCSAgICAgICAgICAgICAgICAidHJhbnNmb3JtIjogJ3RyYW5zbGF0ZSgtNTAlLC01MCUpJywKCSAgICAgICAgICAgICAgICAiYm9yZGVyUmFkaXVzIjogJzNweCcKCSAgICAgICAgICAgIH0pCgkgICAgICAgICAgICAvLyDlsIbov5nkuKrlsI9kaXbmlL7lnKjpga7nvankuK0KCSAgICAgICAgICAgIHRoaXMubWFzay5hcHBlbmRDaGlsZCh0aGlzLmNvbnRlbnQpCgkgICAgICAgIH0KCSAgICAgICAgbWlkZGxlQm94KHBhcmFtKSB7CgkgICAgICAgICAgICAvLyDlhYjmuIXnqbrkuK3pl7TlsI9kaXbnmoTlhoXlrrkgLSDpmLLmraLosIPnlKjlpJrmrKHvvIzlh7rnjrDmt7fkubEKCSAgICAgICAgICAgIHRoaXMuY29udGVudC5pbm5lckhUTUwgPSAnJwoJICAgICAgICAgICAgbGV0IHRpdGxlID0gJ+m7mOiupOagh+mimOWGheWuuSc7CgkgICAgICAgICAgICAvLyDmo4DmtYvlj4LmlbDnsbvlnosKCSAgICAgICAgICAgIGlmKHt9LnRvU3RyaW5nLmNhbGwocGFyYW0pID09PSAnW29iamVjdCBTdHJpbmddJykgewoJICAgICAgICAgICAgICAgIHRpdGxlID0gcGFyYW0KCSAgICAgICAgICAgIH0gZWxzZSBpZih7fS50b1N0cmluZy5jYWxsKHBhcmFtKSA9PT0gJ1tvYmplY3QgT2JqZWN0XScpIHsKCSAgICAgICAgICAgICAgICB0aXRsZSA9IHBhcmFtLnRpdGxlCgkgICAgICAgICAgICB9CgkgICAgICAgICAgICAvLyDlsIbpga7nvanmlL7lnKhib2R55Lit5pi+56S6CgkgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMubWFzaykKCSAgICAgICAgICAgIC8vIOe7meS4remXtOeahOWwj2Rpduiuvue9rum7mOiupOeahOaOkueJiAoJICAgICAgICAgICAgLy8g5LiK6Z2i5qCH6aKY6YOo5YiGCgkgICAgICAgICAgICB0aGlzLnRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykKCSAgICAgICAgICAgIC8vIOiuvue9ruagt+W8jwoJICAgICAgICAgICAgdGhpcy5zZXRTdHlsZSh0aGlzLnRpdGxlLCB7CgkgICAgICAgICAgICAgICAgIndpZHRoIjogJzEwMCUnLAoJICAgICAgICAgICAgICAgICJoZWlnaHQiOiAnNDBweCcsCgkgICAgICAgICAgICAgICAgImxpbmVIZWlnaHQiOiAnNDBweCcsCgkgICAgICAgICAgICAgICAgImJveFNpemluZyI6ICdib3JkZXItYm94JywKCQkJCQkiYmFja2dyb3VuZC1jb2xvciI6IiNGRjRENDAiLAoJICAgICAgICAgICAgICAgICJjb2xvciI6ICcjRkZGJywKCQkJCQkidGV4dC1hbGlnbiI6ICdjZW50ZXInLAoJCQkJCSJmb250LXdlaWdodCI6IjcwMCIsCgkJCQkJImZvbnQtc2l6ZSI6IjE2cHgiCgkJCQkJCgkgICAgICAgICAgICB9KQoJICAgICAgICAgICAgLy8g6K6+572u6buY6K6k5qCH6aKY5YaF5a65CgkgICAgICAgICAgICB0aGlzLnRpdGxlLmlubmVyVGV4dCA9IHRpdGxlCgkgICAgICAgICAgICAvLyDlsIbmoIfpopjpg6jliIbmlL7lnKjkuK3pl7RkaXbkuK0KCSAgICAgICAgICAgIHRoaXMuY29udGVudC5hcHBlbmRDaGlsZCh0aGlzLnRpdGxlKQoJICAgICAgICAgICAgLy8g5YWz6Zet5oyJ6ZKuCgkgICAgICAgICAgICB0aGlzLmNsb3NlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykKCSAgICAgICAgICAgIC8vIOiuvue9ruWGheWuuQoJICAgICAgICAgICAgdGhpcy5jbG9zZUJ0bi5pbm5lclRleHQgPSAnw5cnCgkgICAgICAgICAgICAvLyDorr7nva7moLflvI8KCSAgICAgICAgICAgIHRoaXMuc2V0U3R5bGUodGhpcy5jbG9zZUJ0biwgewoJICAgICAgICAgICAgICAgICJ0ZXh0RGVjb3JhdGlvbiI6ICdub25lJywKCSAgICAgICAgICAgICAgICAiY29sb3IiOiAnIzY2NicsCgkgICAgICAgICAgICAgICAgInBvc2l0aW9uIjogJ2Fic29sdXRlJywKCSAgICAgICAgICAgICAgICAicmlnaHQiOiAnMTBweCcsCgkgICAgICAgICAgICAgICAgInRvcCI6ICcwcHgnLAoJICAgICAgICAgICAgICAgICJmb250U2l6ZSI6ICcyNXB4JywKCQkJCQkiY29sb3IiOiAnI0ZGRicsCgkJCQkJImRpc3BsYXkiOiJpbmxpbmUtYmxvY2siLAoJCQkJCSJjdXJzb3IiOiJwb2ludGVyIgoJICAgICAgICAgICAgfSkKCSAgICAgICAgICAgIC8vIOWwhuWFs+mXreaMiemSruaUvuWcqOS4remXtOWwj2RpduS4rQoJICAgICAgICAgICAgdGhpcy50aXRsZS5hcHBlbmRDaGlsZCh0aGlzLmNsb3NlQnRuKQoJCQkJdGhpcy5jbG9zZUJ0bi5vbmNsaWNrID0gKCkgPT4gdGhpcy5jbG9zZSgpCgkgICAgICAgIH0KCSAgICAgICAgLy8g5by55Ye65o+Q56S65qGGCgkgICAgICAgIGRpYWxvZyhwYXJhbSkgewoJICAgICAgICAgICAgdGhpcy5taWRkbGVCb3gocGFyYW0pOwoJCQkJdGhpcy5kaWFsb2dDb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykKCQkJCXRoaXMuc2V0U3R5bGUodGhpcy5kaWFsb2dDb250ZW50LHsKCQkJCQkicGFkZGluZyI6IjE1cHgiLAoJCQkJCSJtYXgtaGVpZ2h0IjoiNDAwcHgiCgkJCQl9KQoJCQkJdGhpcy5kaWFsb2dDb250ZW50LmlubmVySFRNTCA9IHBhcmFtLmNvbnRlbnQ7CgkJCQl0aGlzLmNvbnRlbnQuYXBwZW5kQ2hpbGQodGhpcy5kaWFsb2dDb250ZW50KQoJCQkJcGFyYW0ub25Db250ZW50UmVhZHkodGhpcyk7CgkgICAgICAgIH0KCSAgICAgICAgY2xvc2UoKSB7CgkgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMubWFzaykKCQkJCXdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKCSAgICAgICAgfQoJICAgICAgICBzZXRTdHlsZShlbGUsIHN0eWxlT2JqKSB7IC8vIOiuvue9ruagt+W8j+eahOWHveaVsAoJICAgICAgICAgICAgZm9yKGxldCBhdHRyIGluIHN0eWxlT2JqKXsKCSAgICAgICAgICAgICAgICBlbGUuc3R5bGVbYXR0cl0gPSBzdHlsZU9ialthdHRyXQoJICAgICAgICAgICAgfQoJICAgICAgICB9CgkgICAgfQoJICAgIGxldCBwb3B1cCA9IG51bGw7CgkgICAgcmV0dXJuIChmdW5jdGlvbigpIHsKCSAgICAgICAgaWYoIXBvcHVwKSB7CgkgICAgICAgICAgICBwb3B1cCA9IG5ldyBQb3B1cCgpCgkgICAgICAgIH0KCSAgICAgICAgcmV0dXJuIHBvcHVwOwoJICAgIH0pKCkKCX0pKCk7CgkKCS8v6Kej5p6Q5o6l5Y+j6YWN572uCgkvL3Nob3dUeXBlPTEo5LuFUEMpLCBzaG93VHlwZT0yKOS7hW1vYmlsZSksIHNob3dUeXBlPTMo5ZCM5pe25pi+56S6KQoJY29uc3Qgb3JpZ2luYWxJbnRlcmZhY2VMaXN0ID0gWwoJCXsibmFtZSI6Iue6r+WHgC9C56uZIiwidXJsIjoiaHR0cHM6Ly96MS5tMTkwNy5jbi8/ang9IiwgInNob3dUeXBlIjozfSwKCQl7Im5hbWUiOiLpq5jpgJ/mjqXlj6MiLCJ1cmwiOiJodHRwczovL2pzYXAuYXR0YWtpZHMuY29tLz91cmw9IiwgInNob3dUeXBlIjozfSwKCQl7Im5hbWUiOiLnu7zlkIgvQuermSIsInVybCI6Imh0dHBzOi8vdmlwLnBhcndpeC5jb206NDQzMy9wbGF5ZXIvP3VybD0iLCAic2hvd1R5cGUiOjN9LAoJCXsibmFtZSI6Ik9L6Kej5p6QIiwidXJsIjoiaHR0cHM6Ly9va2p4LmNjLz91cmw9IiwgInNob3dUeXBlIjozfSwKCQl7Im5hbWUiOiLlpJzluZUiLCJ1cmwiOiJodHRwczovL3d3dy55ZW11Lnh5ei8/dXJsPSIsICJzaG93VHlwZSI6M30sCgkJeyJuYW1lIjoi54ix6LGGIiwidXJsIjoiaHR0cHM6Ly9qeC5haWRvdWVyLm5ldC8/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoi6Jm+57GzIiwidXJsIjoiaHR0cHM6Ly9qeC54bWZsdi5jb20vP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6Ik0zVTguVFYiLCJ1cmwiOiJodHRwczovL2p4Lm0zdTgudHYvamlleGkvP3VybD0iLCAic2hvd1R5cGUiOjN9LAoJCXsibmFtZSI6IuS6uuS6uui/tyIsInVybCI6Imh0dHBzOi8vanguYmxiby5jYzo0NDMzLz91cmw9IiwgInNob3dUeXBlIjozfSwKCQl7Im5hbWUiOiLlhajmsJEiLCJ1cmwiOiJodHRwczovL2p4LmJsYm8uY2M6NDQzMy8/dXJsPSIsICJzaG93VHlwZSI6M30sCgkJeyJuYW1lIjoi5LiD5ZOlIiwidXJsIjoiaHR0cHM6Ly9qeC5tbWt2LmNuL3R2LnBocD91cmw9IiwgInNob3dUeXBlIjozfSwKCQl7Im5hbWUiOiLlhrDosYYiLCJ1cmwiOiJodHRwczovL2FwaS5xaWFucWkubmV0L3ZpcC8/dXJsPSIsICJzaG93VHlwZSI6M30sCgkJeyJuYW1lIjoi6L+q5aWlIiwidXJsIjoiaHR0cHM6Ly8xMjMuMWRpb3IuY24vP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6IkNLIiwidXJsIjoiaHR0cHM6Ly93d3cuY2twbGF5ZXIudmlwL2ppZXhpLz91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiLmuLjoiboiLCJ1cmwiOiJodHRwczovL2FwaS51MW8ubmV0Lz91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiJMRSIsInVybCI6Imh0dHBzOi8vbGVjdXJsLmNuLz91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiJja21vdiIsInVybCI6Imh0dHBzOi8vd3d3LmNrbW92LnZpcC9hcGkucGhwP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6InBsYXllcmp5L0Lnq5kiLCJ1cmwiOiJodHRwczovL2p4LnBsYXllcmp5LmNvbS8/dXJsPSIsICJzaG93VHlwZSI6M30sCgkJeyJuYW1lIjoiY2N5ampkIiwidXJsIjoiaHR0cHM6Ly9ja21vdi5jY3lqamQuY29tL2NrbW92Lz91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiLniLHosYYiLCJ1cmwiOiJodHRwczovL2p4LmFpZG91ZXIubmV0Lz91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiLor7ror7oiLCJ1cmwiOiJodHRwczovL3d3dy5ja21vdi5jb20vP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6Ikg4IiwidXJsIjoiaHR0cHM6Ly93d3cuaDhqeC5jb20vamlleGkucGhwP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6IkJMIiwidXJsIjoiaHR0cHM6Ly92aXAuYmxqaWV4LmNvbS8/dj0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6Iuino+aekGxhIiwidXJsIjoiaHR0cHM6Ly9hcGkuamlleGkubGEvP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6Ik1VVFYiLCJ1cmwiOiJodHRwczovL2ppZXhpLmphbmFuLm5ldC9qaWV4aS8/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoiTUFPIiwidXJsIjoiaHR0cHM6Ly93d3cubXRvc3ouY29tL20zdTgucGhwP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6IuiAgeadvyIsInVybCI6Imh0dHBzOi8vdmlwLmxhb2JhbmRxLmNvbS9qaWV4aS5waHA/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoi55uY5Y+kIiwidXJsIjoiaHR0cHM6Ly93d3cucGFuZ3VqaWV4aS5jYy9qaWV4aS5waHA/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoi55uW5LiWIiwidXJsIjoiaHR0cHM6Ly93d3cuZ2FpNC5jb20vP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6IuWwj+iSiyIsInVybCI6Imh0dHBzOi8vd3d3LmtwZXpwLmNuL2psZXhpLnBocD91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiJZaVRWIiwidXJsIjoiaHR0cHM6Ly9qaWV4aS51cy8/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoi5pif56m6IiwidXJsIjoiaHR0cDovLzYwanguY29tLz91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiIwNTIzIiwidXJsIjoiaHR0cHM6Ly9nby55aDA1MjMuY24veS5jeT91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiIxN+S6kSIsInVybCI6Imh0dHBzOi8vd3d3LjE3MTd5dW4uY29tL2p4L3R5LnBocD91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiI0SyIsInVybCI6Imh0dHBzOi8vanguNGtkdi5jb20vP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6IuS6keaekCIsInVybCI6Imh0dHBzOi8vangueXBhcnNlLmNvbS9pbmRleC5waHA/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoiODA5MCIsInVybCI6Imh0dHBzOi8vd3d3LjgwOTBnLmNuLz91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiLmsZ/muZYiLCJ1cmwiOiJodHRwczovL2FwaS5qaGR5dy52aXAvP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6IuivuuiuryIsInVybCI6Imh0dHBzOi8vd3d3Lm54Zmx2LmNvbS8/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoiUE0iLCJ1cmwiOiJodHRwczovL3d3dy5wbGF5bTN1OC5jbi9qaWV4aS5waHA/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoi5aWH57GzIiwidXJsIjoiaHR0cHM6Ly9xaW1paGUuY29tLz91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiLmgJ3kupEiLCJ1cmwiOiJodHRwczovL2p4LmFwMnAuY24vP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6IuWQrOS5kCIsInVybCI6Imh0dHBzOi8vanguZGo2dS5jb20vP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6ImFpangiLCJ1cmwiOiJodHRwczovL2ppZXhpLnQ3Zy5jbi8/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoiNTIiLCJ1cmwiOiJodHRwczovL3ZpcC41MmppZXhpLnRvcC8/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoi6buR57GzIiwidXJsIjoiaHR0cHM6Ly93d3cubXl4aW4udG9wL2p4L2FwaS8/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoi6LGq5Y2O5ZWmIiwidXJsIjoiaHR0cHM6Ly9hcGkubGhoLmxhL3ZpcC8/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoi5YeJ5Z+OIiwidXJsIjoiaHR0cHM6Ly9qeC5tdzAuY2MvP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6IjMzdCIsInVybCI6Imh0dHBzOi8vd3d3LjMzdG4uY24vP3VybD0iLCAic2hvd1R5cGUiOjF9LAoJCXsibmFtZSI6IjE4MCIsInVybCI6Imh0dHBzOi8vanguMDAwMTgwLnRvcC9qeC8/dXJsPSIsICJzaG93VHlwZSI6MX0sCgkJeyJuYW1lIjoi5peg5ZCNIiwidXJsIjoiaHR0cHM6Ly93d3cuYWRtaW5pc3RyYXRvcncuY29tL3ZpZGVvLnBocD91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiLpu5HkupEiLCJ1cmwiOiJodHRwczovL2ppZXhpLjM4MGsuY29tLz91cmw9IiwgInNob3dUeXBlIjoxfSwKCQl7Im5hbWUiOiLkuZ3lhasiLCJ1cmwiOiJodHRwczovL2p4LnlvdXlpdHYuY29tLz91cmw9IiwgInNob3dUeXBlIjoxfSwJCQoJCXsibmFtZSI6IuWQrOS5kChC56uZKSIsInVybCI6Imh0dHBzOi8vanguZGo2dS5jb20vP3VybD0iLCAic2hvd1R5cGUiOjJ9LAoJXTsKCQoJLy/lhajlsYDnu5/kuIDmlrnms5Xlr7nosaEKCWNvbnN0IGNvbW1vbkZ1bmN0aW9uT2JqZWN0ID0gbmV3IGNvbW1vbkZ1bmN0aW9uKCk7IAoJY29tbW9uRnVuY3Rpb25PYmplY3QuYWRkQ29tbW9uSHRtbENzcygpOwkvL+e7n+S4gGh0bWzjgIFjc3PlhYPntKDmt7vliqAKCWxldCBuZXdPcmlnaW5hbEludGVyZmFjZUxpc3QgPSBvcmlnaW5hbEludGVyZmFjZUxpc3Q7IC8v57uf5LiA5o6l5Y+jCgkKCS8v55u45YWz5Yqf6IO95YWz6Zet5o6n5Yi2CglsZXQgZnVuY3Rpb25Db250cm9sbGVyPSBjb21tb25GdW5jdGlvbk9iamVjdC5HTWdldFZhbHVlKCJzZXRpbmdEYXRhIik7CglpZighZnVuY3Rpb25Db250cm9sbGVyKXsKCQlmdW5jdGlvbkNvbnRyb2xsZXI9ewoJCQkiYmlsaWJpbGlIZWxwZXIiOnRydWUsInN1cGVyVmlkZW9IZWxwZXIiOnRydWUsInN1cGVyTXVzaWNIZWxwZXIiOnRydWUsImFicm9hZFZpZGVvSGVscGVyIjp0cnVlLAoJCQkid2FuZ3BhblNlYXJjaEVuZ2luZXNIZWxwZXIiOnRydWUsInNlYXJjaEVuZ2luZXNOYXZpZ2F0aW9uIjp0cnVlLCJ6aGlodUhlbHBlciI6dHJ1ZSwKCQl9Cgl9CQoJLy/nlKjmiLflip/og73orr7nva7lh73mlbAKCWZ1bmN0aW9uIHVzZXJzU2V0aW5nKCl7CgkJdmFyIGJpbGliaWxpSGVscGVyPXRydWUsIHN1cGVyVmlkZW9IZWxwZXI9dHJ1ZSwgc3VwZXJNdXNpY0hlbHBlcj10cnVlLCBhYnJvYWRWaWRlb0hlbHBlcj10cnVlLCB3YW5ncGFuU2VhcmNoRW5naW5lc0hlbHBlcj10cnVlLCBzZWFyY2hFbmdpbmVzTmF2aWdhdGlvbj10cnVlLCB6aGlodUhlbHBlcj10cnVlOwoJCXZhciBpc1VwZGF0ZVN0b3JhZ2UgPSBmYWxzZTsKCQlpZighZnVuY3Rpb25Db250cm9sbGVyLmhhc093blByb3BlcnR5KCJiaWxpYmlsaUhlbHBlciIpKXsKCQkJZnVuY3Rpb25Db250cm9sbGVyLmJpbGliaWxpSGVscGVyID0gdHJ1ZTsKCQkJaXNVcGRhdGVTdG9yYWdlID0gdHJ1ZTsKCQl9ZWxzZXsKCQkJYmlsaWJpbGlIZWxwZXIgPSBmdW5jdGlvbkNvbnRyb2xsZXIuYmlsaWJpbGlIZWxwZXI7CgkJfQoJCWlmKCFmdW5jdGlvbkNvbnRyb2xsZXIuaGFzT3duUHJvcGVydHkoInN1cGVyVmlkZW9IZWxwZXIiKSl7CgkJCWZ1bmN0aW9uQ29udHJvbGxlci5zdXBlclZpZGVvSGVscGVyID0gdHJ1ZTsKCQkJaXNVcGRhdGVTdG9yYWdlID0gdHJ1ZTsKCQl9ZWxzZXsKCQkJc3VwZXJWaWRlb0hlbHBlciA9IGZ1bmN0aW9uQ29udHJvbGxlci5zdXBlclZpZGVvSGVscGVyOwoJCX0KCQlpZighZnVuY3Rpb25Db250cm9sbGVyLmhhc093blByb3BlcnR5KCJzdXBlck11c2ljSGVscGVyIikpewoJCQlmdW5jdGlvbkNvbnRyb2xsZXIuc3VwZXJNdXNpY0hlbHBlciA9IHRydWU7CgkJCWlzVXBkYXRlU3RvcmFnZSA9IHRydWU7CgkJfWVsc2V7CgkJCXN1cGVyTXVzaWNIZWxwZXIgPSBmdW5jdGlvbkNvbnRyb2xsZXIuc3VwZXJNdXNpY0hlbHBlcjsKCQl9CgkJaWYoIWZ1bmN0aW9uQ29udHJvbGxlci5oYXNPd25Qcm9wZXJ0eSgiYWJyb2FkVmlkZW9IZWxwZXIiKSl7CgkJCWZ1bmN0aW9uQ29udHJvbGxlci5hYnJvYWRWaWRlb0hlbHBlciA9IHRydWU7CgkJCWlzVXBkYXRlU3RvcmFnZSA9IHRydWU7CgkJfWVsc2V7CgkJCWFicm9hZFZpZGVvSGVscGVyID0gZnVuY3Rpb25Db250cm9sbGVyLmFicm9hZFZpZGVvSGVscGVyOwoJCX0KCQlpZighZnVuY3Rpb25Db250cm9sbGVyLmhhc093blByb3BlcnR5KCJ3YW5ncGFuU2VhcmNoRW5naW5lc0hlbHBlciIpKXsKCQkJZnVuY3Rpb25Db250cm9sbGVyLndhbmdwYW5TZWFyY2hFbmdpbmVzSGVscGVyID0gdHJ1ZTsKCQkJaXNVcGRhdGVTdG9yYWdlID0gdHJ1ZTsKCQl9ZWxzZXsKCQkJd2FuZ3BhblNlYXJjaEVuZ2luZXNIZWxwZXIgPSBmdW5jdGlvbkNvbnRyb2xsZXIud2FuZ3BhblNlYXJjaEVuZ2luZXNIZWxwZXI7CgkJfQoJCWlmKCFmdW5jdGlvbkNvbnRyb2xsZXIuaGFzT3duUHJvcGVydHkoInNlYXJjaEVuZ2luZXNOYXZpZ2F0aW9uIikpewoJCQlmdW5jdGlvbkNvbnRyb2xsZXIuc2VhcmNoRW5naW5lc05hdmlnYXRpb24gPSB0cnVlOwoJCQlpc1VwZGF0ZVN0b3JhZ2UgPSB0cnVlOwoJCX1lbHNlewoJCQlzZWFyY2hFbmdpbmVzTmF2aWdhdGlvbiA9IGZ1bmN0aW9uQ29udHJvbGxlci5zZWFyY2hFbmdpbmVzTmF2aWdhdGlvbjsKCQl9CgkJaWYoIWZ1bmN0aW9uQ29udHJvbGxlci5oYXNPd25Qcm9wZXJ0eSgiemhpaHVIZWxwZXIiKSl7CgkJCWZ1bmN0aW9uQ29udHJvbGxlci56aGlodUhlbHBlciA9IHRydWU7CgkJCWlzVXBkYXRlU3RvcmFnZSA9IHRydWU7CgkJfWVsc2V7CgkJCXpoaWh1SGVscGVyID0gZnVuY3Rpb25Db250cm9sbGVyLnpoaWh1SGVscGVyOwoJCX0KCQlpZihpc1VwZGF0ZVN0b3JhZ2UpewoJCQljb21tb25GdW5jdGlvbk9iamVjdC5HTXNldFZhbHVlKCJzZXRpbmdEYXRhIixmdW5jdGlvbkNvbnRyb2xsZXIpOwoJCX0KCQl2YXIgc2V0aW5nRGF0YT1bCgkJCXsidGFnIjoiYmlsaWJpbGlIZWxwZXIiLCAibmFtZSI6IkLnq5nkvb/nlKjliqnmiYso6KeG6aKR5LiL6L295Y+vUOOAgea1j+iniOiusOW9leOAgeS4gOS7tuS4ieiBlCkiLCAiY2hlY2tlZCI6YmlsaWJpbGlIZWxwZXJ9LAoJCQl7InRhZyI6InpoaWh1SGVscGVyIiwgIm5hbWUiOiLnn6XkuY7kvb/nlKjliqnmiYso5YaF5a655qCH6K+G44CB6Zeu562U5pi+56S65LyY5YyW44CB6KeG6aKR5LiL6L29562JKSIsICJjaGVja2VkIjp6aGlodUhlbHBlcn0sCgkJCXsidGFnIjoic3VwZXJWaWRlb0hlbHBlciIsICJuYW1lIjoi5YWo572RVklQ6KeG6aKR6Kej5p6QKOaUr+aMgeeIseWlh+iJuuOAgeiFvuiur+inhumikeOAgULnq5nnlarliafnrYkpIiwgImNoZWNrZWQiOnN1cGVyVmlkZW9IZWxwZXJ9LAoJCQl7InRhZyI6InN1cGVyTXVzaWNIZWxwZXIiLCAibmFtZSI6IuWFqOe9kVZJUOmfs+S5kOino+aekCjmlK/mjIHnvZHmmJPkupHpn7PkuZDjgIFRUemfs+S5kOetiSkiLCAiY2hlY2tlZCI6c3VwZXJNdXNpY0hlbHBlcn0sCgkJCXsidGFnIjoiYWJyb2FkVmlkZW9IZWxwZXIiLCAibmFtZSI6IuWbveWkluinhumikeino+aekOS4i+i9vSjmlK/mjIHmsrnnrqHjgIFGYWNlYm9va+etiSkiLCAiY2hlY2tlZCI6YWJyb2FkVmlkZW9IZWxwZXJ9LAoJCQl7InRhZyI6IndhbmdwYW5TZWFyY2hFbmdpbmVzSGVscGVyIiwgIm5hbWUiOiLnvZHnm5jmkJzntKLlvJXmk47noLTop6Pml6DpmZDkuIvovb0iLCAiY2hlY2tlZCI6d2FuZ3BhblNlYXJjaEVuZ2luZXNIZWxwZXJ9LAoJCQl7InRhZyI6InNlYXJjaEVuZ2luZXNOYXZpZ2F0aW9uIiwgIm5hbWUiOiLmkJzntKLlvJXmk47otYTmupDlr7zoiKoo6YCC6YWN55m+5bqm44CBMzYw44CB5pCc54uX44CB5b+F5bqU562JKSIsICJjaGVja2VkIjpzZWFyY2hFbmdpbmVzTmF2aWdhdGlvbn0sCgkJXQoJCXZhciBjb250ZW50ID0gIiI7CgkJZm9yKHZhciBpPTA7IGk8c2V0aW5nRGF0YS5sZW5ndGg7aSsrKXsKCQkJdmFyIG9uZSA9IHNldGluZ0RhdGFbaV07CgkJCWNvbnRlbnQgKz0gYAoJCQkJPGRpdiBzdHlsZT0icGFkZGluZzogNXB4IDBweDsiPgoJCQkJCTxpbnB1dCBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6IDE1cHg7aGVpZ2h0OiAxNXB4O2Rpc3BsYXk6IGlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAtd2Via2l0LWFwcGVhcmFuY2U6Y2hlY2tib3g7bWFyZ2luLWJvdHRvbTogM3B4O2N1cnNvcjogcG9pbnRlcjsiIG5hbWU9IkNoZWNrYm94IiB0eXBlPSJjaGVja2JveCIgZGF0YS10YWc9ImArb25lLnRhZytgIiBgKyhvbmUuY2hlY2tlZCA/ICJjaGVja2VkIiA6ICIiKStgPgoJCQkJCTxsYWJlbCBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2s7Zm9udC1zaXplOiAxNHB4O21hcmdpbjozcHggMDt2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO2ZvbnQtd2VpZ2h0OjUwMDtjb2xvcjojMDAwOyI+YCtvbmUubmFtZStgPC9sYWJlbD4KCQkJCTwvZGl2PgoJCQlgCgkJfQoJCXBvcHVwLmRpYWxvZyh7CgkJCSJ0aXRsZSI6IuWKn+iDveW8gOWFsyIsCgkJCSJjb250ZW50Ijpjb250ZW50LAoJCQkib25Db250ZW50UmVhZHkiOmZ1bmN0aW9uKCR0aGF0KXsKCQkJCSR0aGF0LmRpYWxvZ0NvbnRlbnQucXVlcnlTZWxlY3RvckFsbCgiaW5wdXRbdHlwZT0nY2hlY2tib3gnXSIpLmZvckVhY2goZnVuY3Rpb24oY2hlY2tib3gpewoJCQkJCWNoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24oZSl7CgkJCQkJCXZhciB0YWcgPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoImRhdGEtdGFnIik7CgkJCQkJCXZhciBjaGVja2VkID0gZS50YXJnZXQuY2hlY2tlZDsKCQkJCQkJZnVuY3Rpb25Db250cm9sbGVyW3RhZ10gPSBjaGVja2VkOwoJCQkJCQljb21tb25GdW5jdGlvbk9iamVjdC5HTXNldFZhbHVlKCJzZXRpbmdEYXRhIixmdW5jdGlvbkNvbnRyb2xsZXIpOwoJCQkJCQljb21tb25GdW5jdGlvbk9iamVjdC53ZWJUb2FzdCh7Im1lc3NhZ2UiOiLmk43kvZzmiJDlip8iLCAiYmFja2dyb3VuZCI6IiNGRjRENDAifSk7CgkJCQkJfSk7CgkJCQl9KQoJCQl9CgkJfSk7Cgl9CgkKCWlmKGNvbW1vbkZ1bmN0aW9uT2JqZWN0LmlzUEMoKSl7CgkJR01fcmVnaXN0ZXJNZW51Q29tbWFuZCgi5Yqf6IO95byA5YWzIiwoKT0+dXNlcnNTZXRpbmcoKSk7Cgl9ZWxzZXsKCQlmdW5jdGlvbkNvbnRyb2xsZXIuYmlsaWJpbGlIZWxwZXIgPSBmYWxzZTsKCQlmdW5jdGlvbkNvbnRyb2xsZXIuYWJyb2FkVmlkZW9IZWxwZXIgPSBmYWxzZTsKCQlmdW5jdGlvbkNvbnRyb2xsZXIuc3VwZXJNdXNpY0hlbHBlciA9IGZhbHNlOwoJCWZ1bmN0aW9uQ29udHJvbGxlci53YW5ncGFuU2VhcmNoRW5naW5lc0hlbHBlciA9IGZhbHNlOwoJCWZ1bmN0aW9uQ29udHJvbGxlci5zZWFyY2hFbmdpbmVzTmF2aWdhdGlvbiA9IGZhbHNlOwoJCWZ1bmN0aW9uQ29udHJvbGxlci56aGlodUhlbHBlciA9IGZhbHNlOwoJfQoKCS8qKgoJICog6LaF57qn6Kej5p6Q5Yqp5omL5Yqf6IO9CgkgKiAKCSAqIOWOn+S7o+eggeS9nOiAhe+8muWwj+iJvueJuQoJICog6ISa5pys5Zyw5Z2A77yaaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzQwNzg0NwoJICog6KeG6aKR6Kej5p6Q5o6l5Y+j5p2l6Ieq77yM5L2c6ICF77ya5oeS5ZOI5ZOICgkgKiDohJrmnKzlnLDlnYDvvJpodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvMzcwNjM0CgkgKiDpgbXlvqpBR1BMIExpY2Vuc2XlvIDmupDljY/orq4KCSAqLwoJZnVuY3Rpb24gc3VwZXJWaWRlb0hlbHBlcihvcmlnaW5hbEludGVyZmFjZUxpc3QpewoJCXRoaXMub3JpZ2luYWxJbnRlcmZhY2VMaXN0ID0gb3JpZ2luYWxJbnRlcmZhY2VMaXN0OwoJCXRoaXMuZWxlbWVudElkID0gTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkqMTAwMDAwMDAwKSsibW14IjsKCQl0aGlzLmN1c3RvbUludGVyZmFjZUtleSA9ICJjdXN0b21faW50ZXJmYWNlX2tleV9kZGRzZHh4YSI7CgkJdGhpcy5xdWlja2x5SW50ZXJmYWNlS2V5ID0gImN1c3RvbV9xdWlja2x5X2ludGVyZmFjZV9rZXlfZGRkc2R4eGEiOwoJCXRoaXMuZGVmYXVsdFF1aWNrbHlJbnRlcmZhY2VJbmRleCA9IDE7CgkJdGhpcy5wbGF5ZXJOb2RlcyA9IFsKCQkJeyB1cmw6InYucXEuY29tIiwgbm9kZTpbIiNwbGF5ZXIiLCIjbW9kX3BsYXllciIsIiNwbGF5ZXItY29udGFpbmVyIl19LAoJCQl7IHVybDoid3d3LmlxaXlpLmNvbSIsIG5vZGU6IiNmbGFzaGJveCJ9LAoJCQl7IHVybDoidi55b3VrdS5jb20iLCBub2RlOiIjcGxheWVyIn0sCgkJCXsgdXJsOiJ3Lm1ndHYuY29tIiwgbm9kZToiI21ndHYtcGxheWVyLXdyYXAifSwKCQkJeyB1cmw6Ind3dy5tZ3R2LmNvbSIsIG5vZGU6IiNtZ3R2LXBsYXllci13cmFwIn0sCgkJCXsgdXJsOiJ0di5zb2h1LmNvbSIsIG5vZGU6IiNwbGF5ZXIifSwKCQkJeyB1cmw6ImZpbG0uc29odS5jb20iLCBub2RlOiIjcGxheWVyV3JhcCJ9LAoJCQl7IHVybDoid3d3LmxlLmNvbSIsIG5vZGU6IiNsZV9wbGF5Ym94In0sCgkJCXsgdXJsOiJ2aWRlby50dWRvdS5jb20iLCBub2RlOiIudGQtcGxheWJveCJ9LAoJCQl7IHVybDoidi5wcHR2LmNvbSIsIG5vZGU6IiNwcHR2X3BsYXlwYWdlX2JveCJ9LAoJCQl7IHVybDoidmlwLnBwdHYuY29tIiwgbm9kZToiLnctdmlkZW8ifSwKCQkJeyB1cmw6Ind3dy53YXN1LmNuIiwgbm9kZToiI2ZsYXNoQ29udGVudCJ9LAoJCQl7IHVybDoid3d3LmFjZnVuLmNuIiwgbm9kZToiI3BsYXllciJ9LAoJCQl7IHVybDoid3d3LmJpbGliaWxpLmNvbSIsIG5vZGU6IiNwbGF5ZXJfbW9kdWxlIn0sCgkJCXsgdXJsOiJ2aXAuMTkwNS5jb20iLCBub2RlOiIjcGxheWVyIn0sCgkJXTsKCQl0aGlzLmlzUnVuID0gZnVuY3Rpb24oKXsgLy/liKTmlq3mmK/lkKbov5DooYwKCQkJY29uc3QgaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0OwoJCQljb25zdCB1cmxzID0gWyJ3d3cuaXFpeWkuY29tIiwidi5xcS5jb20iLCJ5b3VrdS5jb20iLCAid3d3LmxlLmNvbSIsIm1ndHYuY29tIiwic29odS5jb20iLCAiYWNmdW4uY24iLCJiaWxpYmlsaS5jb20iLCJiYW9mZW5nLmNvbSIsInBwdHYuY29tIiwiMTkwNS5jb20iLCJtaWd1dmlkZW8uY29tIl07CgkJCXZhciByZXN1bHQgPSBmYWxzZTsKCQkJaWYoIWhvc3Quc3RhcnRzV2l0aCgibS4iKSl7IC8v5LiN5piv56e75Yqo56uv5omn6KGMCgkJCQlmb3IodmFyIGk9MDsgaTx1cmxzLmxlbmd0aDtpKyspeyAvL+S4jeaYr0Lnq5nnm7TmjqXliKTmlq0KCQkJCQlpZih3aW5kb3cubG9jYXRpb24uaG9zdC5pbmRleE9mKCJiaWxpYmlsaS5jb20iKT09LTEpewoJCQkJCQlpZih3aW5kb3cubG9jYXRpb24uaG9zdC5pbmRleE9mKHVybHNbaV0pIT0tMSl7CgkJCQkJCQlyZXN1bHQgPSB0cnVlOwoJCQkJCQkJYnJlYWs7CgkJCQkJCX0KCQkJCQl9ZWxzZXsKCQkJCQkJaWYod2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZigid3d3LmJpbGliaWxpLmNvbS9iYW5ndW1pL3BsYXkiKSE9LTEpeyAvL+aYr0Lnq5nlj6rmnInnlarliafmiY3lvIDlkK9WSVDop6PmnpAKCQkJCQkJCXJlc3VsdCA9IHRydWU7CgkJCQkJCQlicmVhazsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCQlyZXR1cm4gcmVzdWx0OwoJCX07CgkJdGhpcy5zaG93UGxheWVyV2luZG93ID0gZnVuY3Rpb24ocGxheU9iamVjdCl7CS8v5pi+56S65pKt5pS+56qX5Y+jCgkJCXZhciB1cmwgPSBwbGF5T2JqZWN0LnVybCArIHdpbmRvdy5sb2NhdGlvbi5ocmVmOwoJCQljb21tb25GdW5jdGlvbk9iamVjdC5HTW9wZW5JblRhYih1cmwsIGZhbHNlKTsKCQl9OwoJCXRoaXMuYW5hbHlzaXNDdXN0b21JbnRlcmZhY2UgPSBmdW5jdGlvbigpeyAvL+iHquWumuS5ieaOpeWPo+ino+aekAoJCQl2YXIgY3VzdG9tSW50ZXJmYWNlID0gY29tbW9uRnVuY3Rpb25PYmplY3QuR01nZXRWYWx1ZSh0aGlzLmN1c3RvbUludGVyZmFjZUtleSwiIik7CgkJCWlmKCEhY3VzdG9tSW50ZXJmYWNlKXsKCQkJCXRyeXsKCQkJCQl2YXIgY3VzdG9taXplSW50ZXJmYWNlTGlzdCA9IG5ldyBBcnJheSgpOwoJCQkJCXZhciBhbmFseXNpc0FycmF5ID0gY3VzdG9tSW50ZXJmYWNlLnNwbGl0KCJcbiIpOwoJCQkJCWZvcih2YXIgaT0wO2k8YW5hbHlzaXNBcnJheS5sZW5ndGg7aSsrKXsKCQkJCQkJdmFyIG9uZVBpZWNlID0gYW5hbHlzaXNBcnJheVtpXTsKCQkJCQkJaWYoISFvbmVQaWVjZSAmJiBvbmVQaWVjZS5pbmRleE9mKCIsIikhPS0xKXsKCQkJCQkJCXZhciBvbmVQaWVjZUFycmF5ID0gb25lUGllY2Uuc3BsaXQoIiwiKTsgCgkJCQkJCQkKCQkJCQkJCWlmKG9uZVBpZWNlQXJyYXkubGVuZ3RoPT0yICYmICEhb25lUGllY2VBcnJheVswXSAmJiAvKGh0dHB8aHR0cHMpOlwvXC9cUyovLnRlc3Qob25lUGllY2VBcnJheVsxXSkpewoJCQkJCQkJCWN1c3RvbWl6ZUludGVyZmFjZUxpc3QucHVzaCh7Im5hbWUiOiIiK29uZVBpZWNlQXJyYXlbMF0rIiIsInVybCI6IiIrb25lUGllY2VBcnJheVsxXSsiIiwgInNob3dUeXBlIjoxfSk7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGhpcy5vcmlnaW5hbEludGVyZmFjZUxpc3QgPSBjdXN0b21pemVJbnRlcmZhY2VMaXN0LmNvbmNhdCh0aGlzLm9yaWdpbmFsSW50ZXJmYWNlTGlzdCk7CgkJCQl9Y2F0Y2goZSl7fQoJCQl9CgkJfTsKCQl0aGlzLmdldFF1aWNrbHlJbnRlcmZhY2VJbmRleCA9IGZ1bmN0aW9uKCl7CgkJCXZhciBxdWlja2x5SW50ZXJmYWNlSW5kZXhTdHJpbmcgPSBjb21tb25GdW5jdGlvbk9iamVjdC5HTWdldFZhbHVlKHRoaXMucXVpY2tseUludGVyZmFjZUtleSwiIikrIiI7CgkJCXZhciBxdWlja2x5SW50ZXJmYWNlSW5kZXggPSB0aGlzLmRlZmF1bHRRdWlja2x5SW50ZXJmYWNlSW5kZXg7CgkJCWlmKCEhcXVpY2tseUludGVyZmFjZUluZGV4U3RyaW5nKXsKCQkJCXF1aWNrbHlJbnRlcmZhY2VJbmRleCA9IHBhcnNlSW50KHF1aWNrbHlJbnRlcmZhY2VJbmRleFN0cmluZyk7CgkJCX0KCQkJaWYodGhpcy5vcmlnaW5hbEludGVyZmFjZUxpc3QubGVuZ3RoLTE8cXVpY2tseUludGVyZmFjZUluZGV4KXsKCQkJCXF1aWNrbHlJbnRlcmZhY2VJbmRleCA9IHRoaXMuZGVmYXVsdFF1aWNrbHlJbnRlcmZhY2VJbmRleDsKCQkJfQoJCQlyZXR1cm4gcXVpY2tseUludGVyZmFjZUluZGV4OwoJCX07CgkJdGhpcy5hZGRIdG1sRWxlbWVudHMgPSBmdW5jdGlvbigpeyAgLy/mt7vliqBIVE1MCgkJCWNvbnN0IHZpcFZpZGVvSW1hZ2VCYXNlNjQgPSAiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFEQUFBQUF3Q0FZQUFBQlhBdm1IQUFBQzlrbEVRVlJvUSsyWlBXZ1ZRUkRILzcvQ1dxT0lZT0ZIRmJSU2pKaEdNR0RwQnlvSWFnbzcwY3F2VXRRZ2RpcFdGcWF3TVdnaEdJaWRoY0hLUUFKcUVVUkJSZkVEMUNDQ2pjM0lQdTRlbTMxNzc1SjdkM204Y0F0WDNPN3N6UDduUHpzeng2RWVIL1Q0K1ZVRDZEYURUUWJNYkUrM0Q3TVkrOENra3c4QlBGdU1raTdLRHRVQXV1aDlaM29aTXRCbGp4WTJYOWVCd3E0cmFXUE5RRW1PTEt4bStUQmdacXNrblExZEFWek5jbytaaFdzbTZaYWtIWkxDMW1ReXJaNU9YMlJ2ek14blNhOGx6UUovWXdMekdEQ3plNUpPZW9JL2diVnRBTXhKNnZQVzd3S25rcjRxYkV1YXhjY0RjR1dCc2ZOVjBtak1tU0dBZzVMR0E2WGJnRmVoSVRQYkxlbDVNTjg0WkFVQVVqTVBnV08relpZN1lHYnZKVzBPdlJvQjhFalNFVzkrQmhoSXZPdkNwMHdHZlBQYmdaZnBSQXpBVFVubjU2R0VtSnlMZDM5Y0JOeGVGOTlGQURUYTQyQnNrdVFlZjR3RGg5b0IyQ1hwUmJEcE1QQTRuVE96MDVMdUJETHJnVytkQUFDR0lreGZrSFREbS84RHJNd0VrQnhnT3Nra3Fkd0VjTUFENEdMZjNZRjBQQUNPZSt1RkdNZ0E0Qmo0RUFBYkFHYmNYTFFPbU5rbFNkZUNUUnVCVDJiV0wrbE5zTFlmZUZJUmdIMlNKZ0o3R3dDWFlqTUJySmIwSzlqVWlIRXpHNUYwMlZ1YkE5YjRza1h2UU1pQW1XMlZkRlNTbjI0L0FzMGtrMW1KemV5cHBMM2V3YWFCbldZMksybUxOejhTNXVlQ0FNTHd6M3EvRFp4cmV3ZVNlM0JDMHYxQWk3dGtZWHJzQjk2V3dNQkNBZlFCdjNNQkpDRCtTVnJoYVhhWjU0ejNQZ1VNaHBZclpLQ0Y3YmJObkprNUJod1Q2ZmdoeVc4dGhvR3hpZ0U0bXk2dFh3ZW1RbHQ1QUdJMW9hbURTSUZMbUN1VVJpVzVCT0dQTDhDN2RyR1YyMDZiMlhkSjZ5Skt4b0RobVBLQ0llUzYxWlpDbG5jeEZnTEF0Y3l4cm5Fd1Jta25ERlFGSUZZVFduSi9DVm1vR2dZU2o3WjgxT1I4NkxnN3NPZ1Btblk2czBJcE40VHlZckRiNnpXQW1vRU9QVkNIVUljTzdIaDcvWWVtWXhjV1U3QU1mM0JrTkdERi9GUDlya3dHcWpkZGtvV1d2NVFsNlYxeU5YVWRXSEtYQndaN25vSC9kUCtIUU5xaGVUb0FBQUFBU1VWT1JLNUNZSUk9IjsKCQkJY29uc3QgcXVpY2tseUJhc2U2NCA9ICJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFBQVhOU1IwSUFyczRjNlFBQUF2MUpSRUZVV0VmRmwwMklWV1VZeDM5L0VEZEtvQ2lDR1lxdXhOdzQwNFFMK3dBL3dJVWZBNWx1TW90azBqR29pRFFGdjFvTXFDQ09Ga1lRdG9wY3pLeE1Hc1VVRjJiTktzV0ZLQnJvSnRMSTJxandsK2R5N3VWNDdqbm5ubnRueWdjT0Y5N25mZDcvNzc3bmZaN25QZUlabThaYjMvWnNZQkV3RTVnRnpBR21BWDhsejkvQUEwbDdRbnZjQUd3dkJkNEUxZ09USy95eHZRRXhaZ0RiYndIdkFxOVVFRTFQT1N6cHd6RUIyRDRLYkcxVHVENzlHMG52ZEF4ZysyZWdwMFB4Q0J1UzFOc1JnRzJQUWJnZWVsYlMwcllCYko4RFhpc0F1QWRjQjJZa3A3K004enRKR3lvRDJINEorQXhZVTdEcW9LUVA2ajdiMjRBakpRUURrbmFVQXRpZUR2UW16L0tTeFVZa05mbHR4MDdGanVWWnY2UmpoUUMyMXdJSGdIa1YzdmMyU1pFUlRXYjdkK0NGSEZldnBLRmNBTnZ2QTE5VUVLNVBXU25waHdLQVM4RExHZDgvd0l1U2JqY0IySTRTdWJzTjhaajZpYVNEQlFCL0FsTXp2cThsdlJkalR3RWs1WFNrVGZIYWRFbDVmeVlPWVJ6R3JDMlRkT1lwQU52ZHdDK2RpS2RpdGdOWGt4UmNCU3pMV2UrQ3BGZnI0dzFxMjFlQUJabUF4OERGa3J6dmhIZWpwRy96QVBxU2JoYUN0VWZTdjdZSGdFODdVY3FKT1NhcFB6MWVxUkRaL2g1NFk0d1FseVZsczZINmZjRDJyMEJYcHhCNWg3UXBDMW90Ymp0cS9aUlc4ekwrbnlTOVhoVFRxaFIzU1JwTkI5dStrMXkzcW5BTVM0cUtXbWhGbFhBbHNDL1o4bHZBaWZvZExsYXlQUXlzcmtEUUk2azB0Zk9LeDBUZ0dqQTNJN0JPMHNuNm1PMUR3RWNsRUQ5S1d0RUtNZy9nT0xBNUovQ3VwT2N6cnlOMmFVbEJuZWlURkd1VldyWVVSNnBGeWhWWmQ4NlplQVJNeUFUY0FCWkwrcU15Z08wNDNlZUJoUVZCbzVLaVhEZk05aVFnT2x2V2FxMjJsWGo0MDZYNGMyQm5RZEROYUNxU1RtVUE0aDJmenNSc2tmUmxGZkVHZ08zNVFQVHQ1M0lDdjByRUgyWjl0dmNEdTFManRZK05xdUpwZ0xoOHhDVWtiYjhCKzlNblB3Y2dmVUZ0dE5oT0FOSUx4YmZiSUhCSTB2Mnl4V3gvREd3QzNwWVVwYnB0cTUyQjVCWVVQVHJ5UDI2MzhmdS9XS1Z1K0YrU1BBRzdsL3doNE5zSk9RQUFBQUJKUlU1RXJrSmdnZz09IjsKCQkJY29uc3QgY3VycmVudEhvc3QgPSB3aW5kb3cubG9jYXRpb24uaG9zdDsKCQkJCgkJCWNvbnN0IHF1aWNrbHlJbnRlcmZhY2VJbmRleCA9IHRoaXMuZ2V0UXVpY2tseUludGVyZmFjZUluZGV4KCk7CgkJCXZhciBjdXJyZW50UXVpY2tseUludGVyZmFjZU9iamVjdCA9IG51bGw7CgkJCQoJCQl2YXIgY2F0ZWdvcnlfMV9odG1sID0gIiI7CgkJCXRoaXMub3JpZ2luYWxJbnRlcmZhY2VMaXN0LmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7CgkJCQlpZihpdGVtLnNob3dUeXBlICE9IDIpewoJCQkJCXZhciBzZWxlY3RlZCA9ICIiCgkJCQkJaWYoaW5kZXg9PXF1aWNrbHlJbnRlcmZhY2VJbmRleCl7CgkJCQkJCXNlbGVjdGVkID0gInNlbGVjdGVkIjsKCQkJCQkJY3VycmVudFF1aWNrbHlJbnRlcmZhY2VPYmplY3QgPSAgaXRlbTsKCQkJCQl9CgkJCQkJY2F0ZWdvcnlfMV9odG1sICs9ICI8c3BhbiB0aXRsZT0nIitpdGVtLm5hbWUrIicgZGF0YS1pbmRleD0nIitpbmRleCsiJyBjbGFzcz0nIitzZWxlY3RlZCsiJz4iICsgaXRlbS5uYW1lICsgIjwvc3Bhbj4iOwoJCQkJfQoJCQl9KTsKCQkJCgkJCS8v6I635b6X6Ieq5a6a5LmJ5L2N572uCgkJCXZhciBsZWZ0ID0gMDsKCQkJdmFyIHRvcCA9IDEyMDsKCQkJdmFyIFBvc2l0aW9uID0gY29tbW9uRnVuY3Rpb25PYmplY3QuR01nZXRWYWx1ZSgiUG9zaXRpb25fIiArIGN1cnJlbnRIb3N0KTsKCQkJaWYoISFQb3NpdGlvbil7CgkJCQlsZWZ0ID0gUG9zaXRpb24ubGVmdDsKCQkJCXRvcCA9IFBvc2l0aW9uLnRvcDsKCQkJfQoJCQl2YXIgY29sb3IgPSAiI0ZGNEQ0MCI7CgkJCXZhciBob3ZlckNvbG9yID0gIiMwMDAwMDAiOwoJCQlpZihjdXJyZW50SG9zdC5pbmRleE9mKCJiaWxpYmlsaS5jb20iKSE9LTEpeyAvL+iHquWumuS5ieS4u+mimAoJCQkJY29sb3IgPSAiI2ZiNzI5OSI7CgkJCQlob3ZlckNvbG9yID0gIiMwMEIwRTEiOwoJCQl9CgkJCXZhciBjc3NNb3VsZCA9IGAjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYHtjdXJzb3I6cG9pbnRlcjsgcG9zaXRpb246Zml4ZWQ7IHRvcDpgICsgdG9wICsgYHB4OyBsZWZ0OmAgKyBsZWZ0ICsgYHB4OyB3aWR0aDowcHg7IHotaW5kZXg6OTk5OTk5OTk7IGZvbnQtc2l6ZToxNnB4OyB0ZXh0LWFsaWduOmxlZnQ7fQoJCQkJCQkJI3ZpcF9tb3ZpZV9ib3hgK3RoaXMuZWxlbWVudElkK2AgLmltZ19ib3hgK3RoaXMuZWxlbWVudElkK2B7d2lkdGg6MjRweDsgaGVpZ2h0OjMycHg7bGluZS1oZWlnaHQ6MzJweDt0ZXh0LWFsaWduOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOmArY29sb3IrYDt9CgkJCQkJCQkjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCAuaW1nX2JveGArdGhpcy5lbGVtZW50SWQrYDpob3ZlcnsKCQkJCQkJCQliYWNrZ3JvdW5kLWNvbG9yOiNGRjVGMDA7CgkJCQkJCQl9CgkJCQkJCQkjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCAuaW1nX2JveGArdGhpcy5lbGVtZW50SWQrYD5pbWcge3dpZHRoOjIwcHg7IGRpc3BsYXk6aW5saW5lLWJsb2NrOyB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7fQoJCQkJCQkJCgkJCQkJCQkjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCAuc2hvd2hpZGVfYm94YCt0aGlzLmVsZW1lbnRJZCtge2Rpc3BsYXk6bm9uZTtwYWRkaW5nLWxlZnQ6NXB4O3Bvc2l0aW9uOiBhYnNvbHV0ZTtsZWZ0OiAyNHB4O3RvcDogMDt9CgkJCQkJCQkjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCAudmlwX21vZF9ib3hfYWN0aW9uXzY4N2lpe3dpZHRoOjM4MHB4OyBtYXgtaGVpZ2h0OjQwMHB4OyBvdmVyZmxvdy15OmF1dG87YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0MSwyNDEsMjQxKTt9CgkJCQkJCQkjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCAuZGVmYXVsdC1zY3JvbGxiYXItNTU2Nzg6Oi13ZWJraXQtc2Nyb2xsYmFye3dpZHRoOjVweDsgaGVpZ2h0OjFweDt9CgkJCQkJCQkjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCAuZGVmYXVsdC1zY3JvbGxiYXItNTU2Nzg6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1ie2JveC1zaGFkb3c6aW5zZXQgMCAwIDVweCByZ2JhKDAsIDAsIDAsIDAuMik7IGJhY2tncm91bmQ6I0E4QThBODt9CgkJCQkJCQkjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCAuZGVmYXVsdC1zY3JvbGxiYXItNTU2Nzg6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNre2JveC1zaGFkb3c6aW5zZXQgMCAwIDVweCByZ2JhKDAsIDAsIDAsIDAuMik7IGJhY2tncm91bmQ6I0YxRjFGMTt9CgkJCQkJCQkKCQkJCQkJCSN2aXBfbW92aWVfYm94YCt0aGlzLmVsZW1lbnRJZCtgIC52aXBfbW9kX2JveF9hY3Rpb25fNjg3aWk+IC5pdGVtX2JveGArdGhpcy5lbGVtZW50SWQrYHttYXJnaW4tYm90dG9tOjEwcHg7fQoJCQkJCQkJI3ZpcF9tb3ZpZV9ib3hgK3RoaXMuZWxlbWVudElkK2AgLnZpcF9tb2RfYm94X2FjdGlvbl82ODdpaT4gLml0ZW1fYm94YCt0aGlzLmVsZW1lbnRJZCtgOmxhc3QtY2hpbGR7bWFyZ2luLWJvdHRvbTowcHg7fQoJCQkJCQkJI3ZpcF9tb3ZpZV9ib3hgK3RoaXMuZWxlbWVudElkK2AgLnZpcF9tb2RfYm94X2FjdGlvbl82ODdpaT4gLml0ZW1fYm94YCt0aGlzLmVsZW1lbnRJZCtgID4udGl0bGVgK3RoaXMuZWxlbWVudElkK2B7Zm9udC1zaXplOjE0cHg7IHRleHQtYWxpZ246bGVmdDtjb2xvcjojMDAwMDAwO2ZvbnQtd2VpZ2h0OjYwMDttYXJnaW46NXB4IDNweDt9CgkJCQkJCQkjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCAudmlwX21vZF9ib3hfYWN0aW9uXzY4N2lpPiAuaXRlbV9ib3hgK3RoaXMuZWxlbWVudElkK2AgPi5pbnRlcmZhY2VfYm94YCt0aGlzLmVsZW1lbnRJZCtge30KCQkJCQkJCSN2aXBfbW92aWVfYm94YCt0aGlzLmVsZW1lbnRJZCtgIC52aXBfbW9kX2JveF9hY3Rpb25fNjg3aWk+IC5pdGVtX2JveGArdGhpcy5lbGVtZW50SWQrYCA+LmludGVyZmFjZV9ib3hgK3RoaXMuZWxlbWVudElkK2A+c3Bhbntib3JkZXItcmFkaXVzOjNweDtib3JkZXItdG9wOjNweCBzb2xpZCBgK2NvbG9yK2A7IGJvcmRlci1ib3R0b206M3B4IHNvbGlkIGArY29sb3IrYDtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDpjYWxjKDI1JSAtIDZweCk7d2lkdGg6LW1vei1jYWxjKDI1JSAtIDZweCk7d2lkdGg6IC13ZWJraXQtY2FsYygyNSUgLSA2cHgpO2hlaWdodDoyMHB4O2xpbmUtaGVpZ2h0OjIwcHg7YmFja2dyb3VuZC1jb2xvcjpgK2NvbG9yK2A7Y29sb3I6I0ZGRjtjdXJzb3I6cG9pbnRlcjttYXJnaW46M3B4O3RleHQtYWxpZ246Y2VudGVyO292ZXJmbG93OmhpZGRlbjt3aGl0ZS1zcGFjZTogbm93cmFwO3RleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOy1vLXRleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7Zm9udC1zaXplOjEycHghaW1wb3J0YW50O30JCQkJCQkJCgkJCQkJCQkjdmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCAudmlwX21vZF9ib3hfYWN0aW9uXzY4N2lpPiAuaXRlbV9ib3hgK3RoaXMuZWxlbWVudElkK2AgPi5pbnRlcmZhY2VfYm94YCt0aGlzLmVsZW1lbnRJZCtgPnNwYW46aG92ZXJ7Ym9yZGVyLXRvcDozcHggc29saWQgYCtob3ZlckNvbG9yK2A7IGJvcmRlci1ib3R0b206M3B4IHNvbGlkIGAraG92ZXJDb2xvcitgO30KCQkJCQkJCSN2aXBfbW92aWVfYm94YCt0aGlzLmVsZW1lbnRJZCtgIC52aXBfbW9kX2JveF9hY3Rpb25fNjg3aWk+IC5pdGVtX2JveGArdGhpcy5lbGVtZW50SWQrYCA+LmludGVyZmFjZV9ib3hgK3RoaXMuZWxlbWVudElkK2A+c3Bhbi5zZWxlY3RlZHtib3JkZXItdG9wOjNweCBzb2xpZCBgK2hvdmVyQ29sb3IrYDsgYm9yZGVyLWJvdHRvbTozcHggc29saWQgYCtob3ZlckNvbG9yK2A7fQoJCQkJCQkJI3ZpcF9tb3ZpZV9ib3hgK3RoaXMuZWxlbWVudElkK2AgLnZpcF9tb2RfYm94X2FjdGlvbl82ODdpaT4gLml0ZW1fYm94YCt0aGlzLmVsZW1lbnRJZCtgID4uY29udGVudGArdGhpcy5lbGVtZW50SWQrYHtmb250LXNpemU6MTJweDtjb2xvcjojMDAwMDAwO21hcmdpbi1sZWZ0OjNweDt9CgkJCQkJCQlgCgkJCWNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNYWRkU3R5bGUoY3NzTW91bGQpOwoJCQkKCQkJLy/liqDlhaVIVE1MCgkJCXZhciBodG1sTW91bGQgPSBgPGRpdiBpZD0ndmlwX21vdmllX2JveGArdGhpcy5lbGVtZW50SWQrYCc+CgkJCQkJCQkJPGRpdiBjbGFzcz0ncGx1Z2luX2lubmVyX2ArdGhpcy5lbGVtZW50SWQrYCc+CgkJCQkJCQkJCTxkaXYgY2xhc3M9ImltZ19ib3hgK3RoaXMuZWxlbWVudElkK2AiIGlkPSJpbWdfYm94X2p1bXBfNjY2Nzg5N2lpbyI+PGltZyBzcmM9J2ArIHZpcFZpZGVvSW1hZ2VCYXNlNjQgK2AnIHRpdGxlPSfpgInmi6nop6PmnpDnur/ot68nLz48L2Rpdj4KCQkJCQkJCQkJPGRpdiBjbGFzcz0nc2hvd2hpZGVfYm94YCt0aGlzLmVsZW1lbnRJZCtgJz4JCQkJCQkJCQkKCQkJCQkJCQkJCTxkaXYgY2xhc3M9J3ZpcF9tb2RfYm94X2FjdGlvbl82ODdpaSBkZWZhdWx0LXNjcm9sbGJhci01NTY3OCc+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0naXRlbV9ib3hgK3RoaXMuZWxlbWVudElkK2AnPgoJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSd0aXRsZWArdGhpcy5lbGVtZW50SWQrYCc+PGI+5o6l5Y+j5re75YqgPC9iPjwvZGl2PgoJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSdjb250ZW50YCt0aGlzLmVsZW1lbnRJZCtgJz4KCQkJCQkJCQkJCQkJCeWvueeOsOacieaOpeWPo+S4jea7oeaEj++8n+WPr+a3u+WKoOiHquWumuS5ieaOpeWPo+WTn348c3BhbiBpZD0iaW1nX3NldF82NjY3ODk3aWlvIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2s7Ym9yZGVyLXJhZGl1czoycHg7bWFyZ2luLWxlZnQ6NXB4O3BhZGRpbmc6M3B4IDVweDtiYWNrZ3JvdW5kLWNvbG9yOiNDQ0M7Y3Vyc29yOnBvaW50ZXI7Ij7mt7vliqDmjqXlj6M8L3NwYW4+CgkJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9J2l0ZW1fYm94YCt0aGlzLmVsZW1lbnRJZCtgJz4KCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0naW50ZXJmYWNlX2JveGArdGhpcy5lbGVtZW50SWQrYCc+CgkJCQkJCQkJCQkJCQlgICsgY2F0ZWdvcnlfMV9odG1sICsgYAoJCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSdpdGVtX2JveGArdGhpcy5lbGVtZW50SWQrYCc+CgkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9J3RpdGxlYCt0aGlzLmVsZW1lbnRJZCtgJz48Yj7lhY3otKPlo7DmmI7vvJo8L2I+PC9kaXY+CgkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9J2NvbnRlbnRgK3RoaXMuZWxlbWVudElkK2AnPgoJCQkJCQkJCQkJCQkJMeOAgVZJUOinhumikeino+aekOS4reaJgOeUqOWIsOeahOino+aekOaOpeWPo+WFqOmDqOaUtumbhuiHquS6kuiBlOe9ke+8iOa6kOeggeWPr+inge+8ie+8jOeJiOadg+mXrumimOivt+iBlOezu+ebuOWFs+ino+aekOaOpeWPo+aJgOacieiAhe+8jOiEmuacrOS4jeaJv+aLheebuOWFs+i0o+S7u++8gSI8YnI+CgkJCQkJCQkJCQkJCQky44CB5Li65Yib6YCg6Imv5aW955qE5Yib5L2c5rCb5Zu077yM6K+35aSn5a625pSv5oyB5q2j54mI77yBPGJyPgoJCQkJCQkJCQkJCQkJM+OAgeiEmuacrOS7hemZkOS4quS6uuWtpuS5oOS6pOa1ge+8jOS9v+eUqOWNs+W3suS7o+ihqOaCqOW3sue7j+WFheWIhuS6huino+ebuOWFs+mXrumimO+8jOWQpuWImeWQjuaenOiHqui0n++8jOeJueatpOWjsOaYju+8gTxicj4KCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPGRpdiBjbGFzcz0iaW1nX2JveGArdGhpcy5lbGVtZW50SWQrYCIgaWQ9ImltZ19xdWlja2x5XzY2Njc4OTdpaW8iPjxpbWcgc3JjPSdgK3F1aWNrbHlCYXNlNjQrYCcgdGl0bGU9J+W/q+mAn+W8gOWniyjlvZPliY3miYDpgInmjqXlj6PvvJpgK2N1cnJlbnRRdWlja2x5SW50ZXJmYWNlT2JqZWN0Lm5hbWUrYCknLz48L2Rpdj4KCQkJCQkJCTwvZGl2PgoJCQkJCQkJYDsKCQkJJCgiYm9keSIpLmFwcGVuZChodG1sTW91bGQpOwoJCX07CgkJdGhpcy5ydW5FdmVudCA9IGZ1bmN0aW9uKCl7CSAvL+S6i+S7tui/kOihjAoJCQl2YXIgdGhhdCA9IHRoaXM7CgkJCSQoIiN2aXBfbW92aWVfYm94Iit0aGlzLmVsZW1lbnRJZCsiID4ucGx1Z2luX2lubmVyXyIrdGhpcy5lbGVtZW50SWQpLm9uKCJtb3VzZW92ZXIiLCAoKSA9PiB7CgkJCQkkKCIuc2hvd2hpZGVfYm94Iit0aGlzLmVsZW1lbnRJZCkuc2hvdygpOwoJCQl9KTsKCQkJJCgiI3ZpcF9tb3ZpZV9ib3giK3RoaXMuZWxlbWVudElkKyIgPi5wbHVnaW5faW5uZXJfIit0aGlzLmVsZW1lbnRJZCkub24oIm1vdXNlb3V0IiwgKCkgPT4gewoJCQkJJCgiLnNob3doaWRlX2JveCIrdGhpcy5lbGVtZW50SWQpLmhpZGUoKTsKCQkJfSk7CgkJCSQoImJvZHkiKS5vbigiY2xpY2siLCIjdmlwX21vdmllX2JveCIrdGhpcy5lbGVtZW50SWQrIiAudmlwX21vZF9ib3hfYWN0aW9uXzY4N2lpPi5pdGVtX2JveCIrdGhpcy5lbGVtZW50SWQrIj4uaW50ZXJmYWNlX2JveCIrdGhpcy5lbGVtZW50SWQrIj5zcGFuIixmdW5jdGlvbigpewoJCQkJdmFyIGluZGV4ID0gcGFyc2VJbnQoJCh0aGlzKS5hdHRyKCJkYXRhLWluZGV4IikpOwoJCQkJdmFyIHBsYXlPYmplY3QgPSB0aGF0Lm9yaWdpbmFsSW50ZXJmYWNlTGlzdFtpbmRleF07CgkJCQl0aGF0LnNob3dQbGF5ZXJXaW5kb3cocGxheU9iamVjdCk7CgkJCQkKCQkJCSQoIiN2aXBfbW92aWVfYm94Iit0aGF0LmVsZW1lbnRJZCsiIC52aXBfbW9kX2JveF9hY3Rpb25fNjg3aWk+IC5pdGVtX2JveCIrdGhhdC5lbGVtZW50SWQrIj4uaW50ZXJmYWNlX2JveCIrdGhhdC5lbGVtZW50SWQrIj5zcGFuIikucmVtb3ZlQ2xhc3MoInNlbGVjdGVkIik7CgkJCQkkKHRoaXMpLmFkZENsYXNzKCJzZWxlY3RlZCIpOwoJCQkJY29tbW9uRnVuY3Rpb25PYmplY3QuR01zZXRWYWx1ZSh0aGF0LnF1aWNrbHlJbnRlcmZhY2VLZXksIGluZGV4KTsKCQkJCQoJCQkJJCgiI2ltZ19xdWlja2x5XzY2Njc4OTdpaW8iKS5maW5kKCJpbWciKS5hdHRyKCJ0aXRsZSIsIuW/q+mAn+W8gOWniyjlvZPliY3miYDpgInmjqXlj6PvvJoiK3BsYXlPYmplY3QubmFtZSsiKSIpOwoJCQl9KTsKCQkJCQkJCgkJCS8v54K55Ye76KeG6aKR5pKt5pS+55WM6Z2iCgkJCSQoIiNpbWdfYm94X2p1bXBfNjY2Nzg5N2lpbyIpLm9uKCJjbGljayIsIGZ1bmN0aW9uKCl7CgkJCQljb21tb25GdW5jdGlvbk9iamVjdC5HTW9wZW5JblRhYigiaHR0cHM6Ly9sYWlzb3lpYmEuY29tL21vdi9zLz9zdj0zJnVybD0iK3dpbmRvdy5sb2NhdGlvbi5ocmVmLCBmYWxzZSk7CgkJCX0pOwoJCQkKCQkJLy/ngrnlh7vlvLnlh7rorr7nva7moYYKCQkJJCgiI2ltZ19zZXRfNjY2Nzg5N2lpbyIpLm9uKCJjbGljayIsIGZ1bmN0aW9uKCl7CgkJCQl0aGF0LnNob3dTZXRpbmdEaWFsb2coKTsKCQkJfSk7CgkJCQoJCQkkKCIjaW1nX3F1aWNrbHlfNjY2Nzg5N2lpbyIpLm9uKCJjbGljayIsIGZ1bmN0aW9uKCl7CgkJCQljb25zdCBxdWlja2x5SW50ZXJmYWNlSW5kZXggPSB0aGF0LmdldFF1aWNrbHlJbnRlcmZhY2VJbmRleCgpOwoJCQkJdmFyIHBsYXlPYmplY3QgPSB0aGF0Lm9yaWdpbmFsSW50ZXJmYWNlTGlzdFtxdWlja2x5SW50ZXJmYWNlSW5kZXhdOwoJCQkJdGhhdC5zaG93UGxheWVyV2luZG93KHBsYXlPYmplY3QpOwoJCQl9KTsKCQkJCgkJCS8v5Y+z6ZSu56e75Yqo5L2N572uCgkJCXZhciBtb3ZpZV9ib3ggPSAkKCIjdmlwX21vdmllX2JveCIrdGhpcy5lbGVtZW50SWQpOwoJCQltb3ZpZV9ib3gubW91c2Vkb3duKGZ1bmN0aW9uKGUpIHsKCQkJCWlmIChlLndoaWNoID09IDMpIHsKCQkJCQllLnByZXZlbnREZWZhdWx0KCkKCQkJCQltb3ZpZV9ib3guY3NzKCJjdXJzb3IiLCAibW92ZSIpOwoJCQkJCXZhciBwb3NpdGlvbkRpdiA9ICQodGhpcykub2Zmc2V0KCk7CgkJCQkJdmFyIGRpc3RlbmNlWCA9IGUucGFnZVggLSBwb3NpdGlvbkRpdi5sZWZ0OwoJCQkJCXZhciBkaXN0ZW5jZVkgPSBlLnBhZ2VZIC0gcG9zaXRpb25EaXYudG9wOwoJCQkJCQoJCQkJCSQoZG9jdW1lbnQpLm1vdXNlbW92ZShmdW5jdGlvbihlKSB7CgkJCQkJCXZhciB4ID0gZS5wYWdlWCAtIGRpc3RlbmNlWDsKCQkJCQkJdmFyIHkgPSBlLnBhZ2VZIC0gZGlzdGVuY2VZOwoJCQkJCQl2YXIgd2luZG93V2lkdGggPSAkKHdpbmRvdykud2lkdGgoKTsKCQkJCQkJdmFyIHdpbmRvd0hlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTsKCQkJCQkJCgkJCQkJCWlmICh4IDwgMCkgewoJCQkJCQkJeCA9IDA7CgkJCQkJCX0gZWxzZSBpZiAoeCA+ICB3aW5kb3dXaWR0aC0gbW92aWVfYm94Lm91dGVyV2lkdGgodHJ1ZSkgLSAxMDApIHsKCQkJCQkJCXggPSB3aW5kb3dXaWR0aCAtIG1vdmllX2JveC5vdXRlcldpZHRoKHRydWUpIC0gMTAwOwoJCQkJCQl9CgkJCQkJCQoJCQkJCQlpZiAoeSA8IDApIHsKCQkJCQkJCXkgPSAwOwoJCQkJCQl9IGVsc2UgaWYgKHkgPiB3aW5kb3dIZWlnaHQgLSBtb3ZpZV9ib3gub3V0ZXJIZWlnaHQodHJ1ZSkpIHsKCQkJCQkJCXkgPSB3aW5kb3dIZWlnaHQgLSBtb3ZpZV9ib3gub3V0ZXJIZWlnaHQodHJ1ZSk7CgkJCQkJCX0KCQkJCQkJbW92aWVfYm94LmNzcygibGVmdCIsIHgpOwoJCQkJCQltb3ZpZV9ib3guY3NzKCJ0b3AiLCB5KTsKCQkJCQkJY29tbW9uRnVuY3Rpb25PYmplY3QuR01zZXRWYWx1ZSgiUG9zaXRpb25fIiArIHdpbmRvdy5sb2NhdGlvbi5ob3N0LHsgImxlZnQiOngsICJ0b3AiOnl9KTsKCQkJCQl9KTsKCQkJCQkkKGRvY3VtZW50KS5tb3VzZXVwKGZ1bmN0aW9uKCkgewoJCQkJCQkkKGRvY3VtZW50KS5vZmYoJ21vdXNlbW92ZScpOwoJCQkJCQltb3ZpZV9ib3guY3NzKCJjdXJzb3IiLCAicG9pbnRlciIpOwoJCQkJCX0pOwoJCQkJCSQoZG9jdW1lbnQpLmNvbnRleHRtZW51KGZ1bmN0aW9uKGUpIHsKCQkJCQkJZS5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJCX0pCgkJCQl9CgkJCX0pOwoJCX07CgkJdGhpcy5yZW1vdmVWaWRlb0FkQmxvY2tfaXFpeWkgPSBmdW5jdGlvbigpewoJCQkKCQl9LAoJCXRoaXMucmVtb3ZlVmlkZW9BZEJsb2NrX3ZxcSA9IGZ1bmN0aW9uKCl7CgoJCX0sCgkJdGhpcy5yZW1vdmVWaWRlb0FkQmxvY2tfeW91a3UgPSBmdW5jdGlvbigpewoJCQkKCQl9LAoJCXRoaXMucmVtb3ZlVmlkZW9BZEJsb2NrX21ndHYgPSBmdW5jdGlvbigpewoJCQkKCQl9LAoJCXRoaXMucmVtb3ZlVmlkZW9BZEJsb2NrX3NvaHUgPSBmdW5jdGlvbigpewoJCQkKCQl9LAoJCXRoaXMucmVtb3ZlVmlkZW9BZEJsb2NrID0gZnVuY3Rpb24oKXsKCQkJY29uc3QgY3VycmVudEhvc3QgPSB3aW5kb3cubG9jYXRpb24uaG9zdDsKCQkJaWYoY3VycmVudEhvc3QuaW5kZXhPZigid3d3LmlxaXlpLmNvbSIpIT0tMSl7CgkJCQl0aGlzLnJlbW92ZVZpZGVvQWRCbG9ja19pcWl5aSgpOwoJCQl9ZWxzZSBpZihjdXJyZW50SG9zdC5pbmRleE9mKCJ2LnFxLmNvbSIpIT0tMSl7CgkJCQl0aGlzLnJlbW92ZVZpZGVvQWRCbG9ja192cXEoKTsKCQkJfWVsc2UgaWYoY3VycmVudEhvc3QuaW5kZXhPZigidi55b3VrdS5jb20iKSE9LTEpewoJCQkJdGhpcy5yZW1vdmVWaWRlb0FkQmxvY2tfeW91a3UoKTsKCQkJfWVsc2UgaWYoY3VycmVudEhvc3QuaW5kZXhPZigid3d3Lm1ndHYuY29tIikhPS0xKXsKCQkJCXRoaXMucmVtb3ZlVmlkZW9BZEJsb2NrX21ndHYoKTsKCQkJfWVsc2UgaWYoY3VycmVudEhvc3QuaW5kZXhPZigidHYuc29odS5jb20iKSE9LTEpewoJCQkJdGhpcy5yZW1vdmVWaWRlb0FkQmxvY2tfc29odSgpOwoJCQl9CgkJfTsKCQl0aGlzLnNob3dTZXRpbmdEaWFsb2cgPSBmdW5jdGlvbigpewoJCQljb25zdCB0aGF0ID0gdGhpczsKCQkJdmFyIGN1c3RvbUludGVyZmFjZUtleSA9IHRoYXQuY3VzdG9tSW50ZXJmYWNlS2V5OwoJCQl2YXIgY3VzdG9tSW50ZXJmYWNlID0gY29tbW9uRnVuY3Rpb25PYmplY3QuR01nZXRWYWx1ZShjdXN0b21JbnRlcmZhY2VLZXksICIiKTsKCQkJCgkJCXZhciBjb250ZW50ID0gYAoJCQkJPGRpdj4KCQkJCQk8ZGl2IHN0eWxlPSJmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDA7Y29sb3I6IzAwMDsiPuiHquWumuS5ieino+aekOaOpeWPozwvZGl2PgoJCQkJCTxkaXYgc3R5bGU9ImZvbnQtc2l6ZToxM3B4O2NvbG9yOnJlZDsiPgkJCQkJCgkJCQkJCeaVsOaNruagvOW8j++8mlvlkI3lrZddICsgWyxdICsgW+aOpeWPo+WcsOWdgF08YnI+CgkJCQkJCeS+i+Wmgu+8muWwseaYr+WQjeWtl+iAjOW3sixodHRwczovL2p4LmlkYzEyNi5uZXQvangvP3VybD0JPGJyPgoJCQkJCQnms6jvvJrkuIDooYzkuIDkuKoKCQkJCQk8L2Rpdj4KCQkJCQk8ZGl2IHN0eWxlPSJtYXJnaW4tdG9wOjVweDtoZWlnaHQ6MjAwcHg7d2lkdGg6MTAwJTsiPgoJCQkJCQk8dGV4dGFyZWEgCgkJCQkJCQlwbGFjZWhvbGRlcj0i6K+35Lil5qC85oyJ54Wn5qC85byP5aGr5YaZ77yM5ZCm5YiZ5LiN55Sf5pWIIgoJCQkJCQkJY2xhc3M9ImN1c3RvbS1pbnRlcmZhY2UtdGV4dGFyZWEiCgkJCQkJCQlzdHlsZT0iZm9udC1zaXplOjE0cHg7Ym94LXNpemluZzogYm9yZGVyLWJveDstd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7LW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O3BhZGRpbmc6NXB4O2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7T3ZlcmZsb3c6YXV0bztib3JkZXI6MXB4IHNvbGlkICNjY2M7cmVzaXplOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojRkZGO291dGxpbmU6bm9uZTsiPmArY3VzdG9tSW50ZXJmYWNlK2A8L3RleHRhcmVhPgoJCQkJCTwvZGl2PgoJCQkJCTxkaXYgc3R5bGU9InRleHQtYWxpZ246Y2VudGVyO21hcmdpbi10b3A6MTVweDsiPgoJCQkJCQk8YnV0dG9uIGNsYXNzPSJzYXZlLWN1c3RvbS1pbnRlcmZhY2UtYnRuIj7kv53lrZjoh6rlrprkuYnmjqXlj6M8L2J1dHRvbj4KCQkJCQk8L2Rpdj4KCQkJCTwvZGl2PgoJCQlgOwoJCQlwb3B1cC5kaWFsb2coewoJCQkJInRpdGxlIjoi6Kej5p6Q5o6l5Y+j5re75YqgIiwKCQkJCSJjb250ZW50Ijpjb250ZW50LAoJCQkJIm9uQ29udGVudFJlYWR5IjpmdW5jdGlvbigkdGhhdCl7CgkJCQkJdmFyICRzYXZlQ3VzdG9tSW50ZXJmYWNlQnRuID0gJHRoYXQuZGlhbG9nQ29udGVudC5xdWVyeVNlbGVjdG9yKCIuc2F2ZS1jdXN0b20taW50ZXJmYWNlLWJ0biIpOwoJCQkJCSRzYXZlQ3VzdG9tSW50ZXJmYWNlQnRuLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24oKXsKCQkJCQkJdmFyICRjdXN0b21JbnRlcmZhY2VUZXh0YXJlYSA9ICR0aGF0LmRpYWxvZ0NvbnRlbnQucXVlcnlTZWxlY3RvcigiLmN1c3RvbS1pbnRlcmZhY2UtdGV4dGFyZWEiKTsKCQkJCQkJdmFyIGNvbnRlbnQgPSAkY3VzdG9tSW50ZXJmYWNlVGV4dGFyZWEudmFsdWU7CgkJCQkJCWNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNc2V0VmFsdWUoY3VzdG9tSW50ZXJmYWNlS2V5LCBjb250ZW50KTsKCQkJCQkJY29tbW9uRnVuY3Rpb25PYmplY3Qud2ViVG9hc3QoeyJtZXNzYWdlIjoi6Ieq5a6a5LmJ5o6l5Y+j5L+d5a2Y5oiQ5YqfIiwgImJhY2tncm91bmQiOiIjRkY0RDQwIn0pOwoJCQkJCX0pOwoJCQkJfQoJCQl9KQoJCX0KCQl0aGlzLnN0YXJ0ID0gZnVuY3Rpb24oKXsJCQkKCQkJbGV0IGRlbGF5VGltZU1zID0gMDsKCQkJaWYod2luZG93LmxvY2F0aW9uLmhvc3QuaW5kZXhPZigid3d3LmJpbGliaWxpLmNvbSIpIT0tMSl7CgkJCQlkZWxheVRpbWVNcyA9IDIyMDA7CgkJCX0KCQkJc2V0VGltZW91dCgoKT0+ewoJCQkJdHJ5ewoJCQkJCXRoaXMucmVtb3ZlVmlkZW9BZEJsb2NrKCk7CgkJCQl9Y2F0Y2goZSl7fQoJCQkJdHJ5ewoJCQkJCXRoaXMuYW5hbHlzaXNDdXN0b21JbnRlcmZhY2UoKTsKCQkJCQl0aGlzLmFkZEh0bWxFbGVtZW50cygpOwoJCQkJCXRoaXMucnVuRXZlbnQoKTsKCQkJCX1jYXRjaChlKXt9CgkJCX0sIGRlbGF5VGltZU1zKTsKCQl9OwoJfTsKCQoJLyoqCgkgKiDnp7vliqjnq69WSVDop6PmnpAKCSAqIEBwYXJhbSB7T2JqZWN0fSBvcmlnaW5hbEludGVyZmFjZUxpc3QKCSAqLwoJZnVuY3Rpb24gc3VwZXJWaWRlb0hlbHBlck1vYmlsZShvcmlnaW5hbEludGVyZmFjZUxpc3QpewoJCXRoaXMub3JpZ2luYWxJbnRlcmZhY2VMaXN0ID0gb3JpZ2luYWxJbnRlcmZhY2VMaXN0OwoJCXRoaXMuZWxlbWVudElkID0gTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkqMTAwMDAwMDAwKSsibW14IjsKCQl0aGlzLnF1aWNrbHlJbnRlcmZhY2VLZXkgPSAiY3VzdG9tX21vYmlsZV9xdWlja2x5X2ludGVyZmFjZV9rZXlfZGRkc2R4eGEiOwoJCXRoaXMuZGVmYXVsdFF1aWNrbHlJbnRlcmZhY2VJbmRleCA9IDI7CgkJdGhpcy5wbGF5ZXJOb2Rlcz1bCgkJCXsidXJsIjoibS5pcWl5aS5jb20iLCAic2hvd05vZGUiOiIubS12aWRlby1wbGF5ZXItd3JhcCIsICJjb2xvciI6IiMwNUIwM0IifSwKCQkJeyJ1cmwiOiJtLnYucXEuY29tIiwgInNob3dOb2RlIjoiLm1vZF9wbGF5ZXIiLCAiY29sb3IiOiIjRjk5RDM5In0sCgkJCXsidXJsIjoibS55b3VrdS5jb20iLCAic2hvd05vZGUiOiIuaDUtZGV0YWlsLXBsYXllciIsICJjb2xvciI6IiMwOEJBRkQifSwKCQkJeyJ1cmwiOiJtLm1ndHYuY29tIiwgInNob3dOb2RlIjoiLnZpZGVvLWFyZWEiLCAiY29sb3IiOiIjRTk1OTA0In0sCgkJCXsidXJsIjoibS5iaWxpYmlsaS5jb20iLCAic2hvd05vZGUiOiIucGxheWVyLXdyYXBwZXIiLCAiY29sb3IiOiIjRkI3Mjk5In0sCgkJXTsKCQl0aGlzLmlzUnVuID0gZnVuY3Rpb24oKXsgLy/liKTmlq3mmK/lkKbov5DooYwKCQkJY29uc3QgaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0OwoJCQljb25zdCB1cmxzID0gWyJtLmlxaXlpLmNvbSIsIm0udi5xcS5jb20iLCJtLnlvdWt1LmNvbSIsICJtLm1ndHYuY29tIiwgIm0uYmlsaWJpbGkuY29tIl07CgkJCXZhciByZXN1bHQgPSBmYWxzZTsKCQkJaWYoaG9zdC5zdGFydHNXaXRoKCJtLiIpKXsgLy/mmK/np7vliqjnq6/miafooYwKCQkJCWZvcih2YXIgaT0wOyBpPHVybHMubGVuZ3RoOyBpKyspewoJCQkJCWlmKGhvc3QuaW5kZXhPZih1cmxzW2ldKSAhPSAtMSl7CgkJCQkJCXJlc3VsdCA9IHRydWU7CgkJCQkJCWJyZWFrOwoJCQkJCX0KCQkJCX0KCQkJfQoJCQlyZXR1cm4gcmVzdWx0OwoJCX07CgkJdGhpcy5nZXR3aW5kb3dFbGVtZW50ID0gZnVuY3Rpb24oKXsKCQkJdmFyIG5vZGVPYmplY3QgPSBudWxsOwoJCQlmb3IodmFyIGkgaW4gdGhpcy5wbGF5ZXJOb2RlcykgeyAvL+iOt+W+l+eql+WPo0lECgkJCQlpZiAodGhpcy5wbGF5ZXJOb2Rlc1tpXS51cmwgPT0gd2luZG93LmxvY2F0aW9uLmhvc3QpIHsKCQkJCQlub2RlT2JqZWN0ID0gdGhpcy5wbGF5ZXJOb2Rlc1tpXTsKCQkJCQlicmVhazsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gbm9kZU9iamVjdDsKCQl9OwoJCXRoaXMuZ2V0UXVpY2tseUludGVyZmFjZUluZGV4ID0gZnVuY3Rpb24oKXsKCQkJdmFyIHF1aWNrbHlJbnRlcmZhY2VJbmRleFN0cmluZyA9IGNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNZ2V0VmFsdWUodGhpcy5xdWlja2x5SW50ZXJmYWNlS2V5LCIiKSsiIjsKCQkJdmFyIHF1aWNrbHlJbnRlcmZhY2VJbmRleCA9IHRoaXMuZGVmYXVsdFF1aWNrbHlJbnRlcmZhY2VJbmRleDsKCQkJaWYoISFxdWlja2x5SW50ZXJmYWNlSW5kZXhTdHJpbmcpewoJCQkJcXVpY2tseUludGVyZmFjZUluZGV4ID0gcGFyc2VJbnQocXVpY2tseUludGVyZmFjZUluZGV4U3RyaW5nKTsKCQkJfQoJCQlpZih0aGlzLm9yaWdpbmFsSW50ZXJmYWNlTGlzdC5sZW5ndGgtMTxxdWlja2x5SW50ZXJmYWNlSW5kZXgpewoJCQkJcXVpY2tseUludGVyZmFjZUluZGV4ID0gdGhpcy5kZWZhdWx0UXVpY2tseUludGVyZmFjZUluZGV4OwoJCQl9CgkJCXJldHVybiBxdWlja2x5SW50ZXJmYWNlSW5kZXg7CgkJfTsKCQl0aGlzLmFkZEh0bWxFbGVtZW50cyA9IGZ1bmN0aW9uKCl7CgkJCWxldCBub2RlT2JqZWN0ID0gdGhpcy5nZXR3aW5kb3dFbGVtZW50KCk7CgkJCWNvbnN0IHF1aWNrbHlJbnRlcmZhY2VJbmRleCA9IHRoaXMuZ2V0UXVpY2tseUludGVyZmFjZUluZGV4KCk7CgkJCWlmKCFub2RlT2JqZWN0KSByZXR1cm47CgkJCXJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KT0+ewoJCQkJY29uc3QgZWxlbWVudEludGVydmFsID0gc2V0SW50ZXJ2YWwoKCk9PnsKCQkJCQljb25zdCBub2RlRWxlbWVudE9iamVjdCA9ICQobm9kZU9iamVjdC5zaG93Tm9kZSksIHRoZW1lQ29sb3IgPSBub2RlT2JqZWN0LmNvbG9yOwoJCQkJCQoJCQkJCWlmKG5vZGVFbGVtZW50T2JqZWN0Lmxlbmd0aCA9PSAwKSByZXR1cm47CgkJCQkJY2xlYXJJbnRlcnZhbChlbGVtZW50SW50ZXJ2YWwpOwoJCQkJCQkJCQkJCgkJCQkJLy/mt7vliqBIVE1MCgkJCQkJbGV0IGNhdGVnb3J5XzFfaHRtbCA9ICIiOwoJCQkJCXRoaXMub3JpZ2luYWxJbnRlcmZhY2VMaXN0LmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7CgkJCQkJCWlmIChpdGVtLnNob3dUeXBlICE9IDEpIHsKCQkJCQkJCXZhciBzZWxlY3RlZCA9ICIiOwoJCQkJCQkJaWYoaW5kZXg9PXF1aWNrbHlJbnRlcmZhY2VJbmRleCl7CgkJCQkJCQkJc2VsZWN0ZWQgPSAic2VsZWN0ZWQiOwoJCQkJCQkJfQoJCQkJCQkJY2F0ZWdvcnlfMV9odG1sICs9ICI8b3B0aW9uIHZhbHVlPSciK2l0ZW0udXJsKyInIGluZGV4PSciK2luZGV4KyInICIrc2VsZWN0ZWQrIj4iK2l0ZW0ubmFtZSsiPC9vcHRpb24+IjsKCQkJCQkJfQoJCQkJCX0pOwoJCQkJCXZhciBodG1sTW91bGQgPSBgCgkJCQkJCTxkaXYgc3R5bGU9Im1hcmdpbjoxNXB4IDE1cHggNTBweCAxNXB4O3BhZGRpbmc6MTBweDtiYWNrZ3JvdW5kLWNvbG9yOmArdGhlbWVDb2xvcitgO2JvcmRlci1yYWRpdXM6NHB4O2N1cnNvcjpwb2ludGVyO3otaW5kZXg6IDk5OTk5OTk5OTk5OTk5OTk5OTk5OTtjb2xvcjojRkZGOyI+CgkJCQkJCQkJPGRpdiBzdHlsZT0iZm9udC13ZWlnaHQ6NzAwO2ZvbnQtc2l6ZToxNHB4O3RleHQtYWxpZ246Y2VudGVyOyI+CgkJCQkJCQkJCTxzcGFuPumAieaLqeino+aekOaOpeWPozwvc3Bhbj4KCQkJCQkJCQkJPHNlbGVjdCBpZD0iaW50ZXJmYWNlX3NlbGVjdGlvbl9gK3RoaXMuZWxlbWVudElkK2AiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiNGRkY7cGFkZGluZzogMHB4IDEwcHg7Ij4KCQkJCQkJCQkJCWArY2F0ZWdvcnlfMV9odG1sK2AKCQkJCQkJCQkJPC9zZWxlY3Q+CgkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPGRpdiBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXI7Ij4KCQkJCQkJCQkJPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgaWQ9InN0YXJ0X2FuYWx5c2lzX291dGVyX2ArdGhpcy5lbGVtZW50SWQrYCIgc3R5bGU9ImJveC1zaXppbmc6Ym9yZGVyLWJveDttYXJnaW46MTBweCAwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZzoxMHB4IDBweDt3aWR0aDoxMDAlO2JvcmRlci1yYWRpdXM6NHB4O2NvbG9yOiNGRkY7YmFja2dyb3VuZC1jb2xvcjojRjI1MDNGO2ZvbnQtc2l6ZToxNHB4OyI+56uZ5aSW6Kej5p6QPC9hPgoJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCTxkaXYgc3R5bGU9InRleHQtYWxpZ246bGVmdDtmb250LXNpemU6MTBweDsiPgoJCQkJCQkJCQk8ZGl2PgoJCQkJCQkJCQkJ5YWN6LSj55Sz5piO77yaMeOAgVZJUOinhumikeino+aekOS4reaJgOeUqOWIsOeahOino+aekOaOpeWPo+WFqOmDqOaUtumbhuiHquS6kuiBlOe9ke+8iOa6kOeggeWPr+inge+8ie+8jOeJiOadg+mXrumimOivt+iBlOezu+ebuOWFs+ino+aekOaOpeWPo+aJgOacieiAhe+8gQoJCQkJCQkJCQkJMuOAgeS4uuWIm+mAoOiJr+WlveeahOWIm+S9nOawm+WbtO+8jOivt+Wkp+WutuaUr+aMgeato+eJiO+8gQoJCQkJCQkJCQkJM+OAgeiEmuacrOS7hemZkOS4quS6uuWtpuS5oOS6pOa1ge+8jOWIh+WLv+eUqOS6juS7u+S9leWVhuS4muetieWFtuWug+eUqOmAlO+8gQoJCQkJCQkJCQkJNOOAgee7p+e7reS9v+eUqO+8jOWNs+ihqOaYjuS9oOW3sue7j+aYjuehruS9v+eUqOiEmuacrOWPr+iDveW4puadpeeahOmjjumZqe+8jOS4lOaEv+aEj+iHquihjOaJv+aLheebuOWFs+mjjumZqe+8jOWvueS6jumjjumZqeiEmuacrOS4jeaJv+aLheS7u+S9lei0o+S7u++8gQoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJPC9kaXY+CgkJCQkJYDsKCQkJCQlub2RlRWxlbWVudE9iamVjdC5hZnRlcihodG1sTW91bGQpOwoJCQkJCXJlc29sdmUoIm9rIik7CgkJCQl9LCAxMDApOwoJCQl9KTsKCQl9OwoJCXRoaXMuZ2V0UGxheU9iamVjdEJ5U2VsZWN0ID0gZnVuY3Rpb24oKXsKCQkJCgkJCXZhciBpbmRleFN0cmluZyA9ICQoIiNpbnRlcmZhY2Vfc2VsZWN0aW9uXyIrdGhpcy5lbGVtZW50SWQpLmZpbmQoIm9wdGlvbjpzZWxlY3RlZCIpLmF0dHIoImluZGV4Iik7CgkJCXZhciBpbmRleCA9IDA7CgkJCWlmKCEhaW5kZXhTdHJpbmcpewoJCQkJaW5kZXggPSBwYXJzZUludChpbmRleFN0cmluZyk7CgkJCX0KCQkJcmV0dXJuIHRoaXMub3JpZ2luYWxJbnRlcmZhY2VMaXN0W2luZGV4XTsKCQl9OwoJCXRoaXMucnVuRXZlbnQgPSBmdW5jdGlvbigpewkgLy/kuovku7bov5DooYwKCQkJY29uc3Qgc2VsZiA9IHRoaXM7CgoJCQkvL+WIneWni+WMlgoJCQl2YXIgcGxheU9iamVjdCA9IHNlbGYuZ2V0UGxheU9iamVjdEJ5U2VsZWN0KCk7CgkJCSQoJyNzdGFydF9hbmFseXNpc19vdXRlcl8nK3NlbGYuZWxlbWVudElkKS5hdHRyKCJocmVmIiwgcGxheU9iamVjdC51cmwgKyB3aW5kb3cubG9jYXRpb24uaHJlZik7CgkJCSQoJyNzdGFydF9hbmFseXNpc19vdXRlcl8nK3NlbGYuZWxlbWVudElkKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkgewoJCQkJaWYoY29tbW9uRnVuY3Rpb25PYmplY3QuR01nZXRWYWx1ZSgiY29weXJpZ2h0X3ZpZGVvX3JlbWluZF9tb2JpbGVfb3V0ZXIiLG51bGwpPT09InRydWUiKXsKCQkJCQkKCQkJCX1lbHNlewoJCQkJCXZhciByPWNvbmZpcm0oCgkJCQkJCSLohJrmnKzov5DooYzmj5DphpLvvIHvvIHvvIFcdTAwMGQiKwoJCQkJCQki5L2/55So56uZ5aSW6Kej5p6Q5Yqf6IO977yM6KeG6aKR6Kej5p6Q5pe26ISa5pys6Lez5Ye65pys6aG16Z2i77yM5aaC5LiN5ZCM5oSP5q2k6ISa5pys6KGM5Li677yM6K+354K55Ye744CQ5Y+W5raI44CR5oyJ6ZKu77yB77yBIgoJCQkJCSk7CgkJCQkJaWYocj09ZmFsc2UpewoJCQkJCQllLnByZXZlbnREZWZhdWx0KCk7CgkJCQkJfWVsc2V7CgkJCQkJCWNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNc2V0VmFsdWUoImNvcHlyaWdodF92aWRlb19yZW1pbmRfbW9iaWxlX291dGVyIiwidHJ1ZSIpOwoJCQkJCX0KCQkJCX0KCQkJfSk7CgkJCS8v5o6l5Y+j5YiH5o2iCgkJCSQoJyNpbnRlcmZhY2Vfc2VsZWN0aW9uXycrc2VsZi5lbGVtZW50SWQpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7CgkJCQl2YXIgJG9wdGlvbiA9ICQodGhpcykuZmluZCgib3B0aW9uOnNlbGVjdGVkIik7CgkJCQl2YXIgdmFsdWUgPSAkb3B0aW9uLnZhbCgpOwoJCQkJdmFyIGluZGV4ID0gcGFyc2VJbnQoJG9wdGlvbi5hdHRyKCJpbmRleCIpKTsKCQkJCSQoJyNzdGFydF9hbmFseXNpc19vdXRlcl8nK3NlbGYuZWxlbWVudElkKS5hdHRyKCJocmVmIiwgdmFsdWUrd2luZG93LmxvY2F0aW9uLmhyZWYpOwoJCQkJY29tbW9uRnVuY3Rpb25PYmplY3QuR01zZXRWYWx1ZShzZWxmLnF1aWNrbHlJbnRlcmZhY2VLZXksIGluZGV4KTsKCQkJfSk7CgkJfTsKCQl0aGlzLnN0YXJ0ID0gZnVuY3Rpb24oKXsKCQkJY29uc3Qgc2VsZiA9IHRoaXM7CgkJCWlmKHRoaXMuaXNSdW4oKSl7CgkJCQl0aGlzLmFkZEh0bWxFbGVtZW50cygpLnRoZW4oKCk9PnsKCQkJCQlzZWxmLnJ1bkV2ZW50KCk7CgkJCQl9KTsKCQkJfQoJCX0KCX0KCQoJLyoqCgkgKiBC56uZ55u45YWz5Yqf6IO977ya6KeG6aKR5aSaUOS4i+i9ve+8jOS4gOmUruS4ieiBlO+8jOa1j+iniOiusOW9leetiQoJICovCglmdW5jdGlvbiBiaWxpYmlsaUhlbHBlcigpewoJCXRoaXMuZG93bmxvYWRWaWRlb0NvaW4gPSBmdW5jdGlvbigpewoJCQlmdW5jdGlvbiBpbm5lckNsYXNzRG93bmxvYWRWaWRlb0NvaW4oKXsgLy/op4bpopHkuIvovb3kuIDplK7kuInogZRjbGFzcwoJCQkJdGhpcy5lbGVtZW50SWQgPSBNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSoxMDAwMDAwMDApKyJtbXgiOwoJCQkJdGhpcy5kb3dubG9hZFJlc3V0RXJyb3I9ZnVuY3Rpb24oJGJ0bil7CgkJCQkJJGJ0bi50ZXh0KCLkuIvovb3op4bpopHvvIjmnIDpq5jmuIXvvIkiKTsKCQkJCQkkYnRuLnJlbW92ZUF0dHIoImRpc2FibGVkIik7CgkJCQl9OwoJCQkJdGhpcy5kb3dubG9hZFJlc3V0U3VjY2Vzcz1mdW5jdGlvbigkYnRuKXsKCQkJCQkkYnRuLnRleHQoIuS4i+i9veinhumike+8iOacgOmrmOa4he+8iSIpOwoJCQkJCSRidG4ucmVtb3ZlQXR0cigiZGlzYWJsZWQiKTsKCQkJCX07CgkJCQl0aGlzLmdldERvd25sb2FkUGFnZXMgPSBmdW5jdGlvbigpewoJCQkJCXJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHsKCQkJCQkJdmFyIHBhdGhuYW1lID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLCBidiA9IG51bGw7CgkJCQkJCWlmIChwYXRobmFtZS5pbmRleE9mKCIvbWVkaWFsaXN0L3BsYXkvd2F0Y2hsYXRlci8iKSAhPSAtMSkgeyAvLyDlnKjkuIvovb3op4bpopHnmoTml7blgJnpkojlr7nnqI3lkI7lho3nnIvpobXpnaLnmoTpk77mjqXmib5CVuWPtwoJCQkJCQkgICAgYnYgPSBwYXRobmFtZS5yZXBsYWNlKCIvbWVkaWFsaXN0L3BsYXkvd2F0Y2hsYXRlci8iLCIiKS5yZXBsYWNlKCIvIiwiIik7CgkJCQkJCX1lbHNlewoJCQkJCQkJYnYgPSBwYXRobmFtZS5yZXBsYWNlKCIvdmlkZW8vIiwiIikucmVwbGFjZSgiLyIsIiIpOwoJCQkJCQl9CgkJCQkJCWlmKCFidil7CgkJCQkJCQlyZXNvbHZlKHsic3RhdHVzIjoiYnZfbnVsbCJ9KTsKCQkJCQkJCXJldHVybjsKCQkJCQkJfQoJCQkJCQkvL2J26L2sYXYKCQkJCQkJY29tbW9uRnVuY3Rpb25PYmplY3QucmVxdWVzdCgiZ2V0IiwgImh0dHA6Ly9hcGkuYmlsaWJpbGkuY29tL3gvd2ViLWludGVyZmFjZS9hcmNoaXZlL3N0YXQ/YnZpZD0iK2J2LCBudWxsKS50aGVuKChyZXN1bHREYXRhKT0+ewoJCQkJCQkJbGV0IGRhdGFKc29uID0gSlNPTi5wYXJzZShyZXN1bHREYXRhLmRhdGEpOwoJCQkJCQkJaWYoIWRhdGFKc29uIHx8IGRhdGFKc29uLmNvZGUhPT0wIHx8ICFkYXRhSnNvbi5kYXRhKXsKCQkJCQkJCQlyZXNvbHZlKHsic3RhdHVzIjoicmVxdWVzdF9lcnJvciJ9KTsKCQkJCQkJCQlyZXR1cm47CgkJCQkJCQl9CgkJCQkJCQkKCQkJCQkJCWxldCBhaWQgPSBkYXRhSnNvbi5kYXRhLmFpZDsKCQkJCQkJCWlmKCFhaWQpewoJCQkJCQkJCXJlc29sdmUoeyJzdGF0dXMiOiJhaWRfbnVsbCJ9KTsKCQkJCQkJCQlyZXR1cm47CgkJCQkJCQl9CgkJCQkJCQkKCQkJCQkJCS8v6I635Y+WY2lkCgkJCQkJCQljb21tb25GdW5jdGlvbk9iamVjdC5yZXF1ZXN0KCJnZXQiLCAiaHR0cHM6Ly9hcGkuYmlsaWJpbGkuY29tL3gvd2ViLWludGVyZmFjZS92aWV3P2FpZD0iK2FpZCwgbnVsbCkudGhlbigocmVzdWx0RGF0YTIpPT57CgkJCQkJCQkJbGV0IGRhdGFKc29uMiA9IEpTT04ucGFyc2UocmVzdWx0RGF0YTIuZGF0YSk7CgkJCQkJCQkJaWYoIWRhdGFKc29uMiB8fCBkYXRhSnNvbjIuY29kZSE9PTAgfHwgIWRhdGFKc29uMi5kYXRhKXsKCQkJCQkJCQkJcmVzb2x2ZSh7InN0YXR1cyI6InJlcXVlc3RfZXJyb3IifSk7CgkJCQkJCQkJCXJldHVybjsKCQkJCQkJCQl9CgkJCQkJCQkJY29uc3QgZG93bmxvYWREYXRhID0gZGF0YUpzb24yLmRhdGE7CgkJCQkJCQkJY29uc3QgYWlkID0gZG93bmxvYWREYXRhLmFpZCwgYnZpZCA9IGRvd25sb2FkRGF0YS5idmlkOwoJCQkJCQkJCWNvbnN0IHBhZ2VzID0gbmV3IEFycmF5KCk7CgkJCQkJCQkJZm9yKHZhciBpPTA7IGk8ZG93bmxvYWREYXRhLnBhZ2VzLmxlbmd0aDsgaSsrKXsKCQkJCQkJCQkJbGV0IHBhZ2VEYXRhID0gZG93bmxvYWREYXRhLnBhZ2VzW2ldOwoJCQkJCQkJCQlwYWdlcy5wdXNoKHsKCQkJCQkJCQkJCSJjb3ZlciI6cGFnZURhdGEuZmlyc3RfZnJhbWUsCgkJCQkJCQkJCQkicGFnZSI6cGFnZURhdGEucGFnZSwKCQkJCQkJCQkJCSJwYXJ0IjpwYWdlRGF0YS5wYXJ0LAoJCQkJCQkJCQkJImNpZCI6cGFnZURhdGEuY2lkCgkJCQkJCQkJCX0pOwoJCQkJCQkJCX0KCQkJCQkJCQlyZXNvbHZlKHsic3RhdHVzIjoic3VjY2VzcyIsICJkb3dubG9hZERhdGEiOnsKCQkJCQkJCQkJImFpZCI6YWlkLCAiYnZpZCI6YnZpZCwgInBhZ2VzIjpwYWdlcwoJCQkJCQkJCX19KTsKCQkJCQkJCX0pLmNhdGNoKChlcnJvckRhdGEpPT57CgkJCQkJCQkJY29uc29sZS5sb2coZXJyb3JEYXRhKQoJCQkJCQkJCXJlc29sdmUoeyJzdGF0dXMiOiJyZXF1ZXN0X2Vycm9yIn0pOwoJCQkJCQkJfSk7CgkJCQkJCX0pLmNhdGNoKChlcnJvckRhdGEpPT57CgkJCQkJCQlyZXNvbHZlKHsic3RhdHVzIjoicmVxdWVzdF9lcnJvciJ9KTsKCQkJCQkJfSk7CgkJCQkJfSk7CgkJCQl9OwoJCQkJdGhpcy5zdGFydERvd25sb2FkRmlsZSA9IGZ1bmN0aW9uKGFpZCwgY2lkKXsKCQkJCQljb21tb25GdW5jdGlvbk9iamVjdC5yZXF1ZXN0KCJnZXQiLCAiaHR0cHM6Ly9hcGkuYmlsaWJpbGkuY29tL3gvcGxheWVyL3BsYXl1cmw/YXZpZD0iK2FpZCsiJmNpZD0iK2NpZCsiJnFuPTExMiIsIG51bGwpLnRoZW4oKHJlc3VsdERhdGEzKT0+ewoJCQkJCQlsZXQgZGF0YUpzb24zID0gSlNPTi5wYXJzZShyZXN1bHREYXRhMy5kYXRhKTsKCQkJCQkJaWYoISFkYXRhSnNvbjMgJiYgZGF0YUpzb24zLmNvZGU9PT0wICYmICEhZGF0YUpzb24zLmRhdGEpewoJCQkJCQkJd2luZG93Lm9wZW4oZGF0YUpzb24zLmRhdGEuZHVybFswXS51cmwpOwoJCQkJCQl9ZWxzZXsKCQkJCQkJCWFsZXJ0KCLojrflj5bkuIvovb3pk77mjqXlpLHotKUiKTsKCQkJCQkJfQoJCQkJCX0pLmNhdGNoKChlcnJvckRhdGEpPT57CgkJCQkJCWFsZXJ0KCLojrflj5bkuIvovb3pk77mjqXlpLHotKUiKTsKCQkJCQl9KTsKCQkJCX07CgkJCQl0aGlzLmNyZWF0ZU1vZGFscyA9IGZ1bmN0aW9uKCl7CgkJCQkJdmFyIGNzcyA9IGAKCQkJCQkJLm1vZGFsLW1hc2stYCt0aGlzLmVsZW1lbnRJZCtgewoJCQkJCQkJcG9zaXRpb246Zml4ZWQ7CgkJCQkJCQl0b3A6MDsKCQkJCQkJCWxlZnQ6MDsKCQkJCQkJCXotaW5kZXg6OTk5OTk5OTk4OwoJCQkJCQkJd2lkdGg6MTAwJTsKCQkJCQkJCWhlaWdodDoxMDAlOwoJCQkJCQkJZGlzcGxheTpub25lOwoJCQkJCQkJYmFja2dyb3VuZC1jb2xvcjojMDAwOwoJCQkJCQkJb3BhY2l0eTowLjM7CgkJCQkJCQlvdmVyZmxvdzpoaWRkZW47CgkJCQkJCX0KCQkJCQkJLm1vZGFsLWJvZHktYCt0aGlzLmVsZW1lbnRJZCtgewoJCQkJCQkJcG9zaXRpb246Zml4ZWQ7CgkJCQkJCQlib3JkZXItcmFkaXVzOjVweDsKCQkJCQkJCWJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7CgkJCQkJCQl0b3A6MTAlOwoJCQkJCQkJd2lkdGg6NDAwcHg7CgkJCQkJCQltYXgtd2lkdGg6IDkwJTsKCQkJCQkJCW1heC1oZWlnaHQ6MTcwcHg7CgkJCQkJCQltYXgtaGVpZ2h0OiA2MDBweDsKCQkJCQkJCW92ZXJmbG93LXk6IGF1dG87CgkJCQkJCQl6LWluZGV4Ojk5OTk5OTk5OTsKCQkJCQkJCWxlZnQ6IDUwJTsKCQkJCQkJCXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsKCQkJCQkJCWRpc3BsYXk6bm9uZTsKCQkJCQkJCXBhZGRpbmc6IDEwcHg7CgkJCQkJCX0KCQkJCQkJLm1vZGFsLWJvZHktYCt0aGlzLmVsZW1lbnRJZCtgID4ucGFnZS13cmFwewoJCQkJCQkJZGlzcGxheTogZmxleDsKCQkJCQkJCWZsZXgtd3JhcDogd3JhcDsKCQkJCQkJfQoJCQkJCQkubW9kYWwtYm9keS1gK3RoaXMuZWxlbWVudElkK2AgPi5wYWdlLXdyYXAgPi5ib2FyZC1pdGVtewoJCQkJCQkJZGlzcGxheTogYmxvY2s7CgkJCQkJCQl3aWR0aDogY2FsYyg1MCUgLSAxMHB4KTsKCQkJCQkJCWJhY2tncm91bmQtY29sb3I6ICM2QTVGNjA7CgkJCQkJCQltYXJnaW46IDVweDsKCQkJCQkJCWJhY2tncm91bmQtY29sb3I6I0ZCNzI5OTsKCQkJCQkJCWNvbG9yOiNGRkZGRkY7CgkJCQkJCQljdXJzb3I6IHBvaW50ZXI7CgkJCQkJCQlvdmVyZmxvdzpoaWRkZW47CgkJCQkJCQl3aGl0ZS1zcGFjZTpub3dyYXA7CgkJCQkJCQl0ZXh0LW92ZXJmbG93OmVsbGlwc2lzOwoJCQkJCQl9CgkJCQkJCS5tb2RhbC1ib2R5LWArdGhpcy5lbGVtZW50SWQrYCA+Lm1vZGFsLWJ0bi13cmFwewoJCQkJCQkJdGV4dC1hbGlnbjogY2VudGVyOwoJCQkJCQkJbWFyZ2luLXRvcDogMTBweDsKCQkJCQkJCWN1cnNvcjogcG9pbnRlcjsKCQkJCQkJfQoJCQkJCQkubW9kYWwtYm9keS1gK3RoaXMuZWxlbWVudElkK2AgPi5jb3B5LXRpcHN7CgkJCQkJCQltYXJnaW4tdG9wOiAxMHB4OwoJCQkJCQkJZm9udC1zaXplOjEycHg7CgkJCQkJCX0KCQkJCQlgOwoJCQkJCXZhciBodG1sID0gYAoJCQkJCQk8ZGl2IGNsYXNzPSdtb2RhbC1tYXNrLWArdGhpcy5lbGVtZW50SWQrYCc+PC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9J21vZGFsLWJvZHktYCt0aGlzLmVsZW1lbnRJZCtgJz4KCQkJCQkJCTxkaXYgY2xhc3M9InBhZ2Utd3JhcCI+PC9kaXY+CgkJCQkJCQk8ZGl2IGNsYXNzPSJtb2RhbC1idG4td3JhcCI+CgkJCQkJCQkJPHNwYW4+5YWz6ZetPC9zcGFuPgoJCQkJCQkJPC9kaXY+CgkJCQkJCQk8ZGl2IGNsYXNzPSJjb3B5LXRpcHMiPgoJCQkJCQkJCeivtOaYju+8mueCueWHu+acrOW8ueahhumAiembhu+8jOWNs+WPr+S4i+i9vemAiembhuinhumike+8jOm7mOiupOacgOmrmOa4heOAggoJCQkJCQkJCTxicj7nlLPmmI7vvJrmnKzlip/og73ku4Xog73kvZzkuLrlrabkuaDkuqTmtYHkvb/nlKjvvIzkuJTkuI3lj6/nlKjkuo7lhbblroPnlKjpgJTvvIzlkKbliJnlkI7mnpzoh6rotJ/jgILor7flpKflrrbph43op4bniYjmnYPvvIzlsIrph43liJvkvZzogIXvvIzliIfli7/mkKzov5DmioTooq3jgILor7flpKflrrblpJrnlKhb5LiA6ZSu5LiJ6L+eXeS4uuWIm+S9nOiAheaKleW4gX7vvIzlsI/noLTnq5nniZvmjrDvvIEKCQkJCQkJCTwvZGl2PgoJCQkJCQk8L2Rpdj4KCQkJCQlgOwoJCQkJCWNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNYWRkU3R5bGUoY3NzKTsKCQkJCQkkKCJib2R5IikuYXBwZW5kKGh0bWwpOwoJCQkJfTsKCQkJCXRoaXMuaGlkZU1vZGFscyA9IGZ1bmN0aW9uKCl7CgkJCQkJJCgiLm1vZGFsLWJvZHktIit0aGlzLmVsZW1lbnRJZCsiIikuY3NzKCdkaXNwbGF5Jywnbm9uZScpOwoJCQkJCSQoIi5tb2RhbC1tYXNrLSIrdGhpcy5lbGVtZW50SWQrIiIpLmNzcygnZGlzcGxheScsJ25vbmUnKTsKCQkJCX07CgkJCQl0aGlzLnNob3dNb2RhbHMgPSBmdW5jdGlvbihwYWdlSHRtbCl7CgkJCQkJY29uc3Qgc2VsZiA9IHRoaXM7CgkJCQkJJCgiLm1vZGFsLWJvZHktIitzZWxmLmVsZW1lbnRJZCsiIikuY3NzKCdkaXNwbGF5JywnYmxvY2snKTsKCQkJCQkkKCIubW9kYWwtbWFzay0iK3NlbGYuZWxlbWVudElkKyIiKS5jc3MoJ2Rpc3BsYXknLCdibG9jaycpOwoJCQkJCSQoIi5tb2RhbC1ib2R5LSIrc2VsZi5lbGVtZW50SWQrIiA+LnBhZ2Utd3JhcCIpLmh0bWwocGFnZUh0bWwpOwoJCQkJCSQoImJvZHkiKS5vbigiY2xpY2siLCAiLm1vZGFsLWJvZHktIitzZWxmLmVsZW1lbnRJZCsiID4ucGFnZS13cmFwID4uYm9hcmQtaXRlbSIsIGZ1bmN0aW9uKCl7CgkJCQkJCSQodGhpcykuY3NzKCJiYWNrZ3JvdW5kLWNvbG9yIiwiI2NjYyIpOwoJCQkJCQlzZWxmLnN0YXJ0RG93bmxvYWRGaWxlKCQodGhpcykuZGF0YSgiYWlkIiksICQodGhpcykuZGF0YSgiY2lkIikpOwoJCQkJCX0pOwoJCQkJCSQoImJvZHkiKS5vbigiY2xpY2siLCAiLm1vZGFsLWJvZHktIitzZWxmLmVsZW1lbnRJZCsiID4ubW9kYWwtYnRuLXdyYXAgPnNwYW4iLCBmdW5jdGlvbigpewoJCQkJCQlzZWxmLmhpZGVNb2RhbHMoKTsKCQkJCQl9KTsKCQkJCX07CgkJCQl0aGlzLmNyZWF0ZUVsZW1lbnRIdG1sID0gZnVuY3Rpb24oKXsKCQkJCQl0aGlzLmNyZWF0ZU1vZGFscygpOyAgLy/liJvlu7rlvLnmoYYKCQkJCQljb25zdCByYW5kb21OdW1iZXIgPSB0aGlzLmVsZW1lbnRJZCwgc2VsZiA9IHRoaXM7CgkJCQkJbGV0IGNzc1RleHQgPSBgCgkJCQkJCSNiaWxpYmlsaV9leHRpX2ArcmFuZG9tTnVtYmVyK2B7CgkJCQkJCQlwYWRkaW5nOjEwcHg7CgkJCQkJCX0KCQkJCQkJI2JpbGliaWxpX2V4dGlfYCtyYW5kb21OdW1iZXIrYCA+LnNlbGZfc19idG57CgkJCQkJCQliYWNrZ3JvdW5kLWNvbG9yOiNGQjcyOTk7CgkJCQkJCQljb2xvcjojRkZGOwoJCQkJCQkJZm9udC1zaXplOjEwcHg7CgkJCQkJCQlkaXNwbGF5OmlubGluZS1ibG9jazsKCQkJCQkJCW1hcmdpbi1yaWdodDoxNXB4OwoJCQkJCQkJcGFkZGluZzoycHggNHB4OwoJCQkJCQkJYm9yZGVyLXJhZGl1czozcHg7CgkJCQkJCQljdXJzb3I6cG9pbnRlcjsKCQkJCQkJfQoJCQkJCWA7CgkJCQkJbGV0IGh0bWxUZXh0PWAKCQkJCQkJPGRpdiBpZD0iYmlsaWJpbGlfZXh0aV9gK3JhbmRvbU51bWJlcitgIj4KCQkJCQkJCTxzcGFuIGNsYXNzPSJzZWxmX3NfYnRuIiBpZD0iZG93bmxvYWRfc19gK3JhbmRvbU51bWJlcitgIj7kuIvovb3op4bpopHvvIjmnIDpq5jmuIXvvIk8L3NwYW4+CgkJCQkJCQk8c3BhbiBjbGFzcz0ic2VsZl9zX2J0biIgaWQ9ImZvY3VzX3NfYCtyYW5kb21OdW1iZXIrYCI+5LiA6ZSu5LiJ6L+ePC9zcGFuPgoJCQkJCQk8L2Rpdj4KCQkJCQlgOwoJCQkJCXNldFRpbWVvdXQoKCk9PnsgLy/lu7bml7bnmoTnm67nmoTmmK/orqlC56uZ5YWI5Yqg6L295a6M5YWoCQkJCQoJCQkJCQljb25zdCBwbGF5ZXJJbnRlcnZhbCA9IHNldEludGVydmFsKCgpPT57CgkJCQkJCQlsZXQgJHZpZXdib3hSZXBvcnQgPSAkKCIjYXJjX3Rvb2xiYXJfcmVwb3J0Iik7CgkJCQkJCQlpZigkKCIjZG93bmxvYWRfc18iK3JhbmRvbU51bWJlcikubGVuZ3RoPT0wICYmICR2aWV3Ym94UmVwb3J0Lmxlbmd0aCE9MCl7CgkJCQkJCQkJJCgiYm9keSIpLnByZXBlbmQoIjxzdHlsZT4iK2Nzc1RleHQrIjwvc3R5bGU+Iik7CgkJCQkJCQkJJHZpZXdib3hSZXBvcnQuYmVmb3JlKGh0bWxUZXh0KTsKCQkJCQkJCX1lbHNlewoJCQkJCQkJCWNsZWFySW50ZXJ2YWwocGxheWVySW50ZXJ2YWwpOwoJCQkJCQkJfQoJCQkJCQl9LCAxMDApOwoJCQkJCX0sIDI4MDApOwoJCQkJCQoJCQkJCSQoImJvZHkiKS5vbigiY2xpY2siLCAiI2Rvd25sb2FkX3NfIityYW5kb21OdW1iZXIsIGZ1bmN0aW9uKCl7CgkJCQkJCWNvbnN0ICRidG4gPSAkKHRoaXMpOwoJCQkJCQkkYnRuLmF0dHIoImRpc2FibGVkIiwgImRpc2FibGVkIik7CgkJCQkJCSRidG4udGV4dCgi5LiL6L296KeG6aKR77yI5YeG5aSH5Lit77yJIik7CgkJCQkJCS8v5byA5aeL5YeG5aSH5LiL6L295pWw5o2uCgkJCQkJCXNlbGYuZ2V0RG93bmxvYWRQYWdlcygpLnRoZW4oKHJlc3VsZSk9PnsKCQkJCQkJCWlmKHJlc3VsZS5zdGF0dXM9PT0ic3VjY2VzcyIpewoJCQkJCQkJCXZhciBhaWQgPSByZXN1bGUuZG93bmxvYWREYXRhLmFpZCwgcGFnZXMgPSByZXN1bGUuZG93bmxvYWREYXRhLnBhZ2VzLCBpdGVtSHRtbCA9ICIiOwoJCQkJCQkJCWZvcih2YXIgaT0wOyBpPHBhZ2VzLmxlbmd0aDsgaSsrKXsKCQkJCQkJCQkJdmFyIHRpdGxlID0gIuOAkFAiK3BhZ2VzW2ldLnBhZ2UrIuOAkSIrcGFnZXNbaV0ucGFydCsiIjsKCQkJCQkJCQkJaXRlbUh0bWwgKz0gIjxzcGFuIGNsYXNzPSdib2FyZC1pdGVtJyBkYXRhLWFpZD0nIithaWQrIicgZGF0YS1jaWQ9JyIrcGFnZXNbaV0uY2lkKyInIHRpdGxlPSciK3RpdGxlKyInPiIrdGl0bGUrIjwvc3Bhbj4iOwoJCQkJCQkJCX0KCQkJCQkJCQlzZWxmLnNob3dNb2RhbHMoaXRlbUh0bWwpOwoJCQkJCQkJCXNlbGYuZG93bmxvYWRSZXN1dFN1Y2Nlc3MoJGJ0bik7CgkJCQkJCQl9ZWxzZXsKCQkJCQkJCQlzZWxmLmRvd25sb2FkUmVzdXRFcnJvcigkYnRuKTsKCQkJCQkJCX0KCQkJCQkJfSkuY2F0Y2goKGVycm9yKT0+ewoJCQkJCQkJc2VsZi5kb3dubG9hZFJlc3V0RXJyb3IoJGJ0bik7CgkJCQkJCX0pOwoJCQkJCX0pOwoJCQkJCSQoImJvZHkiKS5vbigiY2xpY2siLCAiI2ZvY3VzX3NfIityYW5kb21OdW1iZXIsIGZ1bmN0aW9uKCl7CgkJCQkJCSQoIiNhcmNfdG9vbGJhcl9yZXBvcnQgLmxpa2UiKS5jbGljaygpOwoJCQkJCQkkKCIjYXJjX3Rvb2xiYXJfcmVwb3J0IC5jb2luIikuY2xpY2soKTsKCQkJCQl9KTsKCQkJCX0KCQkJCXRoaXMuc3RhcnQgPSBmdW5jdGlvbigpewoJCQkJCWxldCBsb2NhdGlvbkhvc3QgPSB3aW5kb3cubG9jYXRpb24uaG9zdCwgbG9jYXRpb25QYXRobmFtZSA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTsKCQkJCQlpZihsb2NhdGlvbkhvc3Q9PT0id3d3LmJpbGliaWxpLmNvbSIgJiYgKGxvY2F0aW9uUGF0aG5hbWUuaW5kZXhPZigiL3ZpZGVvIikhPS0xIHx8IGxvY2F0aW9uUGF0aG5hbWUuaW5kZXhPZigiL3dhdGNobGF0ZXIiKSE9LTEpKXsKCQkJCQkJdGhpcy5jcmVhdGVFbGVtZW50SHRtbCgpOwoJCQkJCX0KCQkJCX0KCQkJfQoJCQl0cnl7CgkJCQkobmV3IGlubmVyQ2xhc3NEb3dubG9hZFZpZGVvQ29pbigpKS5zdGFydCgpOwoJCQl9Y2F0Y2goZSl7CgkJCQljb25zb2xlLmxvZygiaW5uZXJDbGFzc0Rvd25sb2FkVmlkZW9Db2luIitlKQoJCQl9CgkJfTsKCQl0aGlzLnJlY29yZFZpZXcgPSBmdW5jdGlvbigpeyAvL+a1j+iniOiusOW9lUNsYXNzCgkJCWZ1bmN0aW9uIGlubmVyQ2xhc3NSZWNvcmRWaWV3KCl7CgkJCQl0aGlzLmxvY2FsQ2FjaGVOYW1lID0gImJpbGliaWxpX3ZpZGVvX3JlY29yZCI7IAoJCQkJdGhpcy5yZWNvcmRPbmVWaWRlbyA9IGZ1bmN0aW9uKCl7CgkJCQkJbGV0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KT0+ewoJCQkJCQlsZXQgYnYgPSBjb21tb25GdW5jdGlvbk9iamVjdC5nZXRCaWxpYmlsaUJWKCk7CgkJCQkJCWxldCBjYWNoZVRleHQgPSBjb21tb25GdW5jdGlvbk9iamVjdC5HTWdldFZhbHVlKHRoaXMubG9jYWxDYWNoZU5hbWUpOwoJCQkJCQljYWNoZVRleHQgPSAhY2FjaGVUZXh0ID8gIiIgOiBjYWNoZVRleHQKCQkJCQkJbGV0IG1heExlbmd0aCA9IDEyKjUwMDsKCQkJCQkJbGV0IGN1cnJlbnRMZW5ndGggPSBjYWNoZVRleHQubGVuZ3RoOwoJCQkJCQlpZihjdXJyZW50TGVuZ3RoID4gbWF4TGVuZ3RoKXsKCQkJCQkJCWNhY2hlVGV4dCA9IGNhY2hlVGV4dC5zdWJzdHJpbmcoMTIqMTAwLCBjdXJyZW50TGVuZ3RoKTsKCQkJCQkJfQoJCQkJCQlpZihjYWNoZVRleHQuaW5kZXhPZihidik9PS0xKXsKCQkJCQkJCWNhY2hlVGV4dCArPSBidjsKCQkJCQkJCWNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNc2V0VmFsdWUodGhpcy5sb2NhbENhY2hlTmFtZSwgY2FjaGVUZXh0KTsKCQkJCQkJfQoJCQkJCQlyZXNvbHZlKHsicmVzdWx0Ijoic3VjY2VzcyJ9KTsKCQkJCQl9KTsKCQkJCX07CgkJCQl0aGlzLnNlYXJjaFBhZ2VSZW1pbmRIdG1sID0gZnVuY3Rpb24oJGVsZSwgdG9wPTgsIHJpZ2h0PTgpewoJCQkJCSRlbGUuY3NzKCJwb3NpdGlvbiIsInJlbGF0aXZlIik7CgkJCQkJJGVsZS5hcHBlbmQoIjxkaXYgc3R5bGU9J3otaW5kZXg6IDk5OTk5OTk5O3Bvc2l0aW9uOmFic29sdXRlOyB0b3A6Iit0b3ArInB4OyByaWdodDoiK3JpZ2h0KyJweDsgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTEsMTIzLDE1OSwxKTsgYm9yZGVyLXJhZGl1czozcHg7IGZvbnQtc2l6ZToxMHB4OyBjb2xvcjojRkZGO3BhZGRpbmc6MHB4IDJweDsnPuW3suecizwvZGl2PiIpOwoJCQkJfTsKCQkJCXRoaXMuc2VhcmNoUGFnZVJlbWluZCA9IGZ1bmN0aW9uKCl7CgkJCQkJbGV0ICR0aGF0ID0gdGhpczsKCQkJCQl2YXIgZWxlbWVudEFycmF5ID0gWwoJCQkJCQl7Im5vZGUiOiIudmlkZW8tbGlzdC1pdGVtIiwgInRvcCI6OCwgInJpZ2h0IjoxMn0sICAvL+aQnOe0oue7k+aenAoJCQkJCQl7Im5vZGUiOiIjcGFnZS1pbmRleCAuc21hbGwtaXRlbSIsICJ0b3AiOjEyLCAicmlnaHQiOjEyfSwgIC8v55So5oi35oqV56i/CgkJCQkJCXsibm9kZSI6IiNzdWJtaXQtdmlkZW8tbGlzdCAuc21hbGwtaXRlbSIsICJ0b3AiOjEyLCAicmlnaHQiOjEyfSwgLy/nlKjmiLfkuLvpobUKCQkJCQkJeyJub2RlIjoiI3BhZ2Utc2VyaWVzLWRldGFpbCAuc21hbGwtaXRlbS5mYWtlRGFubXUtaXRlbSIsICJ0b3AiOjEyLCAicmlnaHQiOjEyfSwgLy/nlKjmiLfkuLvpobXmipXnqL8KCQkJCQldOwoJCQkJCXNldEludGVydmFsKGZ1bmN0aW9uKCl7CgkJCQkJCWxldCBjYWNoZVRleHQgPSBjb21tb25GdW5jdGlvbk9iamVjdC5HTWdldFZhbHVlKCR0aGF0LmxvY2FsQ2FjaGVOYW1lKTsKCQkJCQkJY2FjaGVUZXh0ID0gIWNhY2hlVGV4dCA/ICIiIDogY2FjaGVUZXh0OwoJCQkJCQlmb3IodmFyIGk9MDsgaTxlbGVtZW50QXJyYXkubGVuZ3RoOyBpKyspewoJCQkJCQkJdmFyIGVsZW1lbnRvYmogPSBlbGVtZW50QXJyYXlbaV07CgkJCQkJCQkkKGVsZW1lbnRvYmoubm9kZSkuZWFjaChmdW5jdGlvbigpeyAvL+eUqOaIt+S4u+mhtQoJCQkJCQkJCWlmKCQodGhpcykuYXR0cigiZGVhbHhsbCIpIT09InRydWUiKXsKCQkJCQkJCQkJdmFyIHZpZGVvdXJsID0gJCh0aGlzKS5maW5kKCJhW2hyZWZePScvL3d3dy5iaWxpYmlsaS5jb20vdmlkZW8nXSIpLmF0dHIoImhyZWYiKTsKCQkJCQkJCQkJaWYoISF2aWRlb3VybCl7CgkJCQkJCQkJCQlpZihjYWNoZVRleHQuaW5kZXhPZih2aWRlb3VybC5zcGxpdCgiPyIpWzBdLnJlcGxhY2UoIi8vd3d3LmJpbGliaWxpLmNvbS92aWRlby8iLCIiKSkhPS0xKXsKCQkJCQkJCQkJCQkkdGhhdC5zZWFyY2hQYWdlUmVtaW5kSHRtbCgkKHRoaXMpLCBlbGVtZW50b2JqLnRvcCwgZWxlbWVudG9iai5yaWdodCk7CgkJCQkJCQkJCQl9CgkJCQkJCQkJCQkkKHRoaXMpLnVuYmluZCgiY2xpY2siKS5iaW5kKCJjbGljayIsICgpPT57ICAvL+W+queOr+aTjeS9nO+8jOWNleeLrOe7keWumgoJCQkJCQkJCQkJCSR0aGF0LnNlYXJjaFBhZ2VSZW1pbmRIdG1sKCQodGhpcyksIGVsZW1lbnRvYmoudG9wLCBlbGVtZW50b2JqLnJpZ2h0KTsKCQkJCQkJCQkJCX0pCgkJCQkJCQkJCQkkKHRoaXMpLmF0dHIoImRlYWx4bGwiLCJ0cnVlIik7CgkJCQkJCQkJCX0KCQkJCQkJCQl9CgkJCQkJCQl9KTsKCQkJCQkJfQoJCQkJCX0sIDMzMyk7CgkJCQl9CgkJCQl0aGlzLnN0YXJ0PWZ1bmN0aW9uKCl7CgkJCQkJbGV0ICR0aGF0ID0gdGhpczsKCQkJCQlpZih3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZigiL3ZpZGVvIikhPS0xICYmIHdpbmRvdy5sb2NhdGlvbi5ob3N0PT09Ind3dy5iaWxpYmlsaS5jb20iKXsKCQkJCQkJbGV0IGN1cnJlbnRIcmVmID0gIiI7CgkJCQkJCXNldEludGVydmFsKCgpPT57IC8v6ZyA6KaB5b6q546v5a2Y5YKoCgkJCQkJCQlpZih3aW5kb3cubG9jYXRpb24uaHJlZiE9PWN1cnJlbnRIcmVmKXsKCQkJCQkJCQl0aGlzLnJlY29yZE9uZVZpZGVvKCk7CgkJCQkJCQkJY3VycmVudEhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKCQkJCQkJCX0KCQkJCQkJfSwxNTApOwoJCQkJCX0KCQkJCQkvL+aQnOe0oue7k+aenOWSjOeUqOaIt+S4u+mhteW3sue7j+eci+i/h+eahOinhumikeaPkOmGkgoJCQkJCWlmKHdpbmRvdy5sb2NhdGlvbi5ob3N0LmluZGV4T2YoImJpbGliaWxpLmNvbSIpIT0tMSl7CgkJCQkJCXRoaXMuc2VhcmNoUGFnZVJlbWluZCgpOwoJCQkJCQlHTV9yZWdpc3Rlck1lbnVDb21tYW5kKCLmuIXnqbpC56uZ5rWP6KeI6K6w5b2VIixmdW5jdGlvbigpewoJCQkJCQkJaWYoY29uZmlybSgn5piv5ZCm6KaB5riF56m6Quermea1j+iniOiusOW9le+8n+a4heepuuWQjuWwhuS4jeWPr+aBouWkjS4uLicpKXsKCQkJCQkJCQljb21tb25GdW5jdGlvbk9iamVjdC5HTXNldFZhbHVlKCR0aGF0LmxvY2FsQ2FjaGVOYW1lLCAiIik7CgkJCQkJCQl9CgkJCQkJCX0pOwoJCQkJCX0KCQkJCX07CgkJCX0KCQkJdHJ5ewoJCQkJKG5ldyBpbm5lckNsYXNzUmVjb3JkVmlldygpKS5zdGFydCgpOwoJCQl9Y2F0Y2goZSl7CgkJCQljb25zb2xlLmxvZygiaW5uZXJDbGFzc1JlY29yZFZpZXciK2UpCgkJCX0KCQl9OwoJCXRoaXMuc3RhcnQgPSBmdW5jdGlvbigpewoJCQl0aGlzLmRvd25sb2FkVmlkZW9Db2luKCk7CgkJCXRoaXMucmVjb3JkVmlldygpOwoJCX0KCX0KCQoJLy/lm73lpJbnmoTkuIDkupvop6PmnpAKCWZ1bmN0aW9uIGFicm9hZFZpZGVvSGVscGVyKCl7CgkJdGhpcy5pc1J1biA9IGZ1bmN0aW9uKCl7CgkJCXZhciB1cmxzPVsieW91dHViZS5jb20iLCAiZmFjZWJvb2suY29tIl07CgkJCWZvcih2YXIgaT0wOyBpPHVybHMubGVuZ3RoO2krKyl7CgkJCQlpZih3aW5kb3cubG9jYXRpb24uaG9zdC5pbmRleE9mKHVybHNbaV0pIT0tMSl7CgkJCQkJcmV0dXJuIHRydWU7CgkJCQl9CgkJCX0KCQkJcmV0dXJuIGZhbHNlOwoJCX07CgkJdGhpcy5zdGFydCA9IGZ1bmN0aW9uKCl7CgkJCWlmKCF0aGlzLmlzUnVuKCkpewoJCQkJcmV0dXJuOwoJCQl9CgkJCXNldEludGVydmFsKGZ1bmN0aW9uKCl7CgkJCQljb25zdCBob3N0ID0gd2luZG93LmxvY2F0aW9uLmhvc3Q7CgkJCQljb25zdCBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7CgkJCQljb25zdCBlbGVJZCA9ICJmcmVlLXh4MS1wbGF5ZXItc2NyaXB0LTk5OTkiOwoJCQkJCgkJCQkvL3lvdXR1YmXop6PmnpAKCQkJCWlmKGhvc3QuaW5kZXhPZigieW91dHViZS5jb20iKSE9LTEpewoJCQkJCWlmKGhyZWYuaW5kZXhPZigieW91dHViZS5jb20vd2F0Y2giKSE9LTEpewoJCQkJCQlpZigkKCIjIitlbGVJZCkubGVuZ3RoICE9IDApewoJCQkJCQkJcmV0dXJuOwoJCQkJCQl9CgkJCQkJCSQoIiNwbGF5ZXItdGhlYXRlci1jb250YWluZXIiKS5jc3MoInotaW5kZXgiLDk5OTk5OTk5OTkpOyAvL+S/ruWkjeWFqOWxj+aYvuekuuino+aekOaMiemSrueahOmXrumimAoJCQkJCQl2YXIgaWNvblZpZGVvID0gImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBREFBQUFBd0NBWUFBQUJYQXZtSEFBQURPVWxFUVZSb1ErMlp6NHVOVVJqSFA5K0Y4ZzhneWtLSk5KTVVVbXpNREtabVlWWXNMQlJoT2FFbUZoUlJMQ1pEWTRQQnJKUlJFa1VNbVkzVVJDay9zNkdNaFI5WldOazlPdlhPN2IxMzN2ZSs1N3cvN3N6VW5McWJlNTlmbi9PYzg1em5uQ3ZtK05BY2o1OTVnSGdHeld3RHNCWllEYXdFRmdJL2dUL0FSMG5EWldlOGxBeVlXVGV3RjlpVEVlQTRNQ1RwYmxrZ2hRSE03Qnh3UERDZ0FVbjlnVHFKNG9VQXpPd0tjQ2huSUNPUzl1WFVyYW5sQmpDemE4Q0JnZ0ZjbEhTa2lJMWNBR2JXQlR3dDRqaW0yeTNwU1Y1YndRQm10Z3E0QmF6UDY3UkI3dzNnc3ZBWCtDYnBWNGhkTDRDb1BHNEgzS2NqeEVFT1dWZHlId1Bqa3E1bTZXY0NtTm1GYUlheWJGWHgrMnZnc3FTUk5PT3BBR2EyR0hoWTRsSXBBbmhhMHFra0E0a0FadVpPMGs5RlBGYWcyeUhKSFlSMUl3M2dPN0NzZ2lDS21Qd01kRW1hakJ1WkJtQm1idU1jTE9LcFF0MUJTVWRUQWN6TVZabVFtand0cFRtQzN4cW8weWJwdzVST1hRYk1yQSs0NUd0UVVtWVZ5N0psWnBZbDAvQjczWVp1QkFqcWJXWUk0S1dreldrWmVCVlNOdU1BWnVhMUZCb3JTWTRNVEVwYW5nWVFsTTRFZ09kWnk2RXhhemtBaU50b1hFTHZnTGFzSUdyMHNUMFFaYUFWQU84bHRhZGxZQlRZTmNzQjdramFuUVp3SGpnMnl3R2FWaUhYSXJ1TjdEVm1ZQSs0bG51ZHBDK0pHWEJmaGx3VFp3REFQUWk0czZvMmtsb0o5eXp5eUtjWGFqR0E2NEY2SkwxdENoQmx3ZFgwb0lyU2dpclVLK2wrNDlwdWRoL0loR2hoQnZvbERTUnR6S2E5akprdEJkeHJXaytpY3ZYbndPM29JZXhGV2xYSmJNYk1iQUd3SlFXZzFvMFdXRUtwTFVqU0JjWjdDWG5WMFpoUVhvQlFQL01BVXpOZ1p1NVo4RWJSR1FUMlM3cVoxMDdtSG1obXVJUW5sMmxYeEZDUVFnRFJtVEVHYkF0MURJeEoycEZEcjA2bERJQkZnRHNkbHdRRTh3Tm9sL1E3UUNkUnREQkFsSVZPNEZsQU1KMlNNazk2SDN1bEFFUVFoNEZCRDZkOWtvWTg1THhFU2dPSUlLNjdxdExFODdDa1V0K2NTZ1dJSUNhQWpRa1FFNUkyZVUxcmdGQVZBQ3NBOS9Eay9xR2NHditBTlpLK0JzVG1KVm82UUpTRlh1QmVMSUtka2g1NFJSUW9WQWxBQkhFQ09BT2NsSFEyTUM1djhjb0FJb2pSK0F1Q2QxUUJncFVDQk1TUlczUWVJUGZVbGFUNEgwLzdSVUFpMmEvTkFBQUFBRWxGVGtTdVFtQ0MiOwoJCQkJCQl2YXIgaHRtbD0nPGRpdiBpZD0iJytlbGVJZCsnIiBzdHlsZT0id2lkdGg6MjVweDtwYWRkaW5nOjEwcHggMHB4O3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQtY29sb3I6I0U1MjEyRTtwb3NpdGlvbjpmaXhlZDt0b3A6MjUwcHg7bGVmdDowcHg7Y29sb3I6I0ZGRjtmb250LXNpemU6MHB4O2N1cnNvcjpwb2ludGVyO21hcmdpbjowcHggYXV0bzt0ZXh0LWFsaWduOmNlbnRlcjt6LWluZGV4Ojk5OTk5OTk7Ij4nKwoJCQkJCQkJJzxpbWcgc3JjPSInK2ljb25WaWRlbysnIiBzdHlsZT0id2lkdGg6MjBweDsiPicrCgkJCQkJCQknPC9kaXY+JzsKCQkJCQkJJCgiYm9keSIpLmFwcGVuZChodG1sKTsKCQkJCQkJJCgiYm9keSIpLm9uKCJjbGljayIsICIjIitlbGVJZCwgZnVuY3Rpb24oKXsKCQkJCQkJCXZhciBsb2NhdGlvbl91cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKCQkJCQkJCXZhciB2aWRlb3VybCA9ICJodHRwczovL3d3dy55dGRvd25may5jb20vc2VhcmNoP3VybD0iK2xvY2F0aW9uX3VybDsKCQkJCQkJCWNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNb3BlbkluVGFiKHZpZGVvdXJsLCBmYWxzZSk7CgkJCQkJCX0pOwoJCQkJCX1lbHNlewoJCQkJCQkkKCIjIitlbGVJZCkucmVtb3ZlKCk7CgkJCQkJfQoJCQkJfQoJCQkJCgkJCQkvL2ZhY2Vib29r6Kej5p6QCgkJCQlpZihob3N0LmluZGV4T2YoImZhY2Vib29rLmNvbSIpIT0tMSl7CgkJCQkJaWYoaHJlZi5pbmRleE9mKCJmYWNlYm9vay5jb20vd2F0Y2giKSE9LTEgfHwgaHJlZi5pbmRleE9mKCIvdmlkZW9zLyIpIT0tMSl7CgkJCQkJCWlmKCQoIiMiK2VsZUlkKS5sZW5ndGggIT0gMCl7CgkJCQkJCQlyZXR1cm47CgkJCQkJCX0KCQkJCQkJdmFyIGljb25WaWRlbyA9ICJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQURBQUFBQXdDQVlBQUFCWEF2bUhBQUFET1VsRVFWUm9RKzJaejR1TlVSakhQOStGOGc4Z3lrS0pOSk1VVW16TURLWm1ZVllzTEJSaE9hRW1GaFJSTENaRFk0UEJySlJSRWtVTW1ZM1VSQ2svczZHTWhSOVpXTms5T3ZYTzdiMTMzdmUrNTd3LzdzelVuTHFiZTU5Zm4vT2M4NXpubkN2bStOQWNqNTk1Z0hnR3pXd0RzQlpZRGF3RUZnSS9nVC9BUjBuRFpXZThsQXlZV1Rld0Y5aVRFZUE0TUNUcGJsa2doUUhNN0J4d1BEQ2dBVW45Z1RxSjRvVUF6T3dLY0NobklDT1M5dVhVcmFubEJqQ3phOENCZ2dGY2xIU2tpSTFjQUdiV0JUd3Q0amltMnkzcFNWNWJ3UUJtdGdxNEJhelA2N1JCN3czZ3N2QVgrQ2JwVjRoZEw0Q29QRzRIM0tjanhFRU9XVmR5SHdQamtxNW02V2NDbU5tRmFJYXliRlh4KzJ2Z3NxU1JOT09wQUdhMkdIaFk0bElwQW5oYTBxa2tBNGtBWnVaTzBrOUZQRmFnMnlISkhZUjFJdzNnTzdDc2dpQ0ttUHdNZEVtYWpCdVpCbUJtYnVNY0xPS3BRdDFCU1VkVEFjek1WWm1RbWp3dHBUbUMzeHFvMHlicHc1Uk9YUWJNckErNDVHdFFVbVlWeTdKbFpwWWwwL0I3M1ladUJBanFiV1lJNEtXa3pXa1plQlZTTnVNQVp1YTFGQm9yU1k0TVRFcGFuZ1lRbE00RWdPZFp5NkV4YXprQWlOdG9YRUx2Z0xhc0lHcjBzVDBRWmFBVkFPOGx0YWRsWUJUWU5jc0I3a2phblFad0hqZzJ5d0dhVmlIWElydU43RFZtWUErNGxudWRwQytKR1hCZmhsd1Rad0RBUFFpNHM2bzJrbG9KOXl6eXlLY1hhakdBNjRGNkpMMXRDaEJsd2RYMG9JclNnaXJVSytsKzQ5cHVkaC9JaEdoaEJ2b2xEU1J0ekthOWpKa3RCZHhyV2sraWN2WG53TzNvSWV4RldsWEpiTWJNYkFHd0pRV2cxbzBXV0VLcExValNCY1o3Q1huVjBaaFFYb0JRUC9NQVV6TmdadTVaOEViUkdRVDJTN3FaMTA3bUhtaG11SVFubDJsWHhGQ1FRZ0RSbVRFR2JBdDFESXhKMnBGRHIwNmxESUJGZ0RzZGx3UUU4d05vbC9RN1FDZFJ0REJBbElWTzRGbEFNSjJTTWs5NkgzdWxBRVFRaDRGQkQ2ZDlrb1k4NUx4RVNnT0lJSzY3cXRMRTg3Q2tVdCtjU2dXSUlDYUFqUWtRRTVJMmVVMXJnRkFWQUNzQTkvRGsvcUdjR3YrQU5aSytCc1RtSlZvNlFKU0ZYdUJlTElLZGtoNTRSUlFvVkFsQUJIRUNPQU9jbEhRMk1DNXY4Y29BSW9qUitBdUNkMVFCZ3BVQ0JNU1JXM1FlSVBmVWxhVDRIMC83UlVBaTJhL05BQUFBQUVsRlRrU3VRbUNDIjsKCQkJCQkJdmFyIGh0bWw9JzxkaXYgaWQ9IicrZWxlSWQrJyIgc3R5bGU9IndpZHRoOjI1cHg7cGFkZGluZzoxMHB4IDBweDt0ZXh0LWFsaWduOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNFNTIxMkU7cG9zaXRpb246Zml4ZWQ7dG9wOjI1MHB4O2xlZnQ6MHB4O2NvbG9yOiNGRkY7Zm9udC1zaXplOjBweDt6LWluZGV4Ojk5OTk5OTk5OTk5OTk7Y3Vyc29yOnBvaW50ZXI7bWFyZ2luOjBweCBhdXRvO3RleHQtYWxpZ246Y2VudGVyOyI+JysKCQkJCQkJCSc8aW1nIHNyYz0iJytpY29uVmlkZW8rJyIgc3R5bGU9IndpZHRoOjIwcHg7Ij4nKwoJCQkJCQkJJzwvZGl2Pic7CgkJCQkJCSQoImJvZHkiKS5hcHBlbmQoaHRtbCk7CgkJCQkJCSQoImJvZHkiKS5vbigiY2xpY2siLCAiIyIrZWxlSWQsIGZ1bmN0aW9uKCl7CgkJCQkJCQl2YXIgbG9jYXRpb25fdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7CgkJCQkJCQljb21tb25GdW5jdGlvbk9iamVjdC5HTXNldFZhbHVlKCJmYWNlYm9va19kb3dubG9hZGVyX29iaiIsIHsiZmFjZWJvb2tfdXJsIjpsb2NhdGlvbl91cmx9KTsKCQkJCQkJCWNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNb3BlbkluVGFiKCJodHRwczovL3l0MXMuY29tL2ZhY2Vib29rLWRvd25sb2FkZXIiLCBmYWxzZSk7CgkJCQkJCX0pOwoJCQkJCX1lbHNlewoJCQkJCQkkKCIjIitlbGVJZCkucmVtb3ZlKCk7CgkJCQkJfQoJCQkJfQoJCQl9LCA1MDApOwoJCQkKCQkJaWYod2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZigieXQxcy5jb20vZmFjZWJvb2stZG93bmxvYWRlciIpIT0tMSl7IC8vZmFjZWJvb2vkuIvovb0KCQkJCXZhciBmYWNlYm9va09iamVjdCA9IGNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNZ2V0VmFsdWUoImZhY2Vib29rX2Rvd25sb2FkZXJfb2JqIik7CgkJCQlpZighIWZhY2Vib29rT2JqZWN0KXsKCQkJCQkkKCIjc19pbnB1dCIpLnZhbChmYWNlYm9va09iamVjdC5mYWNlYm9va191cmwpOwoJCQkJfQoJCQl9CgkJfQoJfQoJCgkvL+S8mOaDoOWIuOafpeivogoJZnVuY3Rpb24gcXVlcnlDb3Vwb24oKXsKCQl0aGlzLmlzUnVuID0gZnVuY3Rpb24oKXsKCQkJdmFyIHVybHM9WyJkZXRhaWwudG1hbGwuY29tIiwgIml0ZW0udGFvYmFvLmNvbSIsICJpdGVtLmpkLmNvbSIsICJpdGVtLnlpeWFvamQuY29tIiwgIm5wY2l0ZW0uamQuaGsiLCAiZGV0YWlsLnRtYWxsLmhrIl07CgkJCWZvcih2YXIgaT0wOyBpPHVybHMubGVuZ3RoO2krKyl7CgkJCQlpZih3aW5kb3cubG9jYXRpb24uaG9zdC5pbmRleE9mKHVybHNbaV0pIT0tMSl7CgkJCQkJcmV0dXJuIHRydWU7CgkJCQl9CgkJCX0KCQkJcmV0dXJuIGZhbHNlOwoJCX0KCQl0aGlzLmdldFBsYXRmb3JtID0gZnVuY3Rpb24oKXsKCQkJbGV0IGhvc3QgPSB3aW5kb3cubG9jYXRpb24uaG9zdDsKCQkJbGV0IHBsYXRmb3JtID0gIiI7CgkJCWlmKGhvc3QuaW5kZXhPZigiZGV0YWlsLnRtYWxsIikhPS0xKXsKCQkJCXBsYXRmb3JtID0gInRtYWxsIjsKCQkJfWVsc2UgaWYoaG9zdC5pbmRleE9mKCJpdGVtLnRhb2Jhby5jb20iKSE9LTEpewoJCQkJcGxhdGZvcm0gPSAidGFvYmFvIjsKCQkJfWVsc2UgaWYoaG9zdC5pbmRleE9mKCJqZC5jb20iKSE9LTEgfHwgaG9zdC5pbmRleE9mKCJucGNpdGVtLmpkLmhrIikhPS0xKXsKCQkJCXBsYXRmb3JtID0gImpkIjsKCQkJfQoJCQlyZXR1cm4gcGxhdGZvcm07CgkJfTsKCQl0aGlzLmZpbHRlclN0ciA9IGZ1bmN0aW9uKHN0cil7CgkJCWlmKCFzdHIpIHJldHVybiAiIjsKCQkJc3RyID0gc3RyLnJlcGxhY2UoL1x0L2csIiIpOwoJCQlzdHIgPSBzdHIucmVwbGFjZSgvXHIvZywiIik7CgkJCXN0ciA9IHN0ci5yZXBsYWNlKC9cbi9nLCIiKTsKCQkJc3RyID0gc3RyLnJlcGxhY2UoL1wrL2csIiUyQiIpOy8vIisiCgkJCXN0ciA9IHN0ci5yZXBsYWNlKC9cJi9nLCIlMjYiKTsvLyImIgoJCQlzdHIgPSBzdHIucmVwbGFjZSgvXCMvZywiJTIzIik7Ly8iIyIKCQkJcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHIpCgkJfTsKCQl0aGlzLmdldFBhcmFtdGVyUXVlcnlVcmwgPSBmdW5jdGlvbih0YWcpIHsgLy/mn6Xor6JHRVTor7fmsYJ1cmzkuK3nmoTlj4LmlbAKCQkJdmFyIHQgPSBuZXcgUmVnRXhwKCIoXnwmKSIgKyB0YWcgKyAiPShbXiZdKikoJnwkKSIpOwoJCQl2YXIgYSA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyKDEpLm1hdGNoKHQpOwoJCQlpZiAoYSAhPSBudWxsKXsKCQkJCXJldHVybiBhWzJdOwoJCQl9CgkJCXJldHVybiAiIjsKCQl9OwoJCXRoaXMuZ2V0RW5kSHRtbElkQnlVcmwgPSBmdW5jdGlvbih1cmwpIHsgLy/ojrflvpfku6VodG1s57uT5p2f55qESUQKCQkJaWYodXJsLmluZGV4T2YoIj8iKSE9LTEpewoJCQkJdXJsID0gdXJsLnNwbGl0KCI/IilbMF0KCQkJfQoJCQlpZih1cmwuaW5kZXhPZigiIyIpIT0tMSl7CgkJCQl1cmwgPSB1cmwuc3BsaXQoIiMiKVswXQoJCQl9CgkJCXZhciBzcGxpdFRleHQgPSB1cmwuc3BsaXQoIi8iKTsKCQkJdmFyIGlkVGV4dCA9IHNwbGl0VGV4dFtzcGxpdFRleHQubGVuZ3RoLTFdOwoJCQlpZFRleHQgPSBpZFRleHQucmVwbGFjZSgiLmh0bWwiLCIiKTsKCQkJcmV0dXJuIGlkVGV4dDsKCQl9OwoJCXRoaXMuZ2V0R29vZHNEYXRhID0gZnVuY3Rpb24ocGxhdGZvcm0pewoJCQl2YXIgZ29vZHNJZCA9ICIiOwoJCQl2YXIgZ29vZHNOYW1lID0gIiI7CgkJCXZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7CgkJCWlmKHBsYXRmb3JtPT0idGFvYmFvIil7CgkJCQlnb29kc0lkID0gdGhpcy5nZXRQYXJhbXRlclF1ZXJ5VXJsKCJpZCIpOwoJCQkJZ29vZHNOYW1lPSQoIi50Yi1tYWluLXRpdGxlIikudGV4dCgpOwoKCQkJfWVsc2UgaWYocGxhdGZvcm09PSJ0bWFsbCIpewoJCQkJZ29vZHNJZCA9IHRoaXMuZ2V0UGFyYW10ZXJRdWVyeVVybCgiaWQiKTsKCQkJCWdvb2RzTmFtZT0kKCIudGItZGV0YWlsLWhkIikudGV4dCgpOwoKCQkJfWVsc2UgaWYocGxhdGZvcm09PSJqZCIpewoJCQkJZ29vZHNOYW1lPSQoImRpdi5za3UtbmFtZSIpLnRleHQoKTsKCQkJCWdvb2RzSWQgPSB0aGlzLmdldEVuZEh0bWxJZEJ5VXJsKGhyZWYpOwoKCQkJfQoJCQl2YXIgZGF0YT17Imdvb2RzSWQiOmdvb2RzSWQsICJnb29kc05hbWUiOnRoaXMuZmlsdGVyU3RyKGdvb2RzTmFtZSl9CgkJCXJldHVybiBkYXRhOwoJCX07CgkJdGhpcy5yYW5kb21TcG1WYWx1ZT1mdW5jdGlvbigpewoJCQkkKCJtZXRhW25hbWU9J2RhdGEtc3BtJ10iKS5lYWNoKGZ1bmN0aW9uKCl7CgkJCQl2YXIgbWF4ID0gNTAwMDsKCQkJCXZhciBtaW4gPSAxMDAwOwoJCQkJdmFyIHJhbmRvbVZhbHVlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpICkgKyBtaW47CgkJCQl2YXIgcmFuZG9tTGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShNYXRoLmZsb29yKCBNYXRoLnJhbmRvbSgpICogMjYpICsgImEiLmNoYXJDb2RlQXQoMCkpOwoJCQkJJCh0aGlzKS5hdHRyKCJjb250ZW50IiwgcmFuZG9tVmFsdWUrcmFuZG9tTGV0dGVyKTsKCQkJfSk7CgkJCSQoIm1ldGFbbmFtZT0nc3BtLWlkJ10iKS5lYWNoKGZ1bmN0aW9uKCl7CgkJCQl2YXIgbWF4ID0gNTAwMDsKCQkJCXZhciBtaW4gPSAxMDAwOwoJCQkJdmFyIHJhbmRvbVZhbHVlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpICkgKyBtaW47CgkJCQl2YXIgcmFuZG9tTGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShNYXRoLmZsb29yKCBNYXRoLnJhbmRvbSgpICogMjYpICsgImEiLmNoYXJDb2RlQXQoMCkpOwoJCQkJJCh0aGlzKS5hdHRyKCJjb250ZW50IiwgcmFuZG9tVmFsdWUrcmFuZG9tTGV0dGVyKTsKCQkJfSk7CgkJfTsKCQl0aGlzLnJ1bkFsaURlY2VwdGlvblNwbT1mdW5jdGlvbigpIHsKCQkJaWYod2luZG93LmxvY2F0aW9uLmhvc3QuaW5kZXhPZigiYWxpeXVuLmNvbSIpIT0tMSB8fCB3aW5kb3cubG9jYXRpb24uaG9zdC5pbmRleE9mKCJ0YW9iYW8uY29tIikhPS0xIHx8IHdpbmRvdy5sb2NhdGlvbi5ob3N0LmluZGV4T2YoInRtYWxsLmNvbSIpIT0tMSl7CgkJCQl0aGlzLnJhbmRvbVNwbVZhbHVlKCk7CgkJCQlzZXRJbnRlcnZhbCgoKT0+ewoJCQkJCXRoaXMucmFuZG9tU3BtVmFsdWUoKTsKCQkJCX0sIDQwMDApOwoJCQl9CgkJfTsKCQl0aGlzLnJlcXVlc3QgPSBmdW5jdGlvbihtb3RoZWQsIHVybCwgcGFyYW0pewoJCQlyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KXsKCQkJCUdNX3htbGh0dHBSZXF1ZXN0KHsKCQkJCQl1cmw6IHVybCwKCQkJCQltZXRob2Q6IG1vdGhlZCwKCQkJCQlkYXRhOnBhcmFtLAoJCQkJCW9ubG9hZDogZnVuY3Rpb24ocmVzcG9uc2UpIHsKCQkJCQkJdmFyIHN0YXR1cyA9IHJlc3BvbnNlLnN0YXR1czsKCQkJCQkJdmFyIHBsYXl1cmwgPSAiIjsKCQkJCQkJaWYoc3RhdHVzPT0yMDB8fHN0YXR1cz09JzIwMCcpewoJCQkJCQkJdmFyIHJlc3BvbnNlVGV4dCA9IHJlc3BvbnNlLnJlc3BvbnNlVGV4dDsKCQkJCQkJCXJlc29sdmUoeyJyZXN1bHQiOiJzdWNjZXNzIiwgImpzb24iOnJlc3BvbnNlVGV4dH0pOwoJCQkJCQl9ZWxzZXsKCQkJCQkJCXJlamVjdCh7InJlc3VsdCI6ImVycm9yIiwgImpzb24iOm51bGx9KTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0pOwoJCQl9KQoJCX07CgkJdGhpcy5jcmVhdGVDb3Vwb25IdG1sID0gZnVuY3Rpb24ocGxhdGZvcm0sIGdvb2RzSWQsIGdvb2RzTmFtZSl7CgkJCWlmKCFwbGF0Zm9ybSB8fCAhZ29vZHNJZCkgcmV0dXJuOwoJCQl2YXIgZ29vZHNDb3Vwb25VcmwgPSAiaHR0cDovL3R0LnNodXFpYW5kaXFpdS5jb20vYXBpL2NvdXBvbi9kaXNjb3Zlcj9ubz01JnY9MS4wLjImcGw9IitwbGF0Zm9ybSsiJmlkPSIrZ29vZHNJZCsiJnF1PSIrZ29vZHNOYW1lOwoJCQl2YXIgZ29vZHNQcml2YXRlVXJsID0gImh0dHA6Ly90dC5zaHVxaWFuZGlxaXUuY29tL2FwaS9wcml2YXRlL2NoYW5nZS9jb3Vwb24/bm89NSZ2PTEuMC4yJnBsYXRmb3JtPSIrcGxhdGZvcm0rIiZpZD0iOwoKCQkJdGhpcy5yZXF1ZXN0KCJHRVQiLCBnb29kc0NvdXBvblVybCwgbnVsbCkudGhlbigocmVzdXREYXRhKT0+ewoJCQkJaWYocmVzdXREYXRhLnJlc3VsdD09PSJzdWNjZXNzIiAmJiAhIXJlc3V0RGF0YS5qc29uKXsKCQkJCQl2YXIgZGF0YSA9IEpTT04ucGFyc2UocmVzdXREYXRhLmpzb24pLmRhdGE7CgkJCQkJaWYoIWRhdGEgfHwgZGF0YT09PSJudWxsIiB8fCAhZGF0YS5jc3MgfHwgIWRhdGEuaHRtbCB8fCAhZGF0YS5oYW5kbGVyKXsKCQkJCQkJcmV0dXJuOwoJCQkJCX0KCQkJCQl2YXIgY3NzVGV4dCA9IGRhdGEuY3NzOwoJCQkJCXZhciBodG1sVGV4dCA9IGRhdGEuaHRtbDsKCQkJCQl2YXIgaGFuZGxlciA9IGRhdGEuaGFuZGxlcjsKCQkJCQl2YXIgdGVtcGxhdGVJZCA9IGRhdGEudGVtcGxhdGVJZDsKCQkJCQlpZighY3NzVGV4dCB8fCAhaHRtbFRleHQgfHwgIWhhbmRsZXIpewoJCQkJCQlyZXR1cm47CgkJCQkJfQoJCQkJCSQoImJvZHkiKS5wcmVwZW5kKCI8c3R5bGU+Iitjc3NUZXh0KyI8L3N0eWxlPiIpOwoJCQkJCQoJCQkJCXZhciBoYW5kbGVycyA9IGhhbmRsZXIuc3BsaXQoIkAiKTsKCQkJCQlmb3IodmFyIGk9MDsgaTxoYW5kbGVycy5sZW5ndGg7IGkrKyl7CgkJCQkJCXZhciAkaGFuZGxlciA9ICQoIiIraGFuZGxlcnNbaV0rIiIpOwoJCQkJCQlpZihwbGF0Zm9ybT09InRhb2JhbyIpewoJCQkJCQkJJGhhbmRsZXIucGFyZW50KCkuYWZ0ZXIoaHRtbFRleHQpOwoJCQkJCQl9ZWxzZSBpZihwbGF0Zm9ybT09InRtYWxsIil7CgkJCQkJCQkkaGFuZGxlci5wYXJlbnQoKS5hZnRlcihodG1sVGV4dCk7CgkJCQkJCX1lbHNlIGlmKHBsYXRmb3JtPT0iamQiKXsKCQkJCQkJCSRoYW5kbGVyLmFmdGVyKGh0bWxUZXh0KTsKCQkJCQkJfQoJCQkJCX0KCQkJCQl2YXIgJGxsa2sgPSAkKCIjIit0ZW1wbGF0ZUlkKTsKCQkJCQlpZigkbGxray5sZW5ndGggIT0gMCl7CgkJCQkJCWxldCBjb3Vwb25FbGVtZW50QSA9ICRsbGtrLmZpbmQoImFbbmFtZT0nY3BTaFVybCddIik7CgkJCQkJCWNvdXBvbkVsZW1lbnRBLnVuYmluZCgiY2xpY2siKS5iaW5kKCJjbGljayIsICgpPT57CgkJCQkJCQlldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKCQkJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQkJCQlsZXQgY291cG9uSWQgPSAkbGxray5kYXRhKCJpZCIpOwoJCQkJCQkJaWYoISFjb3Vwb25JZCl7CgkJCQkJCQkJdGhpcy5yZXF1ZXN0KCJHRVQiLCBnb29kc1ByaXZhdGVVcmwrY291cG9uSWQsIG51bGwpLnRoZW4oKHJlc3V0RGF0YTIpPT57CgkJCQkJCQkJCWlmKHJlc3V0RGF0YTIucmVzdWx0PT09InN1Y2Nlc3MiICYmICEhcmVzdXREYXRhMi5qc29uKXsKCQkJCQkJCQkJCWxldCB1cmwgPSBKU09OLnBhcnNlKHJlc3V0RGF0YTIuanNvbikudXJsOwoJCQkJCQkJCQkJaWYoISF1cmwpIEdNX29wZW5JblRhYih1cmwsIHthY3RpdmU6dHJ1ZX0pOwoJCQkJCQkJCQl9CgkJCQkJCQkJfSk7CgkJCQkJCQl9CgkJCQkJCX0pOwoJCQkJCQlzZXRJbnRlcnZhbCgoKT0+ewoJCQkJCQkJJGxsa2suZmluZCgiKiIpLmVhY2goZnVuY3Rpb24oKXsKCQkJCQkJCQkkKHRoaXMpLnJlbW92ZUF0dHIoImRhdGEtc3BtLWFuY2hvci1pZCIpCgkJCQkJCQl9KTsKCQkJCQkJfSwxMDApOwoJCQkJCQkKCQkJCQkJLy9jYW52YXPnlLvkuoznu7TnoIEKCQkJCQkJdmFyICRjYW52YXNFbGVtZW50ID0gJCgiI2NhIit0ZW1wbGF0ZUlkKTsKCQkJCQkJaWYoJGNhbnZhc0VsZW1lbnQubGVuZ3RoICE9IDApewoJCQkJCQkJbGV0IGNvdXBvbklkID0gJGxsa2suZGF0YSgiaWQiKTsKCQkJCQkJCXRoaXMucmVxdWVzdCgiR0VUIiwgZ29vZHNQcml2YXRlVXJsK2NvdXBvbklkLCBudWxsKS50aGVuKChyZXN1dERhdGEyKT0+ewoJCQkJCQkJCWlmKHJlc3V0RGF0YTIucmVzdWx0PT09InN1Y2Nlc3MiICYmICEhcmVzdXREYXRhMi5qc29uKXsKCQkJCQkJCQkJbGV0IGltZyA9IEpTT04ucGFyc2UocmVzdXREYXRhMi5qc29uKS5pbWc7CgkJCQkJCQkJCWlmKCEhaW1nKXsKCQkJCQkJCQkJCXZhciBjYW52YXNFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNhIit0ZW1wbGF0ZUlkKTsKCQkJCQkJCQkJCXZhciBjeHQgPSBjYW52YXNFbGVtZW50LmdldENvbnRleHQoIjJkIik7CgkJCQkJCQkJCQl2YXIgaW1nRGF0YSA9IG5ldyBJbWFnZSgpOwoJCQkJCQkJCQkJaW1nRGF0YS5zcmMgPSBpbWc7CgkJCQkJCQkJCQlpbWdEYXRhLm9ubG9hZD1mdW5jdGlvbigpewoJCQkJCQkJCQkJCWN4dC5kcmF3SW1hZ2UoaW1nRGF0YSwgMCwgMCwgaW1nRGF0YS53aWR0aCwgaW1nRGF0YS5oZWlnaHQpOwoJCQkJCQkJCQkJfQoJCQkJCQkJCQl9CgkJCQkJCQkJfQoJCQkJCQkJfSk7CgkJCQkJCX0KCQkJCQkJCgkJCQkJfQoJCQkJfQoJCQl9KTsKCQl9OwoJCXRoaXMuc3RhcnQgPSBmdW5jdGlvbigpewoJCQlpZih0aGlzLmlzUnVuKCkpewkJCQkKCQkJCXZhciBwbGF0Zm9ybSA9IHRoaXMuZ2V0UGxhdGZvcm0oKTsKCQkJCWlmKCEhcGxhdGZvcm0pewoJCQkJCXZhciBnb29kc0RhdGEgPSB0aGlzLmdldEdvb2RzRGF0YShwbGF0Zm9ybSk7CgkJCQkJdGhpcy5jcmVhdGVDb3Vwb25IdG1sKHBsYXRmb3JtLCBnb29kc0RhdGEuZ29vZHNJZCwgZ29vZHNEYXRhLmdvb2RzTmFtZSk7CgkJCQl9CgkJCX0KCQkJdGhpcy5ydW5BbGlEZWNlcHRpb25TcG0oKTsKCQl9OwoJfQoJCgkvKioKCSAqIOWFqOe9kemfs+S5kOino+aekOS4i+i9vQoJICovCglmdW5jdGlvbiBzdXBlck11c2ljSGVscGVyKCl7CgkJdGhpcy5lbGVJZCA9IE1hdGguY2VpbChNYXRoLnJhbmRvbSgpKjEwMDAwMDAwMCk7CgkJdGhpcy5pc1J1biA9IGZ1bmN0aW9uKCl7CgkJCXZhciB1cmxzPVsibXVzaWMuMTYzLmNvbSIsInkucXEuY29tIiwid3d3Lmt1Z291LmNvbSIsInd3dy5rdXdvLmNuIiwid3d3LnhpYW1pLmNvbSIsIm11c2ljLnRhaWhlLmNvbSIsIm11c2ljLm1pZ3UuY24iLCJsaXpoaS5mbSIsInFpbmd0aW5nLmZtIiwieGltYWxheWEuY29tIl07CgkJCWZvcih2YXIgaT0wOyBpPHVybHMubGVuZ3RoO2krKyl7CgkJCQlpZih3aW5kb3cubG9jYXRpb24uaG9zdC5pbmRleE9mKHVybHNbaV0pIT0tMSl7CgkJCQkJcmV0dXJuIHRydWU7CgkJCQl9CgkJCX0KCQkJcmV0dXJuIGZhbHNlOwoJCX07CgkJdGhpcy5nZXRQbGF5VXJsID0gZnVuY3Rpb24oKXsKCQkJdmFyIGN1cnJlbnRIb3N0ID0gd2luZG93LmxvY2F0aW9uLmhvc3Q7CgkJCXZhciBjdXJyZW50VXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7CgkJCXZhciBwbGF5VXJsID0gbnVsbDsKCQkJaWYoY3VycmVudFVybC5tYXRjaCgvbXVzaWNcLjE2M1wuLykpeyAvL+e9keaYk+S6kemfs+S5kAoJCQkJaWYoY3VycmVudFVybC5tYXRjaCgvXmh0dHBzPzpcL1wvbXVzaWNcLjE2M1wuY29tXC8jXC8oPzpzb25nfGRqKVw/aWQvKSkgewoJCQkJCXBsYXlVcmwgPSAnaHR0cHM6Ly9tdXNpYy5saXV6aGlqaW4uY24vP3VybD0nK2VuY29kZVVSSUNvbXBvbmVudChjdXJyZW50VXJsKTsKCQkJCX1lbHNlIGlmKGN1cnJlbnRVcmwubWF0Y2goL15odHRwcz86XC9cL3lcLm11c2ljXC4xNjNcLmNvbVwvbVwvKD86c29uZ3xkailcP2lkLykpIHsKCQkJCQlwbGF5VXJsID0gJ2h0dHBzOi8vbXVzaWMubGl1emhpamluLmNuLz91cmw9JytlbmNvZGVVUklDb21wb25lbnQoJ2h0dHBzOi8vbXVzaWMuMTYzLmNvbS9zb25nP2lkPScrZ2V0UXVlcnlTdHJpbmcoJ2lkJykpOwoJCQkJfQoJCQl9CgkJCWVsc2UgaWYoY3VycmVudFVybC5tYXRjaCgveVwucXFcLmNvbS8pKXsgLy9RUemfs+S5kAoJCQkJaWYoY3VycmVudFVybC5pbmRleE9mKCI/IikpIGN1cnJlbnRVcmwgPSBjdXJyZW50VXJsLnNwbGl0KCI/IilbMF07CgkJCQlpZihjdXJyZW50VXJsLmluZGV4T2YoIiMiKSkgY3VycmVudFVybCA9IGN1cnJlbnRVcmwuc3BsaXQoIiMiKVswXTsKCQkJCXZhciBtdXNpY01hdGNoID0gY3VycmVudFVybC5tYXRjaCgvXmh0dHBzPzpcL1wveVwucXFcLmNvbVwvblwvcnlxcVwvc29uZ0RldGFpbFwvKFxTKikvKTsKCQkJCWlmKG11c2ljTWF0Y2gpewoJCQkJCXBsYXlVcmwgPSAnaHR0cHM6Ly9tdXNpYy5saXV6aGlqaW4uY24vP2lkPScrbXVzaWNNYXRjaFsxXSsnJnR5cGU9cXEnCgkJCQl9CgkJCQl2YXIgbXVzaWNNYXRjaDIgPSBjdXJyZW50VXJsLm1hdGNoKC9eaHR0cHM/OlwvXC95XC5xcVwuY29tXC9uXC95cXFcL3NvbmdcLyhcUyopLmh0bWwvKTsKCQkJCWlmKG11c2ljTWF0Y2gyKXsKCQkJCQlwbGF5VXJsID0gJ2h0dHBzOi8vbXVzaWMubGl1emhpamluLmNuLz9pZD0nK211c2ljTWF0Y2gyWzFdKycmdHlwZT1xcSc7CgkJCQl9CgkJCX0KCQkJZWxzZSBpZihjdXJyZW50VXJsLm1hdGNoKC9rdWdvdVwuY29tLykpeyAvL+mFt+eLlwoJCQkJdmFyIG11c2ljTWF0Y2ggPSBjdXJyZW50VXJsLm1hdGNoKC9oYXNoPShcUyopJmFsYnVtLyk7CgkJCQlpZihtdXNpY01hdGNoKXsKCQkJCQlwbGF5VXJsID0gJ2h0dHBzOi8vbXVzaWMubGl1emhpamluLmNuLz9pZD0nK211c2ljTWF0Y2hbMV0rJyZ0eXBlPWt1Z291JzsKCQkJCX0KCQkJfQoJCQllbHNlIGlmKGN1cnJlbnRVcmwubWF0Y2goL2t1d29cLmNuLykpeyAgLy/phbfmiJEKCQkJCWlmKGN1cnJlbnRVcmwuaW5kZXhPZigiPyIpKSBjdXJyZW50VXJsID0gY3VycmVudFVybC5zcGxpdCgiPyIpWzBdOwoJCQkJaWYoY3VycmVudFVybC5pbmRleE9mKCIjIikpIGN1cnJlbnRVcmwgPSBjdXJyZW50VXJsLnNwbGl0KCIjIilbMF07CgkJCQl2YXIgbXVzaWNNYXRjaCA9IGN1cnJlbnRVcmwubWF0Y2goL3BsYXlfZGV0YWlsXC8oXFMqKS8pOwoJCQkJaWYobXVzaWNNYXRjaCl7CgkJCQkJcGxheVVybCA9ICdodHRwczovL211c2ljLmxpdXpoaWppbi5jbi8/aWQ9JyttdXNpY01hdGNoWzFdKycmdHlwZT1rdXdvJzsKCQkJCX0KCQkJfQoJCQllbHNlIGlmKGN1cnJlbnRVcmwubWF0Y2goL3d3d1wueGltYWxheWFcLmNvbS8pKXsgLy/llpzpqazmi4npm4UKCQkJICAgIHZhciB4bWx5VXJsQXJyID0gY3VycmVudFVybC5zcGxpdCgiLyIpOwoJCQkgICAgZm9yKHZhciB4dWFJbmRleCA9MDt4dWFJbmRleDx4bWx5VXJsQXJyLmxlbmd0aDt4dWFJbmRleCsrKXsKCQkJICAgICAgICBpZih4dWFJbmRleD09eG1seVVybEFyci5sZW5ndGgtMSl7CgkJCQkJCXBsYXlVcmwgPSAnaHR0cHM6Ly9tdXNpYy5saXV6aGlqaW4uY24vP2lkPScreG1seVVybEFyclt4dWFJbmRleF0rJyZ0eXBlPXhpbWFsYXlhJnBsYXlVcmw9JytlbmNvZGVVUklDb21wb25lbnQoY3VycmVudFVybCk7CgkJCSAgICAgICAgfQoJCQkgICAgfQoJCQl9CgkJCWVsc2UgaWYoY3VycmVudFVybC5tYXRjaCgvd3d3XC5saXpoaVwuZm0vKSl7IC8v6I2U5p6d6Z+z5LmQCgkJCQlpZihjdXJyZW50VXJsLmluZGV4T2YoIj8iKSkgY3VycmVudFVybCA9IGN1cnJlbnRVcmwuc3BsaXQoIj8iKVswXTsKCQkJCWlmKGN1cnJlbnRVcmwuaW5kZXhPZigiIyIpKSBjdXJyZW50VXJsID0gY3VycmVudFVybC5zcGxpdCgiIyIpWzBdOwoJCQkJdmFyIG11c2ljTWF0Y2ggPSBjdXJyZW50VXJsLm1hdGNoKC9eaHR0cHM/OlwvXC93d3dcLmxpemhpXC5mbVwvKFxkKilcLyhcZCopLyk7CgkJCQlpZihtdXNpY01hdGNoKXsKCQkJCQlwbGF5VXJsID0gJ2h0dHBzOi8vbXVzaWMubGl1emhpamluLmNuLz9pZD0nK211c2ljTWF0Y2hbMl0rJyZ0eXBlPWxpemhpJzsKCQkJCX0KCQkJfQoJCQllbHNlIGlmKGN1cnJlbnRVcmwubWF0Y2goL211c2ljXC5taWd1XC5jbi8pKXsgLy/lkqrlkpXpn7PkuZAKCQkJCWlmKGN1cnJlbnRVcmwuaW5kZXhPZigiPyIpKSBjdXJyZW50VXJsID0gY3VycmVudFVybC5zcGxpdCgiPyIpWzBdOwoJCQkJaWYoY3VycmVudFVybC5pbmRleE9mKCIjIikpIGN1cnJlbnRVcmwgPSBjdXJyZW50VXJsLnNwbGl0KCIjIilbMF07CgkJCQl2YXIgbXVzaWNNYXRjaCA9IGN1cnJlbnRVcmwubWF0Y2goL15odHRwcz86XC9cL211c2ljXC5taWd1XC5jblwvdjNcL211c2ljXC9zb25nXC8oXFMqKS8pOwoJCQkJaWYobXVzaWNNYXRjaCl7CgkJCQkJcGxheVVybCA9ICdodHRwczovL211c2ljLmxpdXpoaWppbi5jbi8/aWQ9JyttdXNpY01hdGNoWzFdKycmdHlwZT1taWd1JzsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gcGxheVVybDsKCQl9OwoJCXRoaXMuYWRkU3R5bGU9ZnVuY3Rpb24oKXsKCQkJdmFyIGlubm5lckNzcyA9IAoJCQkiQGtleWZyYW1lcyB0dXJuYXJvdW5kezAley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgwZGVnKTt9MjUley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSg5MGRlZyk7fTUwJXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKTt9NzUley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgyNzBkZWcpO30xMDAley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpO319IisKCQkJIiNwbHVnaW5fa2l3aV9hbmFseXNpc192aXBfbXVzaWNfYm94XyIrdGhpcy5lbGVJZCsiIHtwb3NpdGlvbjpmaXhlZDsgdG9wOjE1MHB4OyBsZWZ0OjBweDsgd2lkdGg6MjZweDsgYmFja2dyb3VuZC1jb2xvcjojRTUyMTJFO3otaW5kZXg6OTk5OTk5OTg5OTk5OTt9IisKCQkJIiNwbHVnaW5fa2l3aV9hbmFseXNpc192aXBfbXVzaWNfYm94XyIrdGhpcy5lbGVJZCsiID4ucGx1Z2luX2l0ZW17Y3Vyc29yOnBvaW50ZXI7IHdpZHRoOjEwMCU7IHBhZGRpbmc6MTBweCAwcHg7IHRleHQtYWxpZ246Y2VudGVyO30iKwoJCQkiI3BsdWdpbl9raXdpX2FuYWx5c2lzX3ZpcF9tdXNpY19ib3hfIit0aGlzLmVsZUlkKyIgPi5wbHVnaW5faXRlbSA+aW1ne3dpZHRoOjIwcHg7IGRpc3BsYXk6aW5saW5lLWJsb2NrOyB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7YW5pbWF0aW9uOnR1cm5hcm91bmQgNHMgbGluZWFyIGluZmluaXRlO30iOwoJCQkkKCJib2R5IikucHJlcGVuZCgiPHN0eWxlPiIraW5ubmVyQ3NzKyI8L3N0eWxlPiIpOwoJCX07CgkJdGhpcy5nZW5lcmF0ZUh0bWw9ZnVuY3Rpb24oKXsKCQkJdmFyICR0aGF0ID0gdGhpczsKCQkJdmFyIGh0bWw9IiI7CgkJCXZhciB2aXBJbWdCYXNlNjQgPSAiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDQUFBQUFnQ0FZQUFBQnplbnIwQUFBREprbEVRVlJZUjZXWFM2aE9VUlRIZi84d3V4NFRNWkNCeHdBcEpSU0tYRzh1R2JpZUtRWUdYcEVNS0xrR0dGQ1VSeUVESkhGTDZjcjF1RjREbERKQVREd0dCbktWdHpKQVMwdjd1NTN2ZlB2Y2M3NWoxZTU3bkwzWCt1MjE5M29jVVZETXJCOHdGWmdDakFjR2hPRWFPc040Qk53RDdrcjZVa1MxaWt3eXMyWmdIekNreUh6Z0RiQmQwc1c4K2QwQ21GbVBZSGhibnFLTTUvc0R5SitzOVprQVpqWU51RlhTY0hwWm82VGJNVjFSZ09EeUN5V04zd0d1aFBFVm1BZWNBcGJFanFRR3dNeDZBci9xTVA0NUdMc08zSlQwSWIzV3pDejgxMHZTNytUekdNQlZZRTRPd0hmZ2pCc0Via2o2MmQzOEJFQzdwTG1aQUdhMkRqaWFZL3dHc0UzUzA2SmVTZ0Q0a3ZXU2psWFdkbm5BelBvQXo0REJPWXFiSlBrWkY1WVV3RnRndEtSdnJpQUpNQXU0bHFkVlVsN29EZ2Vhd2pnbXFUVUY0Q1ptUy9JN1V3V3cxMk8yRElDWlRRYm1BNzZKTVFrZHV5VzFSQUQyU2RxUkJyZ1BUQ3dLWUdaK1VXY0dveU15MW1VQlBKQTBLUTN3Q2hoYUJNRE0xZ0xIOCtZQ1dRQ3ZKUTFMQTNob05lUXA5VHRnWmkzQXJyeTVRSXVrM1pFaitDR3BkeHJnZmFLNlplcXVFeURMQTUyU0JxWUJQS2xNejl0VkRvQW5wSmZBcDZESHkzTE1BeDJTWnFRQkRnS2Ivd1BnT2RBczZVVkZoNWsxU1BvUk9ZSkRrcmFrQVlwa1FUSThVR004dVpFSVFGYzJUQ1lpZDc4ZlExSzgwOWtEZUE3M0tQa25rVXU0VWRLUm1QZk1yRCtRTGxBekpIVlVlU0FvUGdjc0Q0cDhWOHRqT1Q4QzRLNXZ6UURZQUJ4T1BHdVR0S0R5dXlxdG10azQ0Q0hnbmRCa1NaNmNhaVFDMEE1c1Nub3BiR2d4a0c3THFtcEpyQndmQUxaMmwvUE43RExRdFl0QStBNDRHYjczRGYxamVrN1Y3bXVPSUZBUEFyeFFySTE1d015V0F1ZnpvaVh5M0J1UlJlbEttdFdTalFRdWVVTXE2WFFBR3d0NHBLd3BZZndqc0ZKU1RiWHRyaWwxQ0QrL1VTVU1KcGQ0aTc0cTZ6N2wxWGFIOERLOXNDUkVHN0JUMHBPczlVVmZUQnFCMWNDS2dpQnUrRVNSenFrUVFDSUJUZkFJQVR5OFl2STRWTURDTFZ0ZEFBa1E3d1c4SjBqS1dVbXJDbnFvYTFvcGdCQVZma0Vybm1pVjVPK1BkY3YvQUhoRFVhbDhJeVY1UTFPM2xBWUlYbGptbjVMS0pLWi9zSDhCOGpkWE1EdXRrNjRBQUFBQVNVVk9SSzVDWUlJPSI7CgkJCWh0bWwrPSAiPGRpdiBpZD0ncGx1Z2luX2tpd2lfYW5hbHlzaXNfdmlwX211c2ljX2JveF8iK3RoaXMuZWxlSWQrIic+IjsKCQkJaHRtbCs9ICI8ZGl2IGNsYXNzPSdwbHVnaW5faXRlbSBqdW1wX2FuYWx5c2lzX3dlYnNpdGUnIHRpdGxlPSfngrnmiJFWSVDpn7PkuZDnoLTop6PvvIzlhY3lrqLmiLfnq6/kuIvovb3vvIEnPjxpbWcgc3JjPSciK3ZpcEltZ0Jhc2U2NCsiJz48L2Rpdj4iOwoJCQlodG1sKz0gIjwvZGl2PiI7CgkJCSQoImJvZHkiKS5hcHBlbmQoaHRtbCk7CgkJCQoJCQkkKCIjcGx1Z2luX2tpd2lfYW5hbHlzaXNfdmlwX211c2ljX2JveF8iK3RoaXMuZWxlSWQrIiIpLm9uKCJjbGljayIsIGZ1bmN0aW9uKCl7CgkJCQl2YXIgcGxheVVybCA9ICR0aGF0LmdldFBsYXlVcmwoKTsKCQkJCWlmKCEhcGxheVVybCkgR01fb3BlbkluVGFiKHBsYXlVcmwsIGZhbHNlKTsKCQkJfSkKCQl9OwoJCXRoaXMub3BlcmF0aW9uPWZ1bmN0aW9uKCl7CgkJCXZhciAkdGhhdCA9IHRoaXM7CgkJCXNldEludGVydmFsKGZ1bmN0aW9uKCl7CgkJCQl2YXIgcGxheVVybCA9ICR0aGF0LmdldFBsYXlVcmwoKTsKCQkJCXZhciAkdmlwTXVzaWNCb3ggPSAkKCIjcGx1Z2luX2tpd2lfYW5hbHlzaXNfdmlwX211c2ljX2JveF8iKyR0aGF0LmVsZUlkKyIiKTsKCQkJCWlmKCEhcGxheVVybCl7CgkJCQkJaWYoJHZpcE11c2ljQm94Lmxlbmd0aD09MCl7CgkJCQkJCSR0aGF0LmdlbmVyYXRlSHRtbCgpOwoJCQkJCX0KCQkJCX1lbHNlewoJCQkJCSR2aXBNdXNpY0JveC5yZW1vdmUoKTsKCQkJCX0KCQkJfSwgMTAwKTsKCQl9OwoJCXRoaXMuc3RhcnQ9ZnVuY3Rpb24oKXsKCQkJaWYodGhpcy5pc1J1bigpKXsJCQkJCgkJCQl0aGlzLmFkZFN0eWxlKCk7CgkJCQl0aGlzLm9wZXJhdGlvbigpOwoJCQl9CgkJfTsKCX0KCQoJLyoqCgkgKiDmnaXmkJzkuIDkuIvvvIznvZHnm5jmkJzntKLlvJXmk47ml6Dnur/kuIvovb0KCSAqLwoJZnVuY3Rpb24gd2FuZ3BhblNlYXJjaEVuZ2luZXNIZWxwZXIoKXsKCQl0aGlzLnN0YXJ0ID0gZnVuY3Rpb24oKXsKCQkJbGV0ICR0aGF0ID0gdGhpcywgaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0OwoJCQlpZihob3N0PT09Ind3dy5sYWlzb3lpeGlhLmNvbSIgfHwgaG9zdD09PSJ3d3cueGlhb3podWt1YWlwYW4uY29tIil7CgkJCQl2YXIgJGRvd25sb2FkQnRuID0gJCgiI2Rvd25sb2FkSGFuZGxlciIpOwoJCQkJdmFyIGRvd25sb2FkdXJsID0gJGRvd25sb2FkQnRuLmRhdGEoImRvd25sb2FkdXJsIik7CgkJCQlpZighIWRvd25sb2FkdXJsKXsKCQkJCQl2YXIgd2FuZ3BhblVybCA9IHdpbmRvdy5hdG9iKGRvd25sb2FkdXJsKTsKCQkJCQkkZG93bmxvYWRCdG4uYWZ0ZXIoIjxkaXYgc3R5bGU9J3BhZGRpbmc6MTVweDtiYWNrZ3JvdW5kLWNvbG9yOiNlZWU7bWFyZ2luLXRvcDoxNXB4Oyc+5o+S5Lu25o+Q5Y+W5omA5b6X77yaPGEgdGFyZ2V0PSdfYmxhbmsnIGhyZWY9JyIrd2FuZ3BhblVybCsiJz4iK3dhbmdwYW5VcmwrIjwvYT48L2Rpdj4iKQoJCQkJfQoJCQl9CgkJfQoJfQoJCgkvKioKCSAqIOaQnOe0ouW8leaTjui1hOa6kOaPkOmGkgoJICovCglmdW5jdGlvbiBzZWFyY2hFbmdpbmVzTmF2aWdhdGlvbigpewoJCXRoaXMuc2VhcmNoRW5naW5lc0RhdGE9WwoJCQl7Imhvc3QiOiJ3d3cuYmFpZHUuY29tIiwgImVsZW1lbnQiOiIjY29udGVudF9yaWdodCIsImVsZW1lbnRJbnB1dCI6IiNrdyJ9LAoJCQl7Imhvc3QiOiJ3d3cuc28uY29tIiwgImVsZW1lbnQiOiIjc2lkZSIsImVsZW1lbnRJbnB1dCI6IiNrZXl3b3JkIn0sCgkJCXsiaG9zdCI6Ind3dy5zb2dvdS5jb20iLCAiZWxlbWVudCI6IiNyaWdodCIsImVsZW1lbnRJbnB1dCI6IiN1cHF1ZXJ5In0sCgkJCXsiaG9zdCI6ImNuLmJpbmcuY29tIiwgImVsZW1lbnQiOiIjYl9jb250ZXh0IiwiZWxlbWVudElucHV0IjoiI3NiX2Zvcm1fcSJ9LAoJCQl7Imhvc3QiOiJzby50b3V0aWFvLmNvbSIsICJlbGVtZW50IjoiLnMtc2lkZS1saXN0IiwiZWxlbWVudElucHV0IjoiaW5wdXRbdHlwZT0nc2VhcmNoJ10ifQoJCV07CgkJdGhpcy5nZXROYXZpZ2F0aW9uRGF0YSA9IGZ1bmN0aW9uKGVsZW1lbnQsIGVsZW1lbnRJbnB1dCl7CgkJCWNvbnN0IG5hdmlnYXRpb25EYXRhID0gWwoJCQkJeyJuYW1lIjoi6LWE5rqQ5pCc57SiIiwibGlzdCI6WwoJCQkJCXsibmFtZSI6IuS5puetvuaQnOe0oiIsICJ1cmwiOiJodHRwczovL3d3dy5ib29rbWFya2VhcnRoLmNvbS9zL3NlYXJjaD9xPUBAJmN1cnJlbnRQYWdlPTEifSwKCQkJCQl7Im5hbWUiOiLnvZHnm5jmkJzntKIiLCAidXJsIjoiaHR0cHM6Ly93d3cueGlhb3podWt1YWlwYW4uY29tL3Mvc2VhcmNoP3E9QEAmY3VycmVudFBhZ2U9MSJ9LAoJCQkJCXsibmFtZSI6Iui0oue7j+aQnOe0oiIsICJ1cmwiOiJodHRwczovL3d3dy5zaGFkdWl6aS5jb20vcy9zZWFyY2g/cT1AQCZjdXJyZW50UGFnZT0xIn0sCgkJCQkJeyJuYW1lIjoi55m+5bqm55m+56eRIiwgInVybCI6Imh0dHBzOi8vYmFpa2UuYmFpZHUuY29tL2l0ZW0vQEAifSwKCQkJCQl7Im5hbWUiOiLnn6XkuY7mkJzntKIiLCAidXJsIjoiaHR0cHM6Ly93d3cuemhpaHUuY29tL3NlYXJjaD90eXBlPWNvbnRlbnQmcT1AQCJ9LAoJCQkJCXsibmFtZSI6IkLnq5nmkJzntKIiLCAidXJsIjoiaHR0cHM6Ly9zZWFyY2guYmlsaWJpbGkuY29tL2FsbD9rZXl3b3JkPUBAJmZyb21fc291cmNlPXdlYnRvcF9zZWFyY2gmc3BtX2lkX2Zyb209MzMzLjg1MSJ9LAoJCQkJCXsibmFtZSI6IuaKlumfs+aQnOe0oiIsICJ1cmwiOiJodHRwczovL3d3dy5kb3V5aW4uY29tL3NlYXJjaC9AQD9haWQ9MGE5ZmM3NGItMDFlOC00ZmIwLTk1MDktMzA3YzVjMDdmZGExJnB1Ymxpc2hfdGltZT0wJnNvcnRfdHlwZT0wJnNvdXJjZT1ub3JtYWxfc2VhcmNoJnR5cGU9Z2VuZXJhbCJ9LAoJCQkJCXsibmFtZSI6IuaQnOeLl3zlhazkvJflj7ciLCAidXJsIjoiaHR0cHM6Ly93ZWl4aW4uc29nb3UuY29tL3dlaXhpbj90eXBlPTImcXVlcnk9QEAifSwKCQkJCQl7Im5hbWUiOiLmkJzni5d855+l5LmOIiwgInVybCI6Imh0dHBzOi8vd3d3LnNvZ291LmNvbS9zb2dvdT9waWQ9c29nb3Utd3NzZS1mZjExMWU0YTU0MDZlZDQwJmluc2l0ZT16aGlodS5jb20maWU9dXRmOCZwPTczMzUxMjAxJnF1ZXJ5PUBAJmllPXV0ZjgmcD03MzM1MTIwMSZxdWVyeT1AQCJ9LAoJCQkJCXsibmFtZSI6IuixhueTo+aQnOe0oiIsICJ1cmwiOiJodHRwczovL3d3dy5kb3ViYW4uY29tL3NlYXJjaD9xPUBAIn0sCgkJCQkJeyJuYW1lIjoi55S15b2x5pCc57SiIiwgInVybCI6Imh0dHBzOi8vd3d3LmN1cGZveC5jb20vc2VhcmNoP2tleT1AQCJ9LAoJCQkJCXsibmFtZSI6Iue7tOWfuueZvuenkSIsICJ1cmwiOiJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvdy9pbmRleC5waHA/c2VhcmNoPUBAIn0sCgkJCQkJeyJuYW1lIjoi5rOV5b6L5rOV6KeEIiwgInVybCI6Imh0dHBzOi8vd3d3LnBrdWxhdy5jb20vbGF3L2NobD9LZXl3b3Jkcz1AQCJ9LAoJCQkJCXsibmFtZSI6IlBQVOaQnOe0oiIsICJ1cmwiOiJodHRwczovL3d3dy5jaHVsaWFuc2hlamkuY29tL3Mvc2VhcmNoP3E9QEAmY3VycmVudFBhZ2U9MSZjPTEifSwKCQkJCQl7Im5hbWUiOiJpY29u5pCc57SiIiwgInVybCI6Imh0dHBzOi8vd3d3Lmljb25mb250LmNuL3NlYXJjaC9pbmRleD9zZWFyY2hUeXBlPWljb24mcT1AQCJ9LAoJCQkJCXsibmFtZSI6ImdpdGh1YiIsICJ1cmwiOiJodHRwczovL2dpdGh1Yi5jb20vc2VhcmNoP3E9QEAifSwKCQkJCQl7Im5hbWUiOiJjc2RuIiwgInVybCI6Imh0dHBzOi8vc28uY3Nkbi5uZXQvc28vc2VhcmNoP3E9QEAmdD0mdT0ifSwKCQkJCQl7Im5hbWUiOiLku4rlpKnkubDllaUiLCAidXJsIjoiaHR0cHM6Ly93d3cud2hhdGJ1eXRvZGF5LmNvbS9zL3NlYXJjaD9xPUBAJmN1cnJlbnRQYWdlPTEifQoJCQkJXX0sCgkJCQl7Im5hbWUiOiLmkJzntKLlvJXmk44iLCJsaXN0IjpbCgkJCQkJeyJuYW1lIjoi55m+5bqmIiwgInVybCI6Imh0dHBzOi8vd3d3LmJhaWR1LmNvbS9zP3dkPUBAIn0sCgkJCQkJeyJuYW1lIjoi5b+F5bqUIiwgInVybCI6Imh0dHBzOi8vY24uYmluZy5jb20vc2VhcmNoP3E9QEAifSwKCQkJCQl7Im5hbWUiOiJHb29nbGUiLCAidXJsIjoiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zZWFyY2g/cT1AQCJ9LAoJCQkJCXsibmFtZSI6IjM2MOaQnOe0oiIsICJ1cmwiOiJodHRwczovL3d3dy5zby5jb20vcz9pZT11dGYtOCZmcj1ub25lJnNyYz0zNjBzb3VfbmV3aG9tZSZubHB2PWJhc2VzdCZxPUBAIn0sCgkJCQkJeyJuYW1lIjoi5pCc54uXIiwgInVybCI6Imh0dHBzOi8vd3d3LnNvZ291LmNvbS93ZWI/cXVlcnk9QEAifSwKCQkJCQl7Im5hbWUiOiLlpLTmnaHmkJzntKIiLCAidXJsIjoiaHR0cHM6Ly9zby50b3V0aWFvLmNvbS9zZWFyY2g/ZHZwZj1wYyZzb3VyY2U9aW5wdXQma2V5d29yZD1AQCJ9CgkJCQldfQoJCQldOwoJCQljb25zdCAkdGhhdCA9IHRoaXM7CgkJCWNvbnN0IGNhY2hlTmF2aWdhdGlvbkRhdGEgPSAgY29tbW9uRnVuY3Rpb25PYmplY3QuR01nZXRWYWx1ZSgibmF2aWdhdGlvbl9kYXRhX2NhY2hlIixudWxsKTsKCQkJaWYoISFjYWNoZU5hdmlnYXRpb25EYXRhKXsKCQkJCSR0aGF0LmNyZWF0ZUh0bWwoZWxlbWVudCwgZWxlbWVudElucHV0LCBjYWNoZU5hdmlnYXRpb25EYXRhKTsKCQkJfWVsc2V7CgkJCQkkdGhhdC5jcmVhdGVIdG1sKGVsZW1lbnQsIGVsZW1lbnRJbnB1dCwgbmF2aWdhdGlvbkRhdGEpOwoJCQl9CgkJCS8v5Yik5pat5YC85piv5ZCm5pyJ5Y+Y5Yqo77yM5aaC5p6c5pyJ5Y+Y5Yqo5bCx5pu05paw5o2i5a2Y77yM566A5Y2V5aSE55CG77yM6ZW/5bqm5piv5ZCm5LiA6Ie0CgkJCWNvbW1vbkZ1bmN0aW9uT2JqZWN0LnJlcXVlc3QoImdldCIsICJodHRwOi8vYXBpLnN0YXRpY2oudG9wL3NjcmlwdC9hcGkvZ2V0L25hdmlnYXRpb25fanNvbl91cmwiLCBudWxsKS50aGVuKChyZXN1bHREYXRhKT0+ewoJCQkJbGV0IGRhdGFKc29uID0gSlNPTi5wYXJzZShyZXN1bHREYXRhLmRhdGEpOwoJCQkJaWYoISFkYXRhSnNvbiAmJiAhIWRhdGFKc29uLnVybCl7CgkJCQkJY29tbW9uRnVuY3Rpb25PYmplY3QucmVxdWVzdCgiZ2V0IiwgZGF0YUpzb24udXJsLCBudWxsKS50aGVuKChyZXN1bHREYXRhMik9PnsKCQkJCQkJbGV0IHNlcnZlck5hdmlnYXRpb25EYXRhID0gcmVzdWx0RGF0YTIuZGF0YTsKCQkJCQkJaWYoIWNhY2hlTmF2aWdhdGlvbkRhdGEgfHwgKCEhY2FjaGVOYXZpZ2F0aW9uRGF0YSAmJiBzZXJ2ZXJOYXZpZ2F0aW9uRGF0YS5sZW5ndGghPUpTT04uc3RyaW5naWZ5KGNhY2hlTmF2aWdhdGlvbkRhdGEpLmxlbmd0aCkpewoJCQkJCQkJY29tbW9uRnVuY3Rpb25PYmplY3QuR01zZXRWYWx1ZSgibmF2aWdhdGlvbl9kYXRhX2NhY2hlIiwgSlNPTi5wYXJzZShzZXJ2ZXJOYXZpZ2F0aW9uRGF0YSkpOwoJCQkJCQl9CgkJCQkJfSkuY2F0Y2goKCk9Pnt9KTsKCQkJCX0KCQkJfSkuY2F0Y2goKCk9Pnt9KTsKCQl9OwoJCXRoaXMuY3JlYXRlQ3NzID0gZnVuY3Rpb24oZWxlbWVudE51bSl7CgkJCXZhciBpbm5uZXJDc3MgPSBgCgkJCQkuZGRmZGZkYCtlbGVtZW50TnVtK2BkZmZzc3FhewoJCQkJCW1hcmdpbi10b3A6MTVweDsKCQkJCX0KCQkJCS5kZGZkZmRgK2VsZW1lbnROdW0rYGRmZnNzcWE6bnRoLWxhc3R7CgkJCQkJbWFyZ2luLXRvcDowcHg7CgkJCQl9CgkJCQkuZGRmZGZkYCtlbGVtZW50TnVtK2BkZmZzc3FhPi50aXRsZXsKCQkJCQlmb250LXNpemU6MTZweDsKCQkJCX0KCQkJCS5kZGZkZmRgK2VsZW1lbnROdW0rYGRmZnNzcWE+LmNvbnRlbnQtbGlzdHsKCQkJCQkKCQkJCX0KCQkJCS5kZGZkZmRgK2VsZW1lbnROdW0rYGRmZnNzcWE+LmNvbnRlbnQtbGlzdD5hewoJCQkJCWRpc3BsYXk6aW5saW5lLWJsb2NrOwoJCQkJCXdpZHRoOmNhbGMoMjUlIC0gMTZweCk7CgkJCQkJYm9yZGVyOjFweCBzb2xpZCAjY2NjOwoJCQkJCWJvcmRlci1yYWRpdXM6NHB4OwoJCQkJCXRleHQtYWxpZ246Y2VudGVyOwoJCQkJCW1hcmdpbi1yaWdodDoxNXB4OwoJCQkJCW1hcmdpbi10b3A6NnB4OwoJCQkJCW92ZXJmbG93OiBoaWRkZW47CgkJCQkJd2hpdGUtc3BhY2U6IG5vd3JhcDsKCQkJCQl0ZXh0LW92ZXJmbG93OmVsbGlwc2lzOwoJCQkJCXBhZGRpbmc6MnB4OwoJCQkJCWJveC1zaXppbmc6Ym9yZGVyLWJveDsKCQkJCQlmb250LXNpemU6MTNweDsKCQkJCQlsaW5lLWhlaWdodDoyMHB4OwoJCQkJfQoJCQkJLmRkZmRmZGArZWxlbWVudE51bStgZGZmc3NxYT4uY29udGVudC1saXN0PmE6bnRoLWNoaWxkKDRuKXsKCQkJCQltYXJnaW4tcmlnaHQ6MHB4OwoJCQkJfQoJCQlgOwoJCQlpZigkKCIjcGx1Z2luX2Nzc19zdHlsZV9kZGRzb28iKS5sZW5ndGg9PTApewoJCQkJJCgiYm9keSIpLnByZXBlbmQoIjxzdHlsZSBpZD0ncGx1Z2luX2Nzc19zdHlsZV9kZGRzb28nPiIraW5ubmVyQ3NzKyI8L3N0eWxlPiIpOwoJCQl9CgkJfTsKCQl0aGlzLmNyZWF0ZUh0bWwgPSBmdW5jdGlvbihlbGVtZW50LCBlbGVtZW50SW5wdXQsIG5hdmlnYXRpb25EYXRhKXsKCQkJJCgiI2RzZHNkOTltbW1qajc3NjAwMTEiKS5yZW1vdmUoKTsKCQkJCgkJCXZhciBpc0NvbXBsYXRlID0gdHJ1ZTsKCQkJY29uc3QgaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0OwoJCQljb25zdCBzZWxmID0gdGhpczsKCQkJY29uc3QgZWxlbWVudE51bSA9IGNvbW1vbkZ1bmN0aW9uT2JqZWN0LnJhbmRvbU51bWJlcigpOwoJCQljb25zdCBlbGVtZW50SW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpewoJCQkJaWYoaXNDb21wbGF0ZSl7CgkJCQkJdmFyICRlbGVtZW50ID0gJChlbGVtZW50KTsKCQkJCQl2YXIgJGJveCA9ICQoIiNkc2RzZDk5bW1tamo3NzYwMDExIik7CgkJCQkJaXNDb21wbGF0ZSA9IGZhbHNlOwoJCQkJCWlmKCRlbGVtZW50Lmxlbmd0aCE9MCAmJiAkYm94Lmxlbmd0aD09MCl7CgkJCQkJCXZhciBodG1sID0gIiI7CgkJCQkJCWh0bWwgICs9ICI8ZGl2IGlkPSdkc2RzZDk5bW1tamo3NzYwMDExJz4iOwoJCQkJCQlmb3IodmFyIGk9MDsgaTxuYXZpZ2F0aW9uRGF0YS5sZW5ndGg7IGkrKyl7CgkJCQkJCQlodG1sICArPSAiPGRpdiBjbGFzcz0nZGRmZGZkIitlbGVtZW50TnVtKyJkZmZzc3FhJz4iOwoJCQkJCQkJaHRtbCAgKz0gIjxkaXYgY2xhc3M9J3RpdGxlJz48Yj4iK25hdmlnYXRpb25EYXRhW2ldLm5hbWUrIjwvYj48L2Rpdj4iOwoJCQkJCQkJaHRtbCAgKz0gIjxkaXYgY2xhc3M9J2NvbnRlbnQtbGlzdCc+IjsKCQkJCQkJCWZvcih2YXIgaj0wO2o8bmF2aWdhdGlvbkRhdGFbaV0ubGlzdC5sZW5ndGg7aisrKXsKCQkJCQkJCQlsZXQgdXJsID0gbmF2aWdhdGlvbkRhdGFbaV0ubGlzdFtqXS51cmw7CgkJCQkJCQkJbGV0IG5hbWUgPSBuYXZpZ2F0aW9uRGF0YVtpXS5saXN0W2pdLm5hbWU7CgkJCQkJCQkJaWYodXJsLmluZGV4T2YoaG9zdCkhPS0xKXsKCQkJCQkJCQkJY29udGludWU7CgkJCQkJCQkJfQoJCQkJCQkJCWh0bWwgKz0gIjxhIHRhcmdldD0nX2JsYW5rJyBkYXRhLXVybD0nIit1cmwrIicgaHJlZj0namF2YXNjcmlwdDp2b2lkKDApOyc+IituYW1lKyI8L2E+IgkJCQkKCQkJCQkJCX0KCQkJCQkJCWh0bWwgKz0gIjwvZGl2PiI7CgkJCQkJCQlodG1sICs9ICI8L2Rpdj4iOwoJCQkJCQl9CgkJCQkJCWh0bWwgKz0gIjxkaXYgc3R5bGU9J21hcmdpbi1ib3R0b206MTBweDttYXJnaW4tdG9wOjVweDtmb250LXNpemU6MTJweDsnPjxhIHRhcmdldD0nX2JsYW5rJyBocmVmPSdodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvNDE4ODA0Jz4q6K+l5pWw5o2u55Sx5rK554y06ISa5pys5o+Q5L6bPC9hPjwvZGl2PiI7CgkJCQkJCWh0bWwgKz0gIjwvZGl2PiI7CgkJCQkJCQoJCQkJCQkvL+a3u+WKoGNzcyDmt7vliqBodG1sCgkJCQkJCXNlbGYuY3JlYXRlQ3NzKGVsZW1lbnROdW0pOwoJCQkJCQkkZWxlbWVudC5wcmVwZW5kKGh0bWwpOwoJCQkJCQkKCQkJCQkJJCgiI2RzZHNkOTltbW1qajc3NjAwMTEgYSIpLm9uKCJjbGljayIsIGZ1bmN0aW9uKGUpewoJCQkJCQkJY29tbW9uRnVuY3Rpb25PYmplY3QuR01vcGVuSW5UYWIoJCh0aGlzKS5kYXRhKCJ1cmwiKS5yZXBsYWNlKCJAQCIsJChlbGVtZW50SW5wdXQpLnZhbCgpKSxmYWxzZSk7CgkJCQkJCQllLnByZXZlbnREZWZhdWx0KCkKCQkJCQkJfSk7CgkJCQkJfQoJCQkJCWlzQ29tcGxhdGUgPSB0cnVlOwoJCQkJfQoJCQl9LCAxMDApOwkJCQoJCX07CgkJdGhpcy5zaG93ID0gZnVuY3Rpb24oKXsKCQkJY29uc3Qgc2VsZiA9IHRoaXM7CgkJCWNvbnN0IGhvc3QgPSB3aW5kb3cubG9jYXRpb24uaG9zdDsKCQkJY29uc3QgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwoJCQlpZigoaG9zdD09PSJ3d3cuYmFpZHUuY29tIikKCQkJCXx8IChob3N0PT09Ind3dy5zby5jb20iICYmIGhyZWYuaW5kZXhPZigid3d3LnNvLmNvbS9zIikhPS0xKQoJCQkJfHwgKGhvc3Q9PT0id3d3LnNvZ291LmNvbSIgJiYgaHJlZi5pbmRleE9mKCJ3d3cuc29nb3UuY29tL3dlYj9xdWVyeSIpIT0tMSkKCQkJCXx8IChob3N0PT09ImNuLmJpbmcuY29tIiAmJiBocmVmLmluZGV4T2YoImNuLmJpbmcuY29tL3NlYXJjaCIpIT0tMSkKCQkJCXx8IChob3N0PT09InNvLnRvdXRpYW8uY29tIiAmJiBocmVmLmluZGV4T2YoInNvLnRvdXRpYW8uY29tL3NlYXJjaCIpIT0tMSkpewoJCQkJbGV0IGN1cnJlbnRTZWFyY2hFbmdpbmVzRGF0YSA9IG51bGw7CgkJCQlmb3IodmFyIGk9MDsgaTxzZWxmLnNlYXJjaEVuZ2luZXNEYXRhLmxlbmd0aDsgaSsrKXsKCQkJCQlpZihob3N0PT09c2VsZi5zZWFyY2hFbmdpbmVzRGF0YVtpXS5ob3N0KXsKCQkJCQkJY3VycmVudFNlYXJjaEVuZ2luZXNEYXRhID0gc2VsZi5zZWFyY2hFbmdpbmVzRGF0YVtpXTsKCQkJCQl9CgkJCQl9CgkJCQlpZihjdXJyZW50U2VhcmNoRW5naW5lc0RhdGEhPW51bGwpewoJCQkJCXNlbGYuZ2V0TmF2aWdhdGlvbkRhdGEoY3VycmVudFNlYXJjaEVuZ2luZXNEYXRhLmVsZW1lbnQsIGN1cnJlbnRTZWFyY2hFbmdpbmVzRGF0YS5lbGVtZW50SW5wdXQpOwoJCQkJfQoJCQl9CgkJfTsKCQl0aGlzLnN0YXJ0ID0gZnVuY3Rpb24oKXsKCQkJdGhpcy5zaG93KCk7CgkJfTsKCX0KCQoJLyoqCgkgKiDnn6XkuY7liqnmiYvlvIDlp4sKCSAqLwoJLy8vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCS8v5pys6ISa5pys6YOo5YiG5Luj56CB5YCf6Ym06Ieq44CQ5Lq66ay85oOF5pyq5LqG44CR55qE6ISa5pys77yM5bey57uP6I635b6X5Y6f5L2c6ICF55qE5a6M5YWo5o6I5p2D77yM6ISa5pys5Luj56CB5Y+v5Lul6ZqP5oSP5L+u5pS55L2/55So77yM54m55q2k55Sz5piO77yBCgkvLy8v44CQ5Lq66ay85oOF5pyq5LqG44CR6ISa5pys5ZCN5a2X77ya55+l5LmO572R6aG15Yqp5omLCgkvLy8v44CQ5Lq66ay85oOF5pyq5LqG44CR6ISa5pys5Zyw5Z2A77yaaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzM4NDE3MgoJLy8vL+acrOiEmuacrOWBmuWHuueahOS/ruaUue+8mumHjeaehOS6humDqOWIhumAu+i+kQoJLy8vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCWZ1bmN0aW9uIHpoaWh1SGVscGVyKCl7CgkJdGhpcy5tYXJrQXJ0aWNsZU9yUXVlc3Rpb24gPSBmdW5jdGlvbigpewoJCQl2YXIgcXVlc3Rpb25zQ3NzID0gYAoJCQkJLkFuc3dlckl0ZW0gLkNvbnRlbnRJdGVtLXRpdGxlIGE6OmJlZm9yZSB7CgkJCQkgICAgY29udGVudDogJ+mXrumimCc7CgkJCQkgICAgY29sb3I6ICNmNjhiODM7CgkJCQkgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2OGI4MzMzOwoJCQkJICAgIGZvbnQtd2VpZ2h0OiBib2xkOwoJCQkJICAgIGZvbnQtc2l6ZTogMTNweDsKCQkJCSAgICBwYWRkaW5nOiAxcHggNHB4IDBweDsKCQkJCSAgICBib3JkZXItcmFkaXVzOiAycHg7CgkJCQkgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwoJCQkJICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7CgkJCQkgICAgbWFyZ2luOiA0cHggNHB4IDRweCAwcHg7CgkJCQl9CgkJCQkuQXJ0aWNsZUl0ZW0gLkNvbnRlbnRJdGVtLXRpdGxlIGE6OmJlZm9yZSB7CgkJCQkgICAgY29udGVudDogJ+aWh+eroCc7CgkJCQkgICAgY29sb3I6ICMwMDY2RkY7CgkJCQkgICAgYmFja2dyb3VuZC1jb2xvcjogI0U1RUZGRjsKCQkJCSAgICBmb250LXdlaWdodDogYm9sZDsKCQkJCSAgICBmb250LXNpemU6IDEzcHg7CgkJCQkgICAgcGFkZGluZzogMXB4IDRweCAwOwoJCQkJICAgIGJvcmRlci1yYWRpdXM6IDJweDsKCQkJCSAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgkJCQkgICAgdmVydGljYWwtYWxpZ246IHRvcDsKCQkJCSAgICAgbWFyZ2luOiA0cHggNHB4IDRweCAwcHg7CgkJCQl9CgkJCQkuVG9wc3RvcnlJdGVtLS1hZHZlcnRDYXJkewoJCQkJCXRleHQtZGVjb3JhdGlvbjpsaW5lLXRocm91Z2g7CgkJCQl9CgkJCWA7CgkJCWNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNYWRkU3R5bGUocXVlc3Rpb25zQ3NzKTsKCQl9CgkJdGhpcy5hdXRvSnVtcFRhcmdldCA9IGZ1bmN0aW9uKCl7CgkJCXZhciByZWdleFJlc3VsdCA9IGxvY2F0aW9uLnNlYXJjaC5tYXRjaCgvdGFyZ2V0PSguKz8pKCZ8JCkvKTsKCQkJaWYocmVnZXhSZXN1bHQgJiYgcmVnZXhSZXN1bHQubGVuZ3RoPT0zKXsKCQkJCWxvY2F0aW9uLmhyZWYgPSBkZWNvZGVVUklDb21wb25lbnQocmVnZXhSZXN1bHRbMV0pOwoJCQl9CgkJfTsKCQl0aGlzLm1hcmtRdWVzdGlvbkRhdGUgPSBmdW5jdGlvbigpewoJCQkvKioKCQkJICogQHBhcmFtIHtPYmplY3R9IHRpbWUKCQkJICogQHBhcmFtIHtPYmplY3R9IGZvcm1hdAoJCQkgKiDml7bpl7TmoLzlvI/ljJYKCQkJICogRGF0ZUZvcm1hdChuZXcgRGF0ZShkYXRlQ3JlYXRlZCksICJ5eXl5LU1NLWRkIGhoOm1tOnNzIikKCQkJICovCgkJCWZ1bmN0aW9uIERhdGVGb3JtYXQodGltZSwgZm9ybWF0KSB7ICAvLwoJCQkgICAgdmFyIG8gPSB7CgkJCSAgICAgICAgIk0rIjogdGltZS5nZXRNb250aCgpICsgMSwgLy/mnIjku70gCgkJCSAgICAgICAgImQrIjogdGltZS5nZXREYXRlKCksIC8v5pelIAoJCQkgICAgICAgICJoKyI6IHRpbWUuZ2V0SG91cnMoKSwgLy/lsI/ml7YgCgkJCSAgICAgICAgIm0rIjogdGltZS5nZXRNaW51dGVzKCksIC8v5YiGIAoJCQkgICAgICAgICJzKyI6IHRpbWUuZ2V0U2Vjb25kcygpLCAvL+enkiAKCQkJICAgICAgICAicSsiOiBNYXRoLmZsb29yKCh0aW1lLmdldE1vbnRoKCkgKyAzKSAvIDMpLCAvL+Wto+W6piAKCQkJICAgICAgICAiUyI6IHRpbWUuZ2V0TWlsbGlzZWNvbmRzKCkgLy/mr6vnp5IgCgkJCSAgICB9OwoJCQkgICAgaWYoLyh5KykvLnRlc3QoZm9ybWF0KSl7CgkJCQkJZm9ybWF0ID0gZm9ybWF0LnJlcGxhY2UoUmVnRXhwLiQxLCAodGltZS5nZXRGdWxsWWVhcigpICsgIiIpLnN1YnN0cig0IC0gUmVnRXhwLiQxLmxlbmd0aCkpOwoJCQkJfQoJCQkgICAgZm9yKHZhciBrIGluIG8pewoJCQkgICAgICAgIGlmKG5ldyBSZWdFeHAoIigiICsgayArICIpIikudGVzdChmb3JtYXQpKXsKCQkJICAgICAgICAgICAgZm9ybWF0ID0gZm9ybWF0LnJlcGxhY2UoUmVnRXhwLiQxLCAoUmVnRXhwLiQxLmxlbmd0aCA9PSAxKSA/IChvW2tdKSA6ICgoIjAwIiArIG9ba10pLnN1YnN0cigoIiIgKyBvW2tdKS5sZW5ndGgpKSk7CgkJCQkJfQoJCQkJfQoJCQkgICAgcmV0dXJuIGZvcm1hdDsKCQkJfQoJCQkKCQkJLyoqCgkJCSAqIOS4uumXrumimOa3u+WKoOWIm+W7uuaXtumXtOWSjOe8lui+keaXtumXtAoJCQkgKi8KCQkJZnVuY3Rpb24gYWRkRGF0ZVF1ZXN0aW9uKCkgewoJCQkJdmFyIHRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLlF1ZXN0aW9uUGFnZSIpOwoJCQkJaWYoISF0aXRsZSl7CgkJCQkJdmFyIGRhdGVDcmVhdGVkID0gdGl0bGUucXVlcnlTZWxlY3RvcigiW2l0ZW1wcm9wfj1kYXRlQ3JlYXRlZF1bY29udGVudF0iKS5jb250ZW50OwoJCQkJCXZhciBkYXRlTW9kaWZpZWQgPSB0aXRsZS5xdWVyeVNlbGVjdG9yKCJbaXRlbXByb3B+PWRhdGVNb2RpZmllZF1bY29udGVudF0iKS5jb250ZW50OwoJCQkJCXZhciBjcmVhdGVEYXRlID0gRGF0ZUZvcm1hdChuZXcgRGF0ZShkYXRlQ3JlYXRlZCksICJ5eXl5LU1NLWRkIGhoOm1tOnNzIik7CgkJCQkJdmFyIGVkaXREYXRlID0gRGF0ZUZvcm1hdChuZXcgRGF0ZShkYXRlTW9kaWZpZWQpLCAieXl5eS1NTS1kZCBoaDptbTpzcyIpOwoJCQkJCQoJCQkJCXZhciBzaWRlID0gdGl0bGUucXVlcnlTZWxlY3RvcigiLlF1ZXN0aW9uSGVhZGVyLXNpZGUiKTsKCQkJCQl2YXIgdGltZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJCQkJCXRpbWVEaXYuaW5uZXJIVE1MID0gYDxwPuWIm+W7uuS6jjombmJzcDske2NyZWF0ZURhdGV9PC9wPjxwPue8lui+keS6jjombmJzcDske2VkaXREYXRlfTwvcD5gOwoJCQkJCXRpbWVEaXYuc3R5bGUuY3NzVGV4dCA9ICdjb2xvcjojNmY2ZjZmO2ZvbnQtc2l6ZToxM3B4Oyc7CgkJCQkJc2lkZS5hcHBlbmRDaGlsZCh0aW1lRGl2KTsKCQkJCX0KCQkJfQoJCQkKCQkJLyoqCgkJCSAqIOS4uuWbnuetlOa3u+WKoOWIm+W7uuaXtumXtOWSjOe8lui+keaXtumXtAoJCQkgKi8KCQkJZnVuY3Rpb24gYWRkVGltZUFuc3dlckl0ZW1zKCkgewoJCQkJdmFyIGxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuQW5zd2VySXRlbSIpOwoJCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7CgkJCQkJdmFyIGl0ZW0gPSBsaXN0W2ldOwoJCQkJCWlmIChpdGVtLmdldEF0dHJpYnV0ZSgnemhfZGF0ZV9taycpID09PSAndHJ1ZScpIHsKCQkJCQkJY29udGludWU7CgkJCQkJfQoJCQkJCWl0ZW0uc2V0QXR0cmlidXRlKCd6aF9kYXRlX21rJywgJ3RydWUnKTsKCQkJCQl0cnl7CQkJCQkKCQkJCQkJdmFyIGRhdGVDcmVhdGVkID0gaXRlbS5xdWVyeVNlbGVjdG9yKCJbaXRlbXByb3B+PWRhdGVDcmVhdGVkXVtjb250ZW50XSIpLmNvbnRlbnQ7CgkJCQkJCXZhciBkYXRlTW9kaWZpZWQgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoIltpdGVtcHJvcH49ZGF0ZU1vZGlmaWVkXVtjb250ZW50XSIpLmNvbnRlbnQ7CgkJCQkJCXZhciBjcmVhdGVEYXRlID0gRGF0ZUZvcm1hdChuZXcgRGF0ZShkYXRlQ3JlYXRlZCksICJ5eXl5LU1NLWRkIGhoOm1tOnNzIik7CgkJCQkJCXZhciBlZGl0RGF0ZSA9IERhdGVGb3JtYXQobmV3IERhdGUoZGF0ZU1vZGlmaWVkKSwgInl5eXktTU0tZGQgaGg6bW06c3MiKTsKCQkJIAoJCQkJCQl2YXIgc2lkZUl0ZW0gPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoIi5Db250ZW50SXRlbS1tZXRhIik7CgkJCQkJCXZhciB0aW1lRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CgkJCQkJCXRpbWVEaXYuaW5uZXJIVE1MID0gYOWIm+W7uuS6jjombmJzcDske2NyZWF0ZURhdGV9Jm5ic3A7Jm5ic3A7Jm5ic3A757yW6L6R5LqOOiZuYnNwOyR7ZWRpdERhdGV9YDsKCQkJCQkJdGltZURpdi5jbGFzcyA9ICJWb3RlcnMiOwoJCQkJCQl0aW1lRGl2LnN0eWxlLmNzc1RleHQgPSAnY29sb3I6IzZmNmY2Zjtmb250LXNpemU6MTNweDtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6NXB4IDBweDsnOwoJCQkJCQlzaWRlSXRlbS5hcHBlbmRDaGlsZCh0aW1lRGl2KTsKCQkJCQl9Y2F0Y2goZSl7fQoJCQkJfQoJCQl9CgkJCWFkZERhdGVRdWVzdGlvbigpOwoJCQlzZXRJbnRlcnZhbChmdW5jdGlvbigpeyAvL+W+queOr+ajgOafpeWbnuetlOWSjOS/ruaUueaXtumXtAoJCQkJYWRkVGltZUFuc3dlckl0ZW1zKCk7CgkJCX0sNDAwKTsKCQl9OwoJCXRoaXMuc2hvd1F1ZXN0aW9uQXV0aG9yID0gZnVuY3Rpb24oKXsKCQkJLy/mraTlpITku6PnoIHlgJ/pibToh6ogLSDnn6XkuY7lop7lvLoKCQkJLy/ljp/kvZzogIXvvJpYLkkuVQoJCQkvL2h0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vc2NyaXB0cy80MTkwODEtJUU3JTlGJUE1JUU0JUI5JThFJUU1JUEyJTlFJUU1JUJDJUJBCgkJCWlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuQnJhbmRRdWVzdGlvblN5bWJvbCwgLlF1ZXN0aW9uQXV0aG9yJykpIHJldHVybgoJCQlsZXQgcUpzb24gPSBKU09OLnBhcnNlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNqcy1pbml0aWFsRGF0YScpLnRleHRDb250ZW50KS5pbml0aWFsU3RhdGUuZW50aXRpZXMucXVlc3Rpb25zWy9cZCsvLmV4ZWMobG9jYXRpb24ucGF0aG5hbWUpWzBdXS5hdXRob3IsCgkJCQlodG1sID0gYDxkaXYgY2xhc3M9IkJyYW5kUXVlc3Rpb25TeW1ib2wiPjxhIGNsYXNzPSJCcmFuZFF1ZXN0aW9uU3ltYm9sLWJyYW5kTGluayIgaHJlZj0iL3Blb3BsZS8ke3FKc29uLnVybFRva2VufSI+PGltZyByb2xlPSJwcmVzZW50YXRpb24iIHNyYz0iJHtxSnNvbi5hdmF0YXJVcmx9IiBjbGFzcz0iQnJhbmRRdWVzdGlvblN5bWJvbC1sb2dvIiBhbHQ9IiI+PHNwYW4gY2xhc3M9IkJyYW5kUXVlc3Rpb25TeW1ib2wtbmFtZSI+JHtxSnNvbi5uYW1lfTwvc3Bhbj48L2E+PGRpdiBjbGFzcz0iQnJhbmRRdWVzdGlvblN5bWJvbC1kaXZpZGVyIiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDVweDttYXJnaW4tcmlnaHQ6IDEwcHg7Ij48L2Rpdj48L2Rpdj5gOwoJCQlkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuUXVlc3Rpb25IZWFkZXItdG9waWNzJykuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmViZWdpbicsIGh0bWwpOwoJCX07CgkJdGhpcy5hdXRvSGVpZ2h0UXVhbGl0eVBpYyA9IGZ1bmN0aW9uKCl7CgkJCXNldEludGVydmFsKGZ1bmN0aW9uKCl7CgkJCQkkKCJib2R5IikuZmluZCgiaW1nIikuZWFjaChmdW5jdGlvbigpewoJCQkJCXZhciBkYXRhb3JpZ2luYWwgPSAkKHRoaXMpLmF0dHIoImRhdGEtb3JpZ2luYWwiKTsKCQkJCQlpZighIWRhdGFvcmlnaW5hbCl7CgkJCQkJCSQodGhpcykuYXR0cigic3JjIiwgZGF0YW9yaWdpbmFsKTsKCQkJCQl9CgkJCQl9KTsKCQkJfSwgNTAwKTsKCQl9OwoJCS8v5Luj56CB5byA5Y+R5LitCgkJdGhpcy5kb3dubG9hZFZpZGVvID0gZnVuY3Rpb24oKXsKCQkJCgkJfTsKCQl0aGlzLnN0YXJ0ID0gZnVuY3Rpb24oKXsKCQkJY29uc3QgaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0OwoJCQlpZihob3N0ID09ICJsaW5rLnpoaWh1LmNvbSIpeyAKCQkJCXRoaXMuYXV0b0p1bXBUYXJnZXQoKTsKCQkJfQoJCQlpZihob3N0LmluZGV4T2YoInpoaWh1LmNvbSIpIT0tMSl7CgkJCQlpZih3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCJ3d3cuemhpaHUuY29tL3F1ZXN0aW9uLyIpIT0tMSl7CgkJCQkJdGhpcy5tYXJrUXVlc3Rpb25EYXRlKCk7ICAgLy/pl67popjml6XmnJ8KCQkJCQl0aGlzLnNob3dRdWVzdGlvbkF1dGhvcigpOyAvL+aPkOmXruiAheagh+ivhuWHuuadpQoJCQkJfQoJCQkJdGhpcy5kb3dubG9hZFZpZGVvKCk7ICAgICAgICAgIC8v55+l5LmO6KeG6aKR5LiL6L29CgkJCQl0aGlzLm1hcmtBcnRpY2xlT3JRdWVzdGlvbigpOyAgLy/moIfor4bmlofnq6Dov5jmmK/mj5Dpl64KCQkJCXRoaXMuYXV0b0hlaWdodFF1YWxpdHlQaWMoKTsgICAvL+iHquWKqOmrmOa4heWbvgoJCQl9CgkJfTsKCX0KCQkKCS8v5pyA5ZCO57uf5LiA6LCD55SoCgl0cnl7CgkJaWYoZnVuY3Rpb25Db250cm9sbGVyLnN1cGVyVmlkZW9IZWxwZXIpewoJCQljb25zdCBzdXBlclZpZGVvSGVscGVyT2JqZWN0ID0gbmV3IHN1cGVyVmlkZW9IZWxwZXIobmV3T3JpZ2luYWxJbnRlcmZhY2VMaXN0KTsKCQkJaWYoc3VwZXJWaWRlb0hlbHBlck9iamVjdC5pc1J1bigpKXsKCQkJCWlmKGNvbW1vbkZ1bmN0aW9uT2JqZWN0LkdNZ2V0VmFsdWUoImNvcHlyaWdodF92aWRlb19yZW1pbmQiLG51bGwpPT09InRydWUiKXsKCQkJCQlzdXBlclZpZGVvSGVscGVyT2JqZWN0LnN0YXJ0KCk7CgkJCQl9ZWxzZXsKCQkJCQl2YXIgcj1jb25maXJtKAoJCQkJCQki6ISa5pys6L+Q6KGM5o+Q6YaS77yB77yB77yBXHUwMDBkIisKCQkJCQkJIjHjgIFWSVDop4bpopHop6PmnpDkuK3miYDnlKjliLDnmoTop6PmnpDmjqXlj6Plhajpg6jmlLbpm4boh6rkupLogZTnvZHvvIjmupDnoIHlj6/op4HvvInvvIzniYjmnYPpl67popjor7fogZTns7vnm7jlhbPop6PmnpDmjqXlj6PmiYDmnInogIXvvIFcdTAwMGQiKwoJCQkJCQkiMuOAgeS4uuWIm+mAoOiJr+WlveeahOWIm+S9nOawm+WbtO+8jOivt+Wkp+WutuaUr+aMgeato+eJiO+8gVx1MDAwZCIrCgkJCQkJCSIz44CB6ISa5pys5LuF6ZmQ5Liq5Lq65a2m5Lmg5Lqk5rWB77yM5YiH5Yu/55So5LqO5Lu75L2V5ZWG5Lia562J5YW25a6D55So6YCU77yBXHUwMDBkIisKCQkJCQkJIjTjgIHnu6fnu63kvb/nlKjvvIzljbPooajmmI7kvaDlt7Lnu4/mmI7noa7kvb/nlKjohJrmnKzlj6/og73luKbmnaXnmoTpo47pmanvvIzkuJTmhL/mhI/oh6rooYzmib/mi4Xnm7jlhbPpo47pmanvvIzlr7nkuo7po47pmanohJrmnKzkuI3mib/mi4Xku7vkvZXotKPku7vvvIFcdTAwMGQiKwoJCQkJCQkiNeOAgeatpOaPkOmGkuWPquW8ueWHuuS4gOasoe+8jOehruiupOWQju+8jOWQjue7reWwhuS4jeWcqOW8ueWHuu+8jOivt+efpeaCie+8gSIKCQkJCQkpOwoJCQkJCWlmKHI9PXRydWUpewoJCQkJCQljb21tb25GdW5jdGlvbk9iamVjdC5HTXNldFZhbHVlKCJjb3B5cmlnaHRfdmlkZW9fcmVtaW5kIiwidHJ1ZSIpOwoJCQkJCQlzdXBlclZpZGVvSGVscGVyT2JqZWN0LnN0YXJ0KCk7CgkJCQkJfQoJCQkJfQoJCQl9CgkJCQoJCQkobmV3IHN1cGVyVmlkZW9IZWxwZXJNb2JpbGUobmV3T3JpZ2luYWxJbnRlcmZhY2VMaXN0KSkuc3RhcnQoKTsKCQl9Cgl9Y2F0Y2goZSl7CgkJY29uc29sZS5sb2coIuWFqOe9kVZJUOino+aekO+8mmVycm9y77yaIitlKTsKCX0KCQoJdHJ5ewoJCWlmKGZ1bmN0aW9uQ29udHJvbGxlci5hYnJvYWRWaWRlb0hlbHBlcil7CgkJCShuZXcgYWJyb2FkVmlkZW9IZWxwZXIoKSkuc3RhcnQoKTsKCQl9Cgl9Y2F0Y2goZSl7CgkJY29uc29sZS5sb2coIuWbveWkluinhumikeino+aekO+8mmVycm9y77yaIitlKTsKCX0KCQoJdHJ5ewoJCShuZXcgcXVlcnlDb3Vwb24oKSkuc3RhcnQoKTsKCX1jYXRjaChlKXsKCQljb25zb2xlLmxvZygi5LyY5oOg5Yi45p+l6K+i77yaZXJyb3LvvJoiK2UpOwoJfQoJCgl0cnl7CgkJaWYoZnVuY3Rpb25Db250cm9sbGVyLnN1cGVyTXVzaWNIZWxwZXIpewoJCQkobmV3IHN1cGVyTXVzaWNIZWxwZXIoKSkuc3RhcnQoKTsKCQl9Cgl9Y2F0Y2goZSl7CgkJY29uc29sZS5sb2coIuWFqOe9kemfs+S5kOS4i+i9ve+8mmVycm9y77yaIitlKTsKCX0KCQoJdHJ5ewoJCWlmKGZ1bmN0aW9uQ29udHJvbGxlci5iaWxpYmlsaUhlbHBlcil7CgkJCW5ldyBiaWxpYmlsaUhlbHBlcihjb21tb25GdW5jdGlvbk9iamVjdCkuc3RhcnQoKTsKCQl9Cgl9Y2F0Y2goZSl7CgkJY29uc29sZS5sb2coIkLnq5nop4bpopHkuIvovb3vvJplcnJvcu+8miIrZSk7Cgl9CgkKCXRyeXsKCQlpZihmdW5jdGlvbkNvbnRyb2xsZXIud2FuZ3BhblNlYXJjaEVuZ2luZXNIZWxwZXIpewoJCQluZXcgd2FuZ3BhblNlYXJjaEVuZ2luZXNIZWxwZXIoY29tbW9uRnVuY3Rpb25PYmplY3QpLnN0YXJ0KCk7CgkJfQoJfWNhdGNoKGUpewoJCWNvbnNvbGUubG9nKCLnvZHnm5jmkJzntKLlvJXmk47noLTop6PvvJplcnJvcu+8miIrZSk7Cgl9CgkKCXRyeXsKCQlpZihmdW5jdGlvbkNvbnRyb2xsZXIuc2VhcmNoRW5naW5lc05hdmlnYXRpb24pewoJCQluZXcgc2VhcmNoRW5naW5lc05hdmlnYXRpb24oY29tbW9uRnVuY3Rpb25PYmplY3QpLnN0YXJ0KCk7CgkJfQoJfWNhdGNoKGUpewoJCWNvbnNvbGUubG9nKCLmkJzntKLlvJXmk47lr7zoiKrvvJplcnJvcu+8miIrZSk7Cgl9CgkKCXRyeXsKCQlpZihmdW5jdGlvbkNvbnRyb2xsZXIuemhpaHVIZWxwZXIpewoJCQluZXcgemhpaHVIZWxwZXIoY29tbW9uRnVuY3Rpb25PYmplY3QpLnN0YXJ0KCk7CgkJfQoJfWNhdGNoKGUpewoJCWNvbnNvbGUubG9nKCLnn6XkuY7liqnmiYvvvJplcnJvcu+8miIrZSk7Cgl9Cn0pKCk7","requires":[{"meta":{"name":"jquery.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery/3.2.1/jquery.min.js","ts":1655778453155,"mimetype":"text/javascript"},"source":""}]}]}